import * as a from "three";
import { Mesh as ii, OrthographicCamera as ni, BufferGeometry as Ci, Float32BufferAttribute as sI, Loader as Ei, FileLoader as ai, Quaternion as BI, Vector3 as JA, Color as QI, Matrix4 as pe } from "three";
const oi = new ni(-1, 1, 1, -1, 0, 1);
class ri extends Ci {
  constructor() {
    super(), this.setAttribute("position", new sI([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3)), this.setAttribute("uv", new sI([0, 2, 0, 0, 2, 0], 2));
  }
}
const ci = new ri();
class lI {
  constructor(A) {
    this._mesh = new ii(ci, A);
  }
  dispose() {
    this._mesh.geometry.dispose();
  }
  render(A) {
    A.render(this._mesh, oi);
  }
  get material() {
    return this._mesh.material;
  }
  set material(A) {
    this._mesh.material = A;
  }
}
var aA = Uint8Array, Dt = Uint16Array, hi = Int32Array, uI = new aA([
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  1,
  1,
  1,
  2,
  2,
  2,
  2,
  3,
  3,
  3,
  3,
  4,
  4,
  4,
  4,
  5,
  5,
  5,
  5,
  0,
  /* unused */
  0,
  0,
  /* impossible */
  0
]), wI = new aA([
  0,
  0,
  0,
  0,
  1,
  1,
  2,
  2,
  3,
  3,
  4,
  4,
  5,
  5,
  6,
  6,
  7,
  7,
  8,
  8,
  9,
  9,
  10,
  10,
  11,
  11,
  12,
  12,
  13,
  13,
  /* unused */
  0,
  0
]), li = new aA([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), yI = function(t, A) {
  for (var e = new Dt(31), I = 0; I < 31; ++I)
    e[I] = A += 1 << t[I - 1];
  for (var g = new hi(e[30]), I = 1; I < 30; ++I)
    for (var s = e[I]; s < e[I + 1]; ++s)
      g[s] = s - e[I] << 5 | I;
  return { b: e, r: g };
}, DI = yI(uI, 2), fI = DI.b, ui = DI.r;
fI[28] = 258, ui[258] = 28;
var wi = yI(wI, 0), yi = wi.b, xe = new Dt(32768);
for (var IA = 0; IA < 32768; ++IA) {
  var $A = (IA & 43690) >> 1 | (IA & 21845) << 1;
  $A = ($A & 52428) >> 2 | ($A & 13107) << 2, $A = ($A & 61680) >> 4 | ($A & 3855) << 4, xe[IA] = (($A & 65280) >> 8 | ($A & 255) << 8) >> 1;
}
var bt = function(t, A, e) {
  for (var I = t.length, g = 0, s = new Dt(A); g < I; ++g)
    t[g] && ++s[t[g] - 1];
  var B = new Dt(A);
  for (g = 1; g < A; ++g)
    B[g] = B[g - 1] + s[g - 1] << 1;
  var Q;
  if (e) {
    Q = new Dt(1 << A);
    var i = 15 - A;
    for (g = 0; g < I; ++g)
      if (t[g])
        for (var C = g << 4 | t[g], E = A - t[g], n = B[t[g] - 1]++ << E, o = n | (1 << E) - 1; n <= o; ++n)
          Q[xe[n] >> i] = C;
  } else
    for (Q = new Dt(I), g = 0; g < I; ++g)
      t[g] && (Q[g] = xe[B[t[g] - 1]++] >> 15 - t[g]);
  return Q;
}, zt = new aA(288);
for (var IA = 0; IA < 144; ++IA)
  zt[IA] = 8;
for (var IA = 144; IA < 256; ++IA)
  zt[IA] = 9;
for (var IA = 256; IA < 280; ++IA)
  zt[IA] = 7;
for (var IA = 280; IA < 288; ++IA)
  zt[IA] = 8;
var dI = new aA(32);
for (var IA = 0; IA < 32; ++IA)
  dI[IA] = 5;
var Di = /* @__PURE__ */ bt(zt, 9, 1), fi = /* @__PURE__ */ bt(dI, 5, 1), Me = function(t) {
  for (var A = t[0], e = 1; e < t.length; ++e)
    t[e] > A && (A = t[e]);
  return A;
}, YA = function(t, A, e) {
  var I = A / 8 | 0;
  return (t[I] | t[I + 1] << 8) >> (A & 7) & e;
}, Fe = function(t, A) {
  var e = A / 8 | 0;
  return (t[e] | t[e + 1] << 8 | t[e + 2] << 16) >> (A & 7);
}, pI = function(t) {
  return (t + 7) / 8 | 0;
}, pt = function(t, A, e) {
  return (A == null || A < 0) && (A = 0), (e == null || e > t.length) && (e = t.length), new aA(t.subarray(A, e));
}, di = [
  "unexpected EOF",
  "invalid block type",
  "invalid length/literal",
  "invalid distance",
  "stream finished",
  "no stream handler",
  ,
  "no callback",
  "invalid UTF-8 data",
  "extra field too long",
  "date not in range 1980-2099",
  "filename too long",
  "stream finishing",
  "invalid zip data"
  // determined by unknown compression method
], DA = function(t, A, e) {
  var I = new Error(A || di[t]);
  if (I.code = t, Error.captureStackTrace && Error.captureStackTrace(I, DA), !e)
    throw I;
  return I;
}, MI = function(t, A, e, I) {
  var g = t.length, s = I ? I.length : 0;
  if (!g || A.f && !A.l)
    return e || new aA(0);
  var B = !e, Q = B || A.i != 2, i = A.i;
  B && (e = new aA(g * 3));
  var C = function(yA) {
    var MA = e.length;
    if (yA > MA) {
      var rA = new aA(Math.max(MA * 2, yA));
      rA.set(e), e = rA;
    }
  }, E = A.f || 0, n = A.p || 0, o = A.b || 0, r = A.l, l = A.d, c = A.m, h = A.n, u = g * 8;
  do {
    if (!r) {
      E = YA(t, n, 1);
      var y = YA(t, n + 1, 3);
      if (n += 3, y)
        if (y == 1)
          r = Di, l = fi, c = 9, h = 5;
        else if (y == 2) {
          var m = YA(t, n, 31) + 257, M = YA(t, n + 10, 15) + 4, p = m + YA(t, n + 5, 31) + 1;
          n += 14;
          for (var D = new aA(p), R = new aA(19), N = 0; N < M; ++N)
            R[li[N]] = YA(t, n + N * 3, 7);
          n += M * 3;
          for (var F = Me(R), L = (1 << F) - 1, G = bt(R, F, 1), N = 0; N < p; ) {
            var k = G[YA(t, n, L)];
            n += k & 15;
            var w = k >> 4;
            if (w < 16)
              D[N++] = w;
            else {
              var U = 0, J = 0;
              for (w == 16 ? (J = 3 + YA(t, n, 3), n += 2, U = D[N - 1]) : w == 17 ? (J = 3 + YA(t, n, 7), n += 3) : w == 18 && (J = 11 + YA(t, n, 127), n += 7); J--; )
                D[N++] = U;
            }
          }
          var AA = D.subarray(0, m), z = D.subarray(m);
          c = Me(AA), h = Me(z), r = bt(AA, c, 1), l = bt(z, h, 1);
        } else
          DA(1);
      else {
        var w = pI(n) + 4, f = t[w - 4] | t[w - 3] << 8, d = w + f;
        if (d > g) {
          i && DA(0);
          break;
        }
        Q && C(o + f), e.set(t.subarray(w, d), o), A.b = o += f, A.p = n = d * 8, A.f = E;
        continue;
      }
      if (n > u) {
        i && DA(0);
        break;
      }
    }
    Q && C(o + 131072);
    for (var eA = (1 << c) - 1, tA = (1 << h) - 1, X = n; ; X = n) {
      var U = r[Fe(t, n) & eA], b = U >> 4;
      if (n += U & 15, n > u) {
        i && DA(0);
        break;
      }
      if (U || DA(2), b < 256)
        e[o++] = b;
      else if (b == 256) {
        X = n, r = null;
        break;
      } else {
        var _ = b - 254;
        if (b > 264) {
          var N = b - 257, j = uI[N];
          _ = YA(t, n, (1 << j) - 1) + fI[N], n += j;
        }
        var P = l[Fe(t, n) & tA], Y = P >> 4;
        P || DA(3), n += P & 15;
        var z = yi[Y];
        if (Y > 3) {
          var j = wI[Y];
          z += Fe(t, n) & (1 << j) - 1, n += j;
        }
        if (n > u) {
          i && DA(0);
          break;
        }
        Q && C(o + 131072);
        var uA = o + _;
        if (o < z) {
          var nA = s - z, wA = Math.min(z, uA);
          for (nA + o < 0 && DA(3); o < wA; ++o)
            e[o] = I[nA + o];
        }
        for (; o < uA; ++o)
          e[o] = e[o - z];
      }
    }
    A.l = r, A.p = X, A.b = o, A.f = E, r && (E = 1, A.m = c, A.d = l, A.n = h);
  } while (!E);
  return o != e.length && B ? pt(e, 0, o) : e.subarray(0, o);
}, pi = /* @__PURE__ */ new aA(0), TA = function(t, A) {
  return t[A] | t[A + 1] << 8;
}, vA = function(t, A) {
  return (t[A] | t[A + 1] << 8 | t[A + 2] << 16 | t[A + 3] << 24) >>> 0;
}, me = function(t, A) {
  return vA(t, A) + vA(t, A + 4) * 4294967296;
}, Mi = function(t) {
  (t[0] != 31 || t[1] != 139 || t[2] != 8) && DA(6, "invalid gzip data");
  var A = t[3], e = 10;
  A & 4 && (e += (t[10] | t[11] << 8) + 2);
  for (var I = (A >> 3 & 1) + (A >> 4 & 1); I > 0; I -= !t[e++])
    ;
  return e + (A & 2);
}, Ne = /* @__PURE__ */ function() {
  function t(A, e) {
    typeof A == "function" && (e = A, A = {}), this.ondata = e;
    var I = A && A.dictionary && A.dictionary.subarray(-32768);
    this.s = { i: 0, b: I ? I.length : 0 }, this.o = new aA(32768), this.p = new aA(0), I && this.o.set(I);
  }
  return t.prototype.e = function(A) {
    if (this.ondata || DA(5), this.d && DA(4), !this.p.length)
      this.p = A;
    else if (A.length) {
      var e = new aA(this.p.length + A.length);
      e.set(this.p), e.set(A, this.p.length), this.p = e;
    }
  }, t.prototype.c = function(A) {
    this.s.i = +(this.d = A || !1);
    var e = this.s.b, I = MI(this.p, this.s, this.o);
    this.ondata(pt(I, e, this.s.b), this.d), this.o = pt(I, this.s.b - 32768), this.s.b = this.o.length, this.p = pt(this.p, this.s.p / 8 | 0), this.s.p &= 7;
  }, t.prototype.push = function(A, e) {
    this.e(A), this.c(e);
  }, t;
}();
function Fi(t, A) {
  return MI(t, { i: 2 }, A && A.out, A && A.dictionary);
}
var FI = /* @__PURE__ */ function() {
  function t(A, e) {
    this.v = 1, this.r = 0, Ne.call(this, A, e);
  }
  return t.prototype.push = function(A, e) {
    if (Ne.prototype.e.call(this, A), this.r += A.length, this.v) {
      var I = this.p.subarray(this.v - 1), g = I.length > 3 ? Mi(I) : 4;
      if (g > I.length) {
        if (!e)
          return;
      } else this.v > 1 && this.onmember && this.onmember(this.r - I.length);
      this.p = I.subarray(g), this.v = 0;
    }
    Ne.prototype.c.call(this, e), this.s.f && !this.s.l && !e && (this.v = pI(this.s.p) + 9, this.s = { i: 0 }, this.o = new aA(0), this.push(new aA(0), e));
  }, t;
}(), Re = typeof TextDecoder < "u" && /* @__PURE__ */ new TextDecoder(), mi = 0;
try {
  Re.decode(pi, { stream: !0 }), mi = 1;
} catch {
}
var Ni = function(t) {
  for (var A = "", e = 0; ; ) {
    var I = t[e++], g = (I > 127) + (I > 223) + (I > 239);
    if (e + g > t.length)
      return { s: A, r: pt(t, e - 1) };
    g ? g == 3 ? (I = ((I & 15) << 18 | (t[e++] & 63) << 12 | (t[e++] & 63) << 6 | t[e++] & 63) - 65536, A += String.fromCharCode(55296 | I >> 10, 56320 | I & 1023)) : g & 1 ? A += String.fromCharCode((I & 31) << 6 | t[e++] & 63) : A += String.fromCharCode((I & 15) << 12 | (t[e++] & 63) << 6 | t[e++] & 63) : A += String.fromCharCode(I);
  }
};
function Si(t, A) {
  if (A) {
    for (var e = "", I = 0; I < t.length; I += 16384)
      e += String.fromCharCode.apply(null, t.subarray(I, I + 16384));
    return e;
  } else {
    if (Re)
      return Re.decode(t);
    var g = Ni(t), s = g.s, e = g.r;
    return e.length && DA(8), s;
  }
}
var Gi = function(t, A) {
  return A + 30 + TA(t, A + 26) + TA(t, A + 28);
}, ki = function(t, A, e) {
  var I = TA(t, A + 28), g = Si(t.subarray(A + 46, A + 46 + I), !(TA(t, A + 8) & 2048)), s = A + 46 + I, B = vA(t, A + 20), Q = e && B == 4294967295 ? xi(t, s) : [B, vA(t, A + 24), vA(t, A + 42)], i = Q[0], C = Q[1], E = Q[2];
  return [TA(t, A + 10), i, C, g, s + TA(t, A + 30) + TA(t, A + 32), E];
}, xi = function(t, A) {
  for (; TA(t, A) != 1; A += 4 + TA(t, A + 2))
    ;
  return [me(t, A + 12), me(t, A + 4), me(t, A + 20)];
};
function Ri(t, A) {
  for (var e = {}, I = t.length - 22; vA(t, I) != 101010256; --I)
    (!I || t.length - I > 65558) && DA(13);
  var g = TA(t, I + 8);
  if (!g)
    return {};
  var s = vA(t, I + 16), B = s == 4294967295 || g == 65535;
  if (B) {
    var Q = vA(t, I - 12);
    B = vA(t, Q) == 101075792, B && (g = vA(t, Q + 32), s = vA(t, Q + 48));
  }
  for (var i = A && A.filter, C = 0; C < g; ++C) {
    var E = ki(t, s, B), n = E[0], o = E[1], r = E[2], l = E[3], c = E[4], h = E[5], u = Gi(t, h);
    s = c, (!i || i({
      name: l,
      size: o,
      originalSize: r,
      compression: n
    })) && (n ? n == 8 ? e[l] = Fi(t.subarray(u, u + o), { out: new aA(r) }) : DA(14, "unknown compression type " + n) : e[l] = pt(t, u, u + o));
  }
  return e;
}
let jA;
const mI = typeof TextDecoder < "u" ? new TextDecoder("utf-8", { ignoreBOM: !0, fatal: !0 }) : { decode: () => {
  throw Error("TextDecoder not available");
} };
typeof TextDecoder < "u" && mI.decode();
let Yt = null;
function Ui() {
  return (Yt === null || Yt.byteLength === 0) && (Yt = new Uint8Array(jA.memory.buffer)), Yt;
}
function Li(t, A) {
  return t = t >>> 0, mI.decode(Ui().subarray(t, t + A));
}
function Yi(t, A, e, I, g, s, B, Q, i, C, E) {
  return jA.raycast_splats(t, A, e, I, g, s, B, Q, i, C, E);
}
async function Ji(t, A) {
  if (typeof Response == "function" && t instanceof Response) {
    if (typeof WebAssembly.instantiateStreaming == "function")
      try {
        return await WebAssembly.instantiateStreaming(t, A);
      } catch (I) {
        if (t.headers.get("Content-Type") != "application/wasm")
          console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", I);
        else
          throw I;
      }
    const e = await t.arrayBuffer();
    return await WebAssembly.instantiate(e, A);
  } else {
    const e = await WebAssembly.instantiate(t, A);
    return e instanceof WebAssembly.Instance ? { instance: e, module: t } : e;
  }
}
function vi() {
  const t = {};
  return t.wbg = {}, t.wbg.__wbg_buffer_609cc3eee51ed158 = function(A) {
    return A.buffer;
  }, t.wbg.__wbg_length_3b4f022188ae8db6 = function(A) {
    return A.length;
  }, t.wbg.__wbg_length_6ca527665d89694d = function(A) {
    return A.length;
  }, t.wbg.__wbg_length_8cfd2c6409af88ad = function(A) {
    return A.length;
  }, t.wbg.__wbg_new_9fee97a409b32b68 = function(A) {
    return new Uint16Array(A);
  }, t.wbg.__wbg_new_e3b321dcfef89fc7 = function(A) {
    return new Uint32Array(A);
  }, t.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(A, e, I) {
    return new Float32Array(A, e >>> 0, I >>> 0);
  }, t.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(A, e, I) {
    return new Uint32Array(A, e >>> 0, I >>> 0);
  }, t.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(A) {
    return new Float32Array(A >>> 0);
  }, t.wbg.__wbg_set_10bad9bee0e9c58b = function(A, e, I) {
    A.set(e, I >>> 0);
  }, t.wbg.__wbg_set_d23661d19148b229 = function(A, e, I) {
    A.set(e, I >>> 0);
  }, t.wbg.__wbg_set_f4f1f0daa30696fc = function(A, e, I) {
    A.set(e, I >>> 0);
  }, t.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(A, e, I) {
    return A.subarray(e >>> 0, I >>> 0);
  }, t.wbg.__wbg_subarray_769e1e0f81bb259b = function(A, e, I) {
    return A.subarray(e >>> 0, I >>> 0);
  }, t.wbg.__wbindgen_init_externref_table = function() {
    const A = jA.__wbindgen_export_0, e = A.grow(4);
    A.set(0, void 0), A.set(e + 0, void 0), A.set(e + 1, null), A.set(e + 2, !0), A.set(e + 3, !1);
  }, t.wbg.__wbindgen_memory = function() {
    return jA.memory;
  }, t.wbg.__wbindgen_throw = function(A, e) {
    throw new Error(Li(A, e));
  }, t;
}
function bi(t, A) {
  return jA = t.exports, NI.__wbindgen_wasm_module = A, Yt = null, jA.__wbindgen_start(), jA;
}
async function NI(t) {
  if (jA !== void 0) return jA;
  typeof t < "u" && (Object.getPrototypeOf(t) === Object.prototype ? { module_or_path: t } = t : console.warn("using deprecated parameters for the initialization function; pass a single object instead")), typeof t > "u" && (t = new URL("data:application/wasm;base64,", import.meta.url));
  const A = vi();
  (typeof t == "string" || typeof Request == "function" && t instanceof Request || typeof URL == "function" && t instanceof URL) && (t = fetch(t));
  const { instance: e, module: I } = await Ji(await t, A);
  return bi(e, I);
}
const HA = -12, Ti = 9, XA = (Ti - HA) / 254, Hi = -30, Mt = Math.exp(Hi), Ki = 11, qi = 11, O = 1 << Ki, gt = 1 << qi, SI = 1;
function ht(t) {
  return t === "bool" || t === "bvec2" || t === "bvec3" || t === "bvec4";
}
function lt(t) {
  return t === "int" || t === "uint" || t === "float";
}
function cA(t) {
  return t === "int" || t === "ivec2" || t === "ivec3" || t === "ivec4";
}
function hA(t) {
  return t === "uint" || t === "uvec2" || t === "uvec3" || t === "uvec4";
}
function Zt(t) {
  return t === "float" || t === "vec2" || t === "vec3" || t === "vec4";
}
function GI(t) {
  return t === "mat2" || t === "mat2x2" || t === "mat2x3" || t === "mat2x4" || t === "mat3" || t === "mat3x2" || t === "mat3x3" || t === "mat3x4" || t === "mat4" || t === "mat4x2" || t === "mat4x3" || t === "mat4x4";
}
function Qt(t) {
  return Zt(t) || GI(t);
}
function kt(t) {
  return t === "vec2" || t === "ivec2" || t === "uvec2";
}
function xt(t) {
  return t === "vec3" || t === "ivec3" || t === "uvec3";
}
function Vt(t) {
  return t === "vec4" || t === "ivec4" || t === "uvec4";
}
function zi(t) {
  return kt(t) || xt(t) || Vt(t);
}
function it(t) {
  return t === "mat2" || t === "mat2x2";
}
function nt(t) {
  return t === "mat3" || t === "mat3x3";
}
function Ct(t) {
  return t === "mat4" || t === "mat4x4";
}
function kI(t) {
  switch (t) {
    case "vec2":
      return "float";
    case "vec3":
      return "float";
    case "vec4":
      return "float";
    case "ivec2":
      return "int";
    case "ivec3":
      return "int";
    case "ivec4":
      return "int";
    case "uvec2":
      return "uint";
    case "uvec3":
      return "uint";
    case "uvec4":
      return "uint";
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
function xI(t) {
  switch (t) {
    case "vec2":
    case "ivec2":
    case "uvec2":
      return 2;
    case "vec3":
    case "ivec3":
    case "uvec3":
      return 3;
    case "vec4":
    case "ivec4":
    case "uvec4":
      return 4;
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
function Zi(t) {
  if (lt(t))
    return "float";
  if (kt(t))
    return "vec2";
  if (xt(t))
    return "vec3";
  if (Vt(t))
    return "vec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function RI(t) {
  if (lt(t))
    return "uint";
  if (kt(t))
    return "uvec2";
  if (xt(t))
    return "uvec3";
  if (Vt(t))
    return "uvec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function Vi(t) {
  if (lt(t))
    return "int";
  if (kt(t))
    return "ivec2";
  if (xt(t))
    return "ivec3";
  if (Vt(t))
    return "ivec4";
  throw new Error(`Invalid vector type: ${t}`);
}
function UI(t) {
  if (typeof t == "string")
    return t;
  if (typeof t == "object" && t.type)
    return t.type;
  throw new Error(`Invalid DynoType: ${String(t)}`);
}
function sA(t) {
  return Math.trunc(t).toString();
}
function BA(t) {
  return `${Math.max(0, Math.trunc(t)).toString()}u`;
}
function H(t) {
  return t === Number.POSITIVE_INFINITY ? "INFINITY" : t === Number.NEGATIVE_INFINITY ? "-INFINITY" : Number.isInteger(t) ? t.toFixed(1) : t.toString();
}
function Z(t) {
  return t instanceof st ? t.type : t.dynoOut().type;
}
class st {
  constructor(A) {
    this.__isDynoValue = !0, this.type = A;
  }
}
class q extends st {
  constructor(A, e) {
    super(A.outTypes[e]), this.dyno = A, this.key = e;
  }
}
class Ft extends st {
  constructor(A, e) {
    super(A), this.literal = e;
  }
  getLiteral() {
    return this.literal;
  }
}
function Be(t, A) {
  return new Ft(t, A);
}
class LI extends Ft {
  constructor(A, e) {
    super(A, ""), this.value = e;
  }
  getLiteral() {
    const { type: A, value: e } = this;
    switch (A) {
      case "bool":
        return e ? "true" : "false";
      case "uint":
        return BA(e);
      case "int":
        return sA(e);
      case "float":
        return H(e);
      case "bvec2": {
        const I = e;
        return `bvec2(${I[0]}, ${I[1]})`;
      }
      case "uvec2": {
        if (e instanceof a.Vector2)
          return `uvec2(${BA(e.x)}, ${BA(e.y)})`;
        const I = e;
        return `uvec2(${BA(I[0])}, ${BA(I[1])})`;
      }
      case "ivec2": {
        if (e instanceof a.Vector2)
          return `ivec2(${sA(e.x)}, ${sA(e.y)})`;
        const I = e;
        return `ivec2(${sA(I[0])}, ${sA(I[1])})`;
      }
      case "vec2": {
        if (e instanceof a.Vector2)
          return `vec2(${H(e.x)}, ${H(e.y)})`;
        const I = e;
        return `vec2(${H(I[0])}, ${H(I[1])})`;
      }
      case "bvec3": {
        const I = e;
        return `bvec3(${I[0]}, ${I[1]}, ${I[2]})`;
      }
      case "uvec3": {
        if (e instanceof a.Vector3)
          return `uvec3(${BA(e.x)}, ${BA(e.y)}, ${BA(e.z)})`;
        const I = e;
        return `uvec3(${BA(I[0])}, ${BA(I[1])}, ${BA(I[2])})`;
      }
      case "ivec3": {
        if (e instanceof a.Vector3)
          return `ivec3(${sA(e.x)}, ${sA(e.y)}, ${sA(e.z)})`;
        const I = e;
        return `ivec3(${sA(I[0])}, ${sA(I[1])}, ${sA(I[2])})`;
      }
      case "vec3": {
        if (e instanceof a.Vector3)
          return `vec3(${H(e.x)}, ${H(e.y)}, ${H(e.z)})`;
        const I = e;
        return `vec3(${H(I[0])}, ${H(I[1])}, ${H(I[2])})`;
      }
      case "bvec4": {
        const I = e;
        return `bvec4(${I[0]}, ${I[1]}, ${I[2]}, ${I[3]})`;
      }
      case "uvec4": {
        if (e instanceof a.Vector4)
          return `uvec4(${BA(e.x)}, ${BA(e.y)}, ${BA(e.z)}, ${BA(e.w)})`;
        const I = e;
        return `uvec4(${BA(I[0])}, ${BA(I[1])}, ${BA(I[2])}, ${BA(I[3])})`;
      }
      case "ivec4": {
        if (e instanceof a.Vector4)
          return `ivec4(${sA(e.x)}, ${sA(e.y)}, ${sA(e.z)}, ${sA(e.w)})`;
        const I = e;
        return `ivec4(${sA(I[0])}, ${sA(I[1])}, ${sA(I[2])}, ${sA(I[3])})`;
      }
      case "vec4": {
        if (e instanceof a.Vector4)
          return `vec4(${H(e.x)}, ${H(e.y)}, ${H(e.z)}, ${H(e.w)})`;
        if (e instanceof a.Quaternion)
          return `vec4(${H(e.x)}, ${H(e.y)}, ${H(e.z)}, ${H(e.w)})`;
        const I = e;
        return `vec4(${H(I[0])}, ${H(I[1])}, ${H(I[2])}, ${H(I[3])})`;
      }
      case "mat2":
      case "mat2x2": {
        const I = e, g = I instanceof a.Matrix2 ? I.elements : e, s = new Array(4).fill(0).map((B, Q) => H(g[Q]));
        return `${A}(${s.join(", ")})`;
      }
      case "mat2x3": {
        const I = e, g = new Array(6).fill(0).map((s, B) => H(I[B]));
        return `${A}(${g.join(", ")})`;
      }
      case "mat2x4": {
        const I = e, g = new Array(8).fill(0).map((s, B) => H(I[B]));
        return `${A}(${g.join(", ")})`;
      }
      case "mat3":
      case "mat3x3": {
        const I = e, g = I instanceof a.Matrix3 ? I.elements : e, s = new Array(9).fill(0).map((B, Q) => H(g[Q]));
        return `${A}(${s.join(", ")})`;
      }
      case "mat3x2": {
        const I = e, g = new Array(6).fill(0).map((s, B) => H(I[B]));
        return `${A}(${g.join(", ")})`;
      }
      case "mat3x4": {
        const I = e, g = new Array(12).fill(0).map((s, B) => H(I[B]));
        return `${A}(${g.join(", ")})`;
      }
      case "mat4":
      case "mat4x4": {
        const I = e, g = I instanceof a.Matrix4 ? I.elements : e, s = new Array(16).fill(0).map((B, Q) => H(g[Q]));
        return `${A}(${s.join(", ")})`;
      }
      case "mat4x2": {
        const I = e, g = new Array(8).fill(0).map((s, B) => H(I[B]));
        return `${A}(${g.join(", ")})`;
      }
      case "mat4x3": {
        const I = e, g = new Array(12).fill(0).map((s, B) => H(I[B]));
        return `${A}(${g.join(", ")})`;
      }
      default:
        throw new Error(`Type not implemented: ${String(A)}`);
    }
  }
}
function K(t, A) {
  return new LI(t, A);
}
function Jt(t) {
  const A = String(t);
  if (ht(t))
    return `${A}(false)`;
  if (Qt(t))
    return `${A}(0.0)`;
  if (cA(t))
    return `${A}(0)`;
  if (hA(t))
    return `${A}(0u)`;
  throw new Error(`Type not implemented: ${A}`);
}
function ji(t) {
  const A = String(t);
  if (ht(t))
    return `${A}(true)`;
  if (Qt(t))
    return `${A}(1.0)`;
  if (cA(t))
    return `${A}(1)`;
  if (hA(t))
    return `${A}(1u)`;
  throw new Error(`Type not implemented: ${A}`);
}
function Xi(t) {
  const A = String(t);
  if (ht(t))
    return `${A}(true)`;
  if (Qt(t))
    return `${A}(-1.0)`;
  if (cA(t))
    return `${A}(-1)`;
  if (hA(t))
    return `${A}(0xFFFFFFFFu)`;
  throw new Error(`Type not implemented: ${A}`);
}
const iI = "    ";
class YI {
  constructor({ indent: A } = {}) {
    this.globals = /* @__PURE__ */ new Set(), this.statements = [], this.uniforms = {}, this.declares = /* @__PURE__ */ new Set(), this.updaters = [], this.sequence = 0, this.indent = iI, this.indent = A ?? iI;
  }
  nextSequence() {
    return this.sequence++;
  }
}
class V {
  constructor({
    inTypes: A,
    outTypes: e,
    inputs: I,
    update: g,
    globals: s,
    statements: B,
    generate: Q
  }) {
    this.inTypes = A ?? {}, this.outTypes = e ?? {}, this.inputs = I ?? {}, this.update = g, this.globals = s, this.statements = B, this.generate = Q ?? (({ inputs: i, outputs: C, compile: E }) => {
      var n, o;
      return {
        globals: (n = this.globals) == null ? void 0 : n.call(this, { inputs: i, outputs: C, compile: E }),
        statements: (o = this.statements) == null ? void 0 : o.call(this, { inputs: i, outputs: C, compile: E })
      };
    });
  }
  get outputs() {
    const A = {};
    for (const e in this.outTypes)
      A[e] = new q(this, e);
    return A;
  }
  apply(A) {
    return Object.assign(this.inputs, A), this.outputs;
  }
  compile({
    inputs: A,
    outputs: e,
    compile: I
  }) {
    const g = [
      `// ${this.constructor.name}(${Object.values(A).join(", ")}) => (${Object.values(e).join(", ")})`
    ], s = [];
    for (const C in e) {
      const E = e[C];
      E && !I.declares.has(E) && (I.declares.add(E), s.push(C));
    }
    const { globals: B, statements: Q, uniforms: i } = this.generate({
      inputs: A,
      outputs: e,
      compile: I
    });
    for (const C of B ?? [])
      I.globals.add(C);
    for (const C in i)
      I.uniforms[C] = i[C];
    this.update && I.updaters.push(this.update);
    for (const C of s) {
      const E = e[C];
      E && (I.uniforms[E] || g.push(`${je(E, this.outTypes[C])};`));
    }
    return Q != null && Q.length && (g.push("{"), g.push(...Q.map((C) => I.indent + C)), g.push("}")), g;
  }
}
class zA extends V {
  constructor({
    inTypes: A,
    outTypes: e,
    inputs: I,
    update: g,
    globals: s,
    construct: B
  }) {
    super({
      inTypes: A,
      outTypes: e,
      inputs: I,
      update: g,
      globals: s,
      generate: (Q) => this.generateBlock(Q)
    }), this.construct = B;
  }
  generateBlock({
    inputs: A,
    outputs: e,
    compile: I
  }) {
    var l, c;
    const g = {}, s = {};
    for (const h in A)
      A[h] != null && (g[h] = new Ft(this.inTypes[h], A[h]));
    for (const h in e)
      e[h] != null && (s[h] = new st(this.outTypes[h]));
    const B = { roots: [] }, Q = this.construct(g, s, B);
    for (const h of ((l = this.globals) == null ? void 0 : l.call(this, { inputs: A, outputs: e, compile: I })) ?? [])
      I.globals.add(h);
    const i = [], C = /* @__PURE__ */ new Map();
    function E(h, u, y) {
      let w = C.get(h);
      if (!w) {
        w = {
          sequence: I.nextSequence(),
          outNames: /* @__PURE__ */ new Map(),
          newOuts: /* @__PURE__ */ new Set()
        }, C.set(h, w);
        for (const f in h.inputs) {
          let d = h.inputs[f];
          for (; d; ) {
            if (d instanceof st) {
              d instanceof q && E(d.dyno, d.key);
              break;
            }
            d = d.dynoOut();
          }
        }
        i.push(h);
      }
      u && (y || w.newOuts.add(u), w.outNames.set(u, y ?? `${u}_${w.sequence}`));
    }
    for (const h of B.roots)
      E(h);
    for (const h in s) {
      let u = (Q == null ? void 0 : Q[h]) ?? s[h];
      for (; u; ) {
        if (u instanceof st) {
          u instanceof q && E(u.dyno, u.key, e[h]);
          break;
        }
        u = u.dynoOut();
      }
      s[h] = u;
    }
    const n = [];
    for (const h of i) {
      const u = {}, y = {};
      for (const d in h.inputs) {
        let m = h.inputs[d];
        for (; m; ) {
          if (m instanceof st) {
            if (m instanceof Ft)
              u[d] = m.getLiteral();
            else if (m instanceof q) {
              const M = (c = C.get(m.dyno)) == null ? void 0 : c.outNames.get(m.key);
              if (!M)
                throw new Error(
                  `Source not found for ${m.dyno.constructor.name}.${m.key}`
                );
              u[d] = M;
            }
            break;
          }
          m = m.dynoOut();
        }
      }
      const w = C.get(h) ?? { outNames: /* @__PURE__ */ new Map() };
      for (const [d, m] of w.outNames.entries())
        y[d] = m;
      const f = h.compile({ inputs: u, outputs: y, compile: I });
      n.push(f);
    }
    const o = [];
    for (const h in e)
      s[h] instanceof Ft && o.push(
        `${e[h]} = ${s[h].getLiteral()};`
      );
    return o.length > 0 && n.push(o), { statements: n.flatMap((h, u) => u === 0 ? h : ["", ...h]) };
  }
}
function NA(t, A, e, { update: I, globals: g } = {}) {
  return new zA({ inTypes: t, outTypes: A, construct: e, update: I, globals: g });
}
function jt({
  inTypes: t,
  outTypes: A,
  inputs: e,
  update: I,
  globals: g,
  statements: s,
  generate: B
}) {
  return new V({
    inTypes: t,
    outTypes: A,
    inputs: e,
    update: I,
    globals: g,
    statements: s,
    generate: B
  });
}
function je(t, A, e) {
  const I = typeof A == "string" ? A : A.type;
  if (!I)
    throw new Error(`Invalid DynoType: ${String(A)}`);
  return `${I} ${t}${e != null ? `[${e}]` : ""}`;
}
function UA(t) {
  var s;
  let A = !1;
  const e = t.split(`
`).map((B) => {
    const Q = B.trimEnd();
    return A ? Q : Q.length > 0 ? (A = !0, Q) : null;
  }).filter((B) => B != null);
  for (; e.length > 0 && e[e.length - 1].length === 0; )
    e.pop();
  if (e.length === 0)
    return [];
  const I = (s = e[0].match(/^\s*/)) == null ? void 0 : s[0];
  if (!I)
    return e;
  const g = new RegExp(`^${I}`);
  return e.map((B) => B.replace(g, ""));
}
function oA(t) {
  return UA(t).join(`
`);
}
class S extends V {
  constructor({
    a: A,
    outKey: e,
    outTypeFunc: I
  }) {
    const g = { a: Z(A) }, s = I(Z(A)), B = { [e]: s };
    super({ inTypes: g, outTypes: B, inputs: { a: A } }), this.outKey = e;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
class $ extends V {
  constructor({
    a: A,
    b: e,
    outKey: I,
    outTypeFunc: g
  }) {
    const s = { a: Z(A), b: Z(e) }, B = g(Z(A), Z(e)), Q = { [I]: B };
    super({ inTypes: s, outTypes: Q, inputs: { a: A, b: e } }), this.outKey = I;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
class ut extends V {
  constructor({
    a: A,
    b: e,
    c: I,
    outKey: g,
    outTypeFunc: s
  }) {
    const B = { a: Z(A), b: Z(e), c: Z(I) }, Q = s(Z(A), Z(e), Z(I)), i = { [g]: Q };
    super({ inTypes: B, outTypes: i, inputs: { a: A, b: e, c: I } }), this.outKey = g;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
const W = { type: "Gsplat" }, Xt = { type: "PackedSplats" }, _i = (t) => new vI({ packedSplats: t }), mt = (t, A) => new TI({ packedSplats: t, index: A }), JI = (t, A, e, I) => new HI({ packedSplats: t, index: A, base: e, count: I }), at = (t) => new KI({ gsplat: t }), Bt = ({
  gsplat: t,
  flags: A,
  index: e,
  center: I,
  scales: g,
  quaternion: s,
  rgba: B,
  rgb: Q,
  opacity: i,
  x: C,
  y: E,
  z: n,
  r: o,
  g: r,
  b: l
}) => new qI({
  gsplat: t,
  flags: A,
  index: e,
  center: I,
  scales: g,
  quaternion: s,
  rgba: B,
  rgb: Q,
  opacity: i,
  x: C,
  y: E,
  z: n,
  r: o,
  g: r,
  b: l
}), Ue = (t) => new ZI({ gsplat: t }), Xe = (t, {
  scale: A,
  rotate: e,
  translate: I,
  recolor: g
}) => new VI({ gsplat: t, scale: A, rotate: e, translate: I, recolor: g }), SA = oA(`
  struct Gsplat {
    vec3 center;
    uint flags;
    vec3 scales;
    int index;
    vec4 quaternion;
    vec4 rgba;
  };
  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;

  bool isGsplatActive(uint flags) {
    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;
  }
`), he = oA(`
  struct PackedSplats {
    usampler2DArray texture;
    int numSplats;
  };
`);
class vI extends S {
  constructor({
    packedSplats: A
  }) {
    super({ a: A, outKey: "numSplats", outTypeFunc: () => "int" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.numSplats} = ${e.a}.numSplats;`
    ];
  }
}
const bI = oA(`
  bool readPackedSplat(usampler2DArray texture, int numSplats, int index, out Gsplat gsplat) {
    if ((index >= 0) && (index < numSplats)) {
      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);
      unpackSplat(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba);
      return true;
    } else {
      return false;
    }
  }
`);
class TI extends V {
  constructor({
    packedSplats: A,
    index: e
  }) {
    super({
      inTypes: { packedSplats: Xt, index: "int" },
      outTypes: { gsplat: W },
      inputs: { packedSplats: A, index: e },
      globals: () => [SA, he, bI],
      statements: ({ inputs: I, outputs: g }) => {
        const { gsplat: s } = g;
        if (!s)
          return [];
        const { packedSplats: B, index: Q } = I;
        let i;
        return B && Q ? i = UA(`
            if (readPackedSplat(${B}.texture, ${B}.numSplats, ${Q}, ${s})) {
              bool zeroSize = all(equal(${s}.scales, vec3(0.0, 0.0, 0.0)));
              ${s}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
            } else {
              ${s}.flags = 0u;
            }
          `) : i = [`${s}.flags = 0u;`], i.push(`${s}.index = ${Q ?? "0"};`), i;
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
class HI extends V {
  constructor({
    packedSplats: A,
    index: e,
    base: I,
    count: g
  }) {
    super({
      inTypes: {
        packedSplats: Xt,
        index: "int",
        base: "int",
        count: "int"
      },
      outTypes: { gsplat: W },
      inputs: { packedSplats: A, index: e, base: I, count: g },
      globals: () => [SA, he, bI],
      statements: ({ inputs: s, outputs: B }) => {
        const { gsplat: Q } = B;
        if (!Q)
          return [];
        const { packedSplats: i, index: C, base: E, count: n } = s;
        let o;
        return i && C && E && n ? o = UA(`
            ${Q}.flags = 0u;
            if ((${C} >= ${E}) && (${C} < (${E} + ${n}))) {
              if (readPackedSplat(${i}.texture, ${i}.numSplats, ${C}, ${Q})) {
                bool zeroSize = all(equal(${Q}.scales, vec3(0.0, 0.0, 0.0)));
                ${Q}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
              }
            }
          `) : o = [`${Q}.flags = 0u;`], o.push(`${Q}.index = ${C ?? "0"};`), o;
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
class KI extends V {
  constructor({ gsplat: A }) {
    super({
      inTypes: { gsplat: W },
      outTypes: {
        flags: "uint",
        active: "bool",
        index: "int",
        center: "vec3",
        scales: "vec3",
        quaternion: "vec4",
        rgba: "vec4",
        rgb: "vec3",
        opacity: "float",
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      },
      inputs: { gsplat: A },
      globals: () => [SA],
      statements: ({ inputs: e, outputs: I }) => {
        const { gsplat: g } = e, {
          flags: s,
          active: B,
          index: Q,
          center: i,
          scales: C,
          quaternion: E,
          rgba: n,
          rgb: o,
          opacity: r,
          x: l,
          y: c,
          z: h,
          r: u,
          g: y,
          b: w
        } = I;
        return [
          s ? `${s} = ${g ? `${g}.flags` : "0u"};` : null,
          B ? `${B} = isGsplatActive(${g ? `${g}.flags` : "0u"});` : null,
          Q ? `${Q} = ${g ? `${g}.index` : "0"};` : null,
          i ? `${i} = ${g ? `${g}.center` : "vec3(0.0, 0.0, 0.0)"};` : null,
          C ? `${C} = ${g ? `${g}.scales` : "vec3(0.0, 0.0, 0.0)"};` : null,
          E ? `${E} = ${g ? `${g}.quaternion` : "vec4(0.0, 0.0, 0.0, 1.0)"};` : null,
          n ? `${n} = ${g ? `${g}.rgba` : "vec4(0.0, 0.0, 0.0, 0.0)"};` : null,
          o ? `${o} = ${g ? `${g}.rgba.rgb` : "vec3(0.0, 0.0, 0.0)"};` : null,
          r ? `${r} = ${g ? `${g}.rgba.a` : "0.0"};` : null,
          l ? `${l} = ${g ? `${g}.center.x` : "0.0"};` : null,
          c ? `${c} = ${g ? `${g}.center.y` : "0.0"};` : null,
          h ? `${h} = ${g ? `${g}.center.z` : "0.0"};` : null,
          u ? `${u} = ${g ? `${g}.rgba.r` : "0.0"};` : null,
          y ? `${y} = ${g ? `${g}.rgba.g` : "0.0"};` : null,
          w ? `${w} = ${g ? `${g}.rgba.b` : "0.0"};` : null
        ].filter(Boolean);
      }
    });
  }
}
class qI extends V {
  constructor({
    gsplat: A,
    flags: e,
    index: I,
    center: g,
    scales: s,
    quaternion: B,
    rgba: Q,
    rgb: i,
    opacity: C,
    x: E,
    y: n,
    z: o,
    r,
    g: l,
    b: c
  }) {
    super({
      inTypes: {
        gsplat: W,
        flags: "uint",
        index: "int",
        center: "vec3",
        scales: "vec3",
        quaternion: "vec4",
        rgba: "vec4",
        rgb: "vec3",
        opacity: "float",
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      },
      outTypes: { gsplat: W },
      inputs: {
        gsplat: A,
        flags: e,
        index: I,
        center: g,
        scales: s,
        quaternion: B,
        rgba: Q,
        rgb: i,
        opacity: C,
        x: E,
        y: n,
        z: o,
        r,
        g: l,
        b: c
      },
      globals: () => [SA],
      statements: ({ inputs: h, outputs: u }) => {
        const { gsplat: y } = u;
        if (!y)
          return [];
        const {
          gsplat: w,
          flags: f,
          index: d,
          center: m,
          scales: M,
          quaternion: p,
          rgba: D,
          rgb: R,
          opacity: N,
          x: F,
          y: L,
          z: G,
          r: k,
          g: U,
          b: J
        } = h;
        return [
          `${y}.flags = ${f ?? (w ? `${w}.flags` : "0u")};`,
          `${y}.index = ${d ?? (w ? `${w}.index` : "0")};`,
          `${y}.center = ${m ?? (w ? `${w}.center` : "vec3(0.0, 0.0, 0.0)")};`,
          `${y}.scales = ${M ?? (w ? `${w}.scales` : "vec3(0.0, 0.0, 0.0)")};`,
          `${y}.quaternion = ${p ?? (w ? `${w}.quaternion` : "vec4(0.0, 0.0, 0.0, 1.0)")};`,
          `${y}.rgba = ${D ?? (w ? `${w}.rgba` : "vec4(0.0, 0.0, 0.0, 0.0)")};`,
          R ? `${y}.rgba.rgb = ${R};` : null,
          N ? `${y}.rgba.a = ${N};` : null,
          F ? `${y}.center.x = ${F};` : null,
          L ? `${y}.center.y = ${L};` : null,
          G ? `${y}.center.z = ${G};` : null,
          k ? `${y}.rgba.r = ${k};` : null,
          U ? `${y}.rgba.g = ${U};` : null,
          J ? `${y}.rgba.b = ${J};` : null
        ].filter(Boolean);
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
const zI = oA(`
  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {
    float minScale = min(scales.x, min(scales.y, scales.z));
    vec3 normal;
    if (scales.z == minScale) {
      normal = vec3(0.0, 0.0, 1.0);
    } else if (scales.y == minScale) {
      normal = vec3(0.0, 1.0, 0.0);
    } else {
      normal = vec3(1.0, 0.0, 0.0);
    }
    return quatVec(quaternion, normal);
  }
`);
class ZI extends S {
  constructor({ gsplat: A }) {
    super({ a: A, outKey: "normal", outTypeFunc: () => "vec3" }), this.globals = () => [SA, zI], this.statements = ({ inputs: e, outputs: I }) => [
      `${I.normal} = gsplatNormal(${e.a}.scales, ${e.a}.quaternion);`
    ];
  }
}
class VI extends V {
  constructor({
    gsplat: A,
    scale: e,
    rotate: I,
    translate: g,
    recolor: s
  }) {
    super({
      inTypes: {
        gsplat: W,
        scale: "float",
        rotate: "vec4",
        translate: "vec3",
        recolor: "vec4"
      },
      outTypes: { gsplat: W },
      inputs: { gsplat: A, scale: e, rotate: I, translate: g, recolor: s },
      globals: () => [SA],
      statements: ({ inputs: B, outputs: Q, compile: i }) => {
        const { gsplat: C } = Q;
        if (!C || !B.gsplat)
          return [];
        const { scale: E, rotate: n, translate: o, recolor: r } = B, l = i.indent;
        return [
          `${C} = ${B.gsplat};`,
          `if (isGsplatActive(${C}.flags)) {`,
          E ? `${l}${C}.center *= ${E};` : null,
          n ? `${l}${C}.center = quatVec(${n}, ${C}.center);` : null,
          o ? `${l}${C}.center += ${o};` : null,
          E ? `${l}${C}.scales *= ${E};` : null,
          n ? `${l}${C}.quaternion = quatQuat(${n}, ${C}.quaternion);` : null,
          r ? `${l}${C}.rgba *= ${r};` : null,
          "}"
        ].filter(Boolean);
      }
    });
  }
  dynoOut() {
    return new q(this, "gsplat");
  }
}
const jI = (t) => new XI({ gsplat: t }), Pi = (t) => new _e({ rgba8: t });
class XI extends V {
  constructor({ gsplat: A }) {
    super({
      inTypes: { gsplat: W },
      inputs: { gsplat: A },
      globals: () => [SA],
      statements: ({ inputs: e, outputs: I }) => {
        const { output: g } = I;
        if (!g)
          return [];
        const { gsplat: s } = e;
        return s ? UA(`
            if (isGsplatActive(${s}.flags)) {
              ${g} = packSplat(${s}.center, ${s}.scales, ${s}.quaternion, ${s}.rgba);
            } else {
              ${g} = uvec4(0u, 0u, 0u, 0u);
            }
          `) : [`${g} = uvec4(0u, 0u, 0u, 0u);`];
      }
    });
  }
  dynoOut() {
    return new q(this, "output");
  }
}
class _e extends V {
  constructor({ rgba8: A }) {
    super({
      inTypes: { rgba8: "vec4" },
      inputs: { rgba8: A },
      statements: ({ inputs: e, outputs: I }) => [
        `target = ${e.rgba8 ?? "vec4(0.0, 0.0, 0.0, 0.0)"};`
      ]
    });
  }
  dynoOut() {
    return new q(this, "rgba8");
  }
}
const Oi = (t, A, e) => new x({ key: t, type: A, value: e }), Wi = (t = !1, A) => new Qe({ key: A, value: t }), $i = (t = 0, A) => new _I({ key: A, value: t }), An = (t = 0, A) => new Kt({ key: A, value: t }), bA = (t = 0, A) => new ot({ key: A, value: t }), tn = (t, A) => new PI({ key: A, value: t }), en = (t, A) => new OI({ key: A, value: t }), In = (t, A) => new WI({ key: A, value: t }), gn = (t, A) => new $I({ key: A, value: t }), sn = (t, A) => new Ag({ key: A, value: t }), Bn = (t, A) => new tg({ key: A, value: t }), Qn = (t, A) => new eg({ key: A, value: t }), At = (t, A) => new St({ key: A, value: t }), nn = (t, A) => new Ig({ key: A, value: t }), Cn = (t, A) => new gg({ key: A, value: t }), En = (t, A) => new sg({ key: A, value: t }), an = (t, A) => new _t({ key: A, value: t }), on = (t, A) => new Bg({ key: A, value: t }), rn = (t, A) => new Qg({ key: A, value: t }), cn = (t, A) => new ig({ key: A, value: t }), hn = (t, A) => new ng({ key: A, value: t }), ln = (t, A) => new Cg({ key: A, value: t }), un = (t, A) => new Eg({ key: A, value: t }), wn = (t, A) => new ag({ key: A, value: t }), yn = (t, A) => new og({ key: A, value: t }), Dn = (t, A) => new rg({ key: A, value: t }), fn = (t, A) => new cg({ key: A, value: t }), dn = (t, A) => new hg({ key: A, value: t }), pn = (t, A) => new lg({ key: A, value: t }), Mn = (t, A) => new ug({ key: A, value: t }), Fn = (t, A) => new wg({ key: A, value: t }), mn = (t, A) => new yg({ key: A, value: t }), Nn = (t, A) => new Tt({ key: A, value: t }), Sn = (t, A) => new Dg({ key: t, value: A }), Gn = (t, A) => new fg({ key: A, value: t }), kn = (t, A) => new dg({ key: A, value: t }), xn = (t, A) => new pg({ key: A, value: t }), Rn = (t, A) => new Mg({ key: A, value: t }), Un = (t, A) => new Fg({ key: A, value: t }), Ln = (t, A) => new mg({ key: A, value: t }), Yn = (t, A) => new Ng({ key: A, value: t }), Jn = (t, A) => new Sg({ key: A, value: t }), vn = (t, A) => new Gg({ key: A, value: t }), bn = (t, A) => new kg({ key: A, value: t });
class x extends V {
  constructor({
    key: A,
    type: e,
    count: I,
    value: g,
    update: s,
    globals: B
  }) {
    A = A ?? "value", super({
      outTypes: { [A]: e },
      update: () => {
        if (s) {
          const Q = s(this.value);
          Q !== void 0 && (this.value = Q);
        }
        this.uniform.value = this.value;
      },
      generate: ({ inputs: Q, outputs: i }) => {
        const C = (B == null ? void 0 : B({ inputs: Q, outputs: i })) ?? [], E = {}, n = i[A];
        return n && (C.push(`uniform ${je(n, e, I)};`), E[n] = this.uniform), { globals: C, uniforms: E };
      }
    }), this.type = e, this.count = I, this.value = g, this.uniform = { value: g }, this.outKey = A;
  }
  dynoOut() {
    return new q(this, this.outKey);
  }
}
class Qe extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "bool", value: e, update: I });
  }
}
class _I extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "uint", value: e, update: I });
  }
}
class Kt extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "int", value: e, update: I });
  }
}
class ot extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "float", value: e, update: I });
  }
}
class PI extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "bvec2", value: e, update: I });
  }
}
class OI extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "uvec2", value: e, update: I });
  }
}
class WI extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "ivec2", value: e, update: I });
  }
}
class $I extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "vec2", value: e, update: I });
  }
}
class Ag extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "bvec3", value: e, update: I });
  }
}
class tg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "uvec3", value: e, update: I });
  }
}
class eg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "ivec3", value: e, update: I });
  }
}
class St extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "vec3", value: e, update: I });
  }
}
class Ig extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "bvec4", value: e, update: I });
  }
}
class gg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "uvec4", value: e, update: I });
  }
}
class sg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "ivec4", value: e, update: I });
  }
}
class _t extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "vec4", value: e, update: I });
  }
}
class Bg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat2", value: e, update: I });
  }
}
class Qg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat2x2", value: e, update: I });
  }
}
class ig extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat2x3", value: e, update: I });
  }
}
class ng extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat2x4", value: e, update: I });
  }
}
class Cg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat3", value: e, update: I });
  }
}
class Eg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat3x2", value: e, update: I });
  }
}
class ag extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat3x3", value: e, update: I });
  }
}
class og extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat3x4", value: e, update: I });
  }
}
class rg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat4", value: e, update: I });
  }
}
class cg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat4x2", value: e, update: I });
  }
}
class hg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat4x3", value: e, update: I });
  }
}
class lg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "mat4x4", value: e, update: I });
  }
}
class ug extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "usampler2D", value: e, update: I });
  }
}
class wg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "isampler2D", value: e, update: I });
  }
}
class yg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "sampler2D", value: e, update: I });
  }
}
class Tt extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "usampler2DArray", value: e, update: I });
  }
}
class Dg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "isampler2DArray", value: e, update: I });
  }
}
class fg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "sampler2DArray", value: e, update: I });
  }
}
class dg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "usampler3D", value: e, update: I });
  }
}
class pg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "isampler3D", value: e, update: I });
  }
}
class Mg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "sampler3D", value: e, update: I });
  }
}
class Fg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "usamplerCube", value: e, update: I });
  }
}
class mg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "isamplerCube", value: e, update: I });
  }
}
class Ng extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "samplerCube", value: e, update: I });
  }
}
class Sg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "sampler2DShadow", value: e, update: I });
  }
}
class Gg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "sampler2DArrayShadow", value: e, update: I });
  }
}
class kg extends x {
  constructor({
    key: A,
    value: e,
    update: I
  }) {
    super({ key: A, type: "samplerCubeShadow", value: e, update: I });
  }
}
const Pt = new Float32Array(1), le = new Uint32Array(Pt.buffer);
function Tn(t) {
  return Pt[0] = t, le[0];
}
function Hn(t) {
  return le[0] = t, Pt[0];
}
function rt(t) {
  Pt[0] = t;
  const A = le[0], e = A >> 31 & 1, I = A >> 23 & 255, g = A & 8388607, s = e << 15;
  if (I === 255)
    return g !== 0 ? s | 32767 : s | 31744;
  const B = I - 127 + 15;
  if (B >= 31)
    return s | 31744;
  if (B <= 0) {
    if (B < -10)
      return s;
    const i = (g | 8388608) >> 1 - B + 13;
    return s | i;
  }
  const Q = g >> 13;
  return s | B << 10 | Q;
}
function fA(t) {
  const A = t >> 15 & 1, e = t >> 10 & 31, I = t & 1023;
  let g;
  if (e === 0)
    if (I === 0)
      g = A << 31;
    else {
      let s = I, B = -14;
      for (; (s & 1024) === 0; )
        s <<= 1, B--;
      s &= 1023;
      const Q = B + 127, i = s << 13;
      g = A << 31 | Q << 23 | i;
    }
  else if (e === 31)
    I === 0 ? g = A << 31 | 2139095040 : g = A << 31 | 2143289344;
  else {
    const s = e - 15 + 127, B = I << 13;
    g = A << 31 | s << 23 | B;
  }
  return le[0] = g, Pt[0];
}
function GA(t) {
  return Math.max(0, Math.min(255, Math.round(t * 255)));
}
function Ie(t) {
  return Math.max(-127, Math.min(127, Math.round(t * 127)));
}
function Kn(t) {
  return t / 255;
}
function qn(t) {
  return t / 127;
}
class zn {
  // Create a DataCache with a given function that fetches data not in the cache.
  constructor({
    asyncFetch: A,
    maxItems: e = 5
  }) {
    this.asyncFetch = A, this.maxItems = e, this.items = [];
  }
  // Fetch data for the key, returning cached data if available.
  async getFetch(A) {
    const e = this.items.findIndex((g) => g.key === A);
    if (e >= 0) {
      const g = this.items.splice(e, 1)[0];
      return this.items.push(g), g.data;
    }
    const I = await this.asyncFetch(A);
    for (this.items.push({ key: A, data: I }); this.items.length > this.maxItems; )
      this.items.shift();
    return I;
  }
}
function Zn(t, A) {
  const e = Object.entries(t).map(([I, g]) => [
    I,
    A(g, I)
  ]);
  return Object.fromEntries(e);
}
function Vn(t, A) {
  const e = Object.entries(t).map(([I, g]) => [I, A(g, I)]).filter(([I, g]) => g !== void 0);
  return Object.fromEntries(e);
}
function xg(t) {
  const A = [], e = /* @__PURE__ */ new Set();
  function I(g) {
    g && typeof g == "object" && !e.has(g) && (e.add(g), g instanceof ArrayBuffer ? A.push(g) : ArrayBuffer.isView(g) ? A.push(g.buffer) : Array.isArray(g) ? g.forEach(I) : Object.values(g).forEach(I));
  }
  return I(t), A;
}
function jn(t, A) {
  return new Array(t).fill(null).map((e, I) => A(I));
}
class Rg {
  constructor({
    // Allocate a new item with the given args
    allocate: A,
    // Dispose of an item (optional, if GC is enough)
    dispose: e,
    // Check if an existing item in the list is valid for the given args,
    // allowing you to store heterogeneous items in the list.
    valid: I
  }) {
    this.items = [], this.allocate = A, this.dispose = e, this.valid = I;
  }
  // Allocate a new item from the free list, first checking if a existing item
  // on the freelist is valid for the given args.
  alloc(A) {
    for (; ; ) {
      const e = this.items.pop();
      if (!e)
        break;
      if (this.valid(e, A))
        return e;
      this.dispose && this.dispose(e);
    }
    return this.allocate(A);
  }
  free(A) {
    this.items.push(A);
  }
  disposeAll() {
    let A;
    for (A = this.items.pop(); A; )
      this.dispose && this.dispose(A), A = this.items.pop();
  }
}
function Le(t, A, e, I, g, s, B, Q, i, C, E, n, o, r, l, c) {
  const h = GA(r), u = GA(l), y = GA(c), w = GA(o), f = Pe(
    new a.Quaternion(i, C, E, n)
  ), d = f & 255, m = f >>> 8 & 255, M = f >>> 16 & 255, p = s < Mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(s) - HA) / XA) + 1
    )
  ), D = B < Mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(B) - HA) / XA) + 1
    )
  ), R = Q < Mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(Q) - HA) / XA) + 1
    )
  ), N = rt(e), F = rt(I), L = rt(g), G = A * 4;
  t[G] = h | u << 8 | y << 16 | w << 24, t[G + 1] = N | F << 16, t[G + 2] = L | d << 16 | m << 24, t[G + 3] = p | D << 8 | R << 16 | M << 24;
}
function Xn(t, A, e, I, g) {
  const s = rt(e), B = rt(I), Q = rt(g), i = A * 4;
  t[i + 1] = s | B << 16, t[i + 2] = Q | t[i + 2] & 4294901760;
}
function _n(t, A, e, I, g) {
  const s = e < Mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(e) - HA) / XA) + 1
    )
  ), B = I < Mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(I) - HA) / XA) + 1
    )
  ), Q = g < Mt ? 0 : Math.min(
    255,
    Math.max(
      1,
      Math.round((Math.log(g) - HA) / XA) + 1
    )
  ), i = A * 4;
  t[i + 3] = s | B << 8 | Q << 16 | t[i + 3] & 4278190080;
}
function Pn(t, A, e, I, g, s) {
  const B = Pe(
    new a.Quaternion(e, I, g, s)
  ), Q = B & 255, i = B >>> 8 & 255, C = B >>> 16 & 255, E = A * 4;
  t[E + 2] = t[E + 2] & 65535 | Q << 16 | i << 24, t[E + 3] = t[E + 3] & 16777215 | C << 24;
}
function On(t, A, e, I, g, s) {
  const B = GA(e), Q = GA(I), i = GA(g), C = GA(s), E = A * 4;
  t[E] = B | Q << 8 | i << 16 | C << 24;
}
function Wn(t, A, e, I, g) {
  const s = GA(e), B = GA(I), Q = GA(g), i = A * 4;
  t[i] = s | B << 8 | Q << 16 | t[i] & 4278190080;
}
function $n(t, A, e) {
  const I = GA(e), g = A * 4;
  t[g] = t[g] & 16777215 | I << 24;
}
const AC = new a.Vector3(), tC = new a.Vector3(), eC = new a.Quaternion(), IC = new a.Color(), gC = {
  center: AC,
  scales: tC,
  quaternion: eC,
  color: IC,
  opacity: 0
};
function Ye(t, A) {
  const e = gC, I = A * 4, g = t[I], s = t[I + 1], B = t[I + 2], Q = t[I + 3];
  e.color.set(
    (g & 255) / 255,
    (g >>> 8 & 255) / 255,
    (g >>> 16 & 255) / 255
  ), e.opacity = (g >>> 24 & 255) / 255, e.center.set(
    fA(s & 65535),
    fA(s >>> 16 & 65535),
    fA(B & 65535)
  );
  const i = Q & 255;
  e.scales.x = i === 0 ? 0 : Math.exp(HA + (i - 1) * XA);
  const C = Q >>> 8 & 255;
  e.scales.y = C === 0 ? 0 : Math.exp(HA + (C - 1) * XA);
  const E = Q >>> 16 & 255;
  e.scales.z = E === 0 ? 0 : Math.exp(HA + (E - 1) * XA);
  const n = B >>> 16 & 65535 | Q >>> 8 & 16711680;
  return Tg(n, e.quaternion), e;
}
function pA(t) {
  const A = O, e = Math.max(
    SI,
    Math.min(gt, Math.ceil(t / A))
  ), I = Math.ceil(t / (A * e)), g = A * e * I;
  return { width: A, height: e, depth: I, maxSplats: g };
}
function sC(t) {
  const A = O, e = Math.max(
    SI,
    Math.min(gt, Math.ceil(t / A))
  ), I = Math.ceil(t / (A * e));
  return A * e * I;
}
function BC() {
  return navigator.maxTouchPoints > 0 ? !0 : /Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile/.test(
    navigator.userAgent
  );
}
function QC() {
  return /Android/.test(navigator.userAgent);
}
function iC() {
  return /Oculus/.test(navigator.userAgent);
}
function nC(t, A, e) {
  const I = new Uint8Array(A * 4);
  for (let g = 0; g < e / 2; g++) {
    const s = g * A * 4, B = (e - 1 - g) * A * 4;
    I.set(t.subarray(s, s + A * 4)), t.set(
      t.subarray(B, B + A * 4),
      s
    ), t.set(I, B);
  }
  return t;
}
function CC(t, A, e) {
  const I = document.createElement("canvas");
  I.width = A, I.height = e;
  const g = I.getContext("2d");
  if (!g)
    throw new Error("Can't get 2d context");
  const s = g.createImageData(A, e);
  return s.data.set(t), g.putImageData(s, 0, 0), I.toDataURL("image/png");
}
function Ug(t) {
  const A = new a.Clock(t.autoStart);
  return A.startTime = t.startTime, A.oldTime = t.oldTime, A.elapsedTime = t.elapsedTime, A.running = t.running, A;
}
function EC(t) {
  return Object.fromEntries(
    Object.entries(t).filter(([A, e]) => e !== void 0)
  );
}
const Lg = oA(`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
`);
function Yg(t) {
  const A = new a.Vector3();
  for (const e of t)
    A.add(e);
  return A.divideScalar(t.length);
}
function Jg(t) {
  if (t.length === 0)
    return new a.Quaternion();
  const A = t[0].clone();
  for (let e = 1; e < t.length; e++)
    t[e].dot(t[0]) < 0 ? (A.x -= t[e].x, A.y -= t[e].y, A.z -= t[e].z, A.w -= t[e].w) : (A.x += t[e].x, A.y += t[e].y, A.z += t[e].z, A.w += t[e].w);
  return A.normalize();
}
function vg(t, A) {
  const e = new a.Vector3(0, 0, 0).applyMatrix4(t), I = new a.Vector3(0, 0, 0).applyMatrix4(A), g = new a.Vector3(0, 0, -1).applyMatrix4(t).sub(e).normalize(), s = new a.Vector3(0, 0, -1).applyMatrix4(A).sub(I).normalize(), B = e.distanceTo(I), Q = g.dot(s);
  return { distance: B, coincidence: Q };
}
function aC({
  matrix1: t,
  matrix2: A,
  maxDistance: e
}) {
  const I = new a.Vector3(0, 0, 0).applyMatrix4(t), g = new a.Vector3(0, 0, 0).applyMatrix4(A);
  return I.distanceTo(g) <= e;
}
function oC({
  matrix1: t,
  matrix2: A,
  maxDistance: e,
  minCoincidence: I
}) {
  const { distance: g, coincidence: s } = vg(t, A);
  return g <= e && (I == null || s >= I);
}
function bg(t, A) {
  const [e, I] = [new a.Vector3(), new a.Quaternion()], [g, s] = [new a.Vector3(), new a.Quaternion()];
  t.decompose(e, I, new a.Vector3()), A.decompose(g, s, new a.Vector3());
  const B = e.distanceTo(g), Q = Math.abs(I.dot(s));
  return { distance: B, coorient: Q };
}
function ie({
  matrix1: t,
  matrix2: A,
  maxDistance: e,
  minCoorient: I
}) {
  const { distance: g, coorient: s } = bg(t, A);
  return g <= e && (I == null || s >= I);
}
function rC(t, A = 1e-3) {
  return Math.abs(t) < A ? 0 : Math.sign(t);
}
function cC(t) {
  const A = t.w < 0, e = Ie(A ? -t.x : t.x), I = Ie(A ? -t.y : t.y), g = Ie(A ? -t.z : t.z), s = e & 255, B = I & 255, Q = g & 255;
  return s | B << 8 | Q << 16;
}
function hC(t, A) {
  const e = t << 24 >> 24, I = t << 16 >> 24, g = t << 8 >> 24;
  A.set(e / 127, I / 127, g / 127, 0);
  const s = A.x * A.x + A.y * A.y + A.z * A.z;
  return A.w = Math.sqrt(Math.max(0, 1 - s)), A;
}
function Pe(t) {
  const A = t.clone().normalize();
  A.w < 0 && A.set(-A.x, -A.y, -A.z, -A.w);
  const e = 2 * Math.acos(A.w), I = Math.sqrt(
    A.x * A.x + A.y * A.y + A.z * A.z
  ), g = I < 1e-6 ? new a.Vector3(1, 0, 0) : new a.Vector3(A.x, A.y, A.z).divideScalar(I), s = Math.abs(g.x) + Math.abs(g.y) + Math.abs(g.z);
  let B = g.x / s, Q = g.y / s;
  if (g.z < 0) {
    const r = B;
    B = (1 - Math.abs(Q)) * (B >= 0 ? 1 : -1), Q = (1 - Math.abs(r)) * (Q >= 0 ? 1 : -1);
  }
  const i = B * 0.5 + 0.5, C = Q * 0.5 + 0.5, E = Math.round(i * 255), n = Math.round(C * 255);
  return Math.round(e * (255 / Math.PI)) << 16 | n << 8 | E;
}
function Tg(t, A) {
  const e = t & 255, I = t >>> 8 & 255, g = t >>> 16 & 255, s = e / 255, B = I / 255;
  let Q = (s - 0.5) * 2, i = (B - 0.5) * 2;
  const C = 1 - (Math.abs(Q) + Math.abs(i)), E = Math.max(-C, 0);
  Q += Q >= 0 ? -E : E, i += i >= 0 ? -E : E;
  const n = new a.Vector3(Q, i, C).normalize(), r = g / 255 * Math.PI * 0.5, l = Math.sin(r), c = Math.cos(r);
  return A.set(n.x * l, n.y * l, n.z * l, c), A;
}
function lC(t) {
  const A = t.clone().normalize(), e = 2 * (A.w * A.x + A.y * A.z), I = 1 - 2 * (A.x * A.x + A.y * A.y), g = Math.atan2(e, I), s = 2 * (A.w * A.y - A.z * A.x), B = Math.abs(s) >= 1 ? Math.sign(s) * (Math.PI / 2) : Math.asin(s), Q = 2 * (A.w * A.z + A.x * A.y), i = 1 - 2 * (A.y * A.y + A.z * A.z), C = Math.atan2(Q, i), E = (g + Math.PI) / (2 * Math.PI), n = (B + Math.PI) / (2 * Math.PI), o = (C + Math.PI) / (2 * Math.PI), r = Math.round(E * 255), l = Math.round(n * 255);
  return Math.round(o * 255) << 16 | l << 8 | r;
}
function uC(t, A) {
  const e = t & 255, I = t >>> 8 & 255, g = t >>> 16 & 255, s = e / 255, B = I / 255, Q = g / 255, i = s * (2 * Math.PI) - Math.PI, C = B * (2 * Math.PI) - Math.PI, E = Q * (2 * Math.PI) - Math.PI, n = Math.cos(i * 0.5), o = Math.sin(i * 0.5), r = Math.cos(C * 0.5), l = Math.sin(C * 0.5), c = Math.cos(E * 0.5), h = Math.sin(E * 0.5);
  return A.w = n * r * c + o * l * h, A.x = o * r * c - n * l * h, A.y = n * l * c + o * r * h, A.z = n * r * h - o * l * c, A.normalize(), A;
}
function Wt(t, A, e, I) {
  const g = Math.max(-127, Math.min(127, t * 127)), s = Math.max(-127, Math.min(127, A * 127)), B = Math.max(-127, Math.min(127, e * 127)), Q = Math.max(-127, Math.min(127, I * 127));
  return g & 255 | (s & 255) << 8 | (B & 255) << 16 | (Q & 255) << 24;
}
function wC(t, A, e) {
  const I = A * 2;
  for (let g = 0; g < 9; ++g) {
    const s = Math.max(-63, Math.min(63, e[g] * 63)) & 127, B = g * 7, Q = B + 7, i = Math.floor(B / 32), C = B - i * 32, E = s << C & 4294967295;
    if (t[I + i] |= E, Q > i * 32 + 32) {
      const n = s >>> 32 - C & 4294967295;
      t[I + i + 1] |= n;
    }
  }
}
function yC(t, A, e) {
  t[A * 4 + 0] = Wt(
    e[0],
    e[1],
    e[2],
    e[3]
  ), t[A * 4 + 1] = Wt(
    e[4],
    e[5],
    e[6],
    e[7]
  ), t[A * 4 + 2] = Wt(
    e[8],
    e[9],
    e[10],
    e[11]
  ), t[A * 4 + 3] = Wt(
    e[12],
    e[13],
    e[14],
    0
  );
}
function DC(t, A, e) {
  const I = A * 4;
  for (let g = 0; g < 21; ++g) {
    const s = Math.max(-31, Math.min(31, e[g] * 31)) & 63, B = g * 6, Q = B + 6, i = Math.floor(B / 32), C = B - i * 32, E = s << C & 4294967295;
    if (t[I + i] |= E, Q > i * 32 + 32) {
      const n = s >>> 32 - C & 4294967295;
      t[I + i + 1] |= n;
    }
  }
}
function Hg(t, A) {
  const e = [];
  let I = 0, g = null;
  const s = new FI((i, C) => {
    if (e.push(i), I += i.length, C || I >= A) {
      const E = new Uint8Array(I);
      let n = 0;
      for (const o of e)
        E.set(o, n), n += o.length;
      g = E.slice(0, A);
    }
  }), B = 1024;
  let Q = 0;
  for (; g == null && Q < t.length; ) {
    const i = t.slice(Q, Q + B);
    s.push(i, !1), Q += B;
  }
  if (g == null && (s.push(new Uint8Array(), !0), g == null))
    throw new Error("Failed to decompress partial gzip");
  return g;
}
class Kg {
  constructor({
    fileBytes: A,
    chunkBytes: e = 64 * 1024
  }) {
    this.fileBytes = A, this.chunkBytes = e, this.offset = 0, this.chunks = [], this.totalBytes = 0, this.gunzip = new FI((I, g) => {
      this.chunks.push(I), this.totalBytes += I.length;
    });
  }
  read(A) {
    for (; this.totalBytes < A && this.offset < this.fileBytes.length; ) {
      const s = Math.min(
        this.offset + this.chunkBytes,
        this.fileBytes.length
      );
      this.gunzip.push(this.fileBytes.subarray(this.offset, s), !1), this.offset = s;
    }
    if (this.totalBytes < A && this.offset >= this.fileBytes.length && this.gunzip.push(new Uint8Array(0), !0), this.totalBytes < A)
      throw new Error(
        `Unexpected EOF: needed ${A}, got ${this.totalBytes}`
      );
    const e = new Uint8Array(this.totalBytes);
    let I = 0;
    for (const s of this.chunks)
      e.set(s, I), I += s.length;
    const g = e.subarray(0, A);
    return this.chunks = [e.subarray(A)], this.totalBytes -= A, g;
  }
}
const wr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DataCache: zn,
  FreeList: Rg,
  GunzipReader: Kg,
  IDENT_VERTEX_SHADER: Lg,
  Sint8ToFloat: qn,
  Uint8ToFloat: Kn,
  averagePositions: Yg,
  averageQuaternions: Jg,
  cloneClock: Ug,
  coinciDist: vg,
  computeMaxSplats: sC,
  coorientDist: bg,
  decodeQuatEulerXyz888: uC,
  decodeQuatOctXy88R8: Tg,
  decodeQuatXyz888: hC,
  decompressPartialGzip: Hg,
  encodeQuatEulerXyz888: lC,
  encodeQuatOctXy88R8: Pe,
  encodeQuatXyz888: cC,
  encodeSh1Rgb: wC,
  encodeSh2Rgb: yC,
  encodeSh3Rgb: DC,
  epsilonSign: rC,
  flipPixels: nC,
  floatBitsToUint: Tn,
  floatToSint8: Ie,
  floatToUint8: GA,
  fromHalf: fA,
  getArrayBuffers: xg,
  getTextureSize: pA,
  isAndroid: QC,
  isMobile: BC,
  isOculus: iC,
  mapFilterObject: Vn,
  mapObject: Zn,
  newArray: jn,
  omitUndefined: EC,
  pixelsToPngUrl: CC,
  setPackedSplat: Le,
  setPackedSplatCenter: Xn,
  setPackedSplatOpacity: $n,
  setPackedSplatQuat: Pn,
  setPackedSplatRgb: Wn,
  setPackedSplatRgba: On,
  setPackedSplatScales: _n,
  toHalf: rt,
  uintBitsToFloat: Hn,
  unpackSplat: Ye,
  withinCoinciDist: oC,
  withinCoorientDist: ie,
  withinDist: aC
}, Symbol.toStringTag, { value: "Module" }));
class Oe {
  constructor({
    graph: A,
    inputs: e,
    outputs: I,
    template: g
  }) {
    this.graph = A, this.template = g, this.inputs = e ?? {}, this.outputs = I ?? {};
    const s = new YI({ indent: this.template.indent });
    for (const Q in this.outputs)
      this.outputs[Q] && s.declares.add(this.outputs[Q]);
    const B = A.compile({
      inputs: this.inputs,
      outputs: this.outputs,
      compile: s
    });
    this.shader = g.generate({ globals: s.globals, statements: B }), this.uniforms = s.uniforms, this.updaters = s.updaters;
  }
  prepareMaterial() {
    return fC(this);
  }
  update() {
    for (const A of this.updaters)
      A();
  }
}
class We {
  constructor(A) {
    const e = A.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m), I = A.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);
    if (!e || !I)
      throw new Error(
        "Template must contain {{ GLOBALS }} and {{ STATEMENTS }}"
      );
    this.before = A.substring(0, e.index), this.between = A.substring(
      e.index + e[0].length,
      I.index
    ), this.after = A.substring(
      I.index + I[0].length
    ), this.indent = I[1];
  }
  generate({
    globals: A,
    statements: e
  }) {
    return this.before + Array.from(A).join(`

`) + this.between + e.map((I) => this.indent + I).join(`
`) + this.after;
  }
}
const nI = /* @__PURE__ */ new Map();
function fC(t) {
  let A = nI.get(t);
  return A || (A = new a.RawShaderMaterial({
    glslVersion: a.GLSL3,
    vertexShader: Lg,
    fragmentShader: t.shader,
    uniforms: t.uniforms
  }), nI.set(t, A), A);
}
function $e(t, A, e = "add") {
  const I = () => {
    throw new Error(`Invalid ${e} types: ${t}, ${A}`);
  };
  if (t === A) return t;
  if (t === "int") {
    if (cA(A)) return A;
    I();
  }
  if (A === "int") {
    if (cA(t)) return t;
    I();
  }
  if (t === "uint") {
    if (hA(A)) return A;
    I();
  }
  if (A === "uint") {
    if (hA(t)) return t;
    I();
  }
  if (t === "float") {
    if (Qt(A)) return A;
    I();
  }
  if (A === "float") {
    if (Qt(t)) return t;
    I();
  }
  throw new Error(`Invalid ${e} types: ${t}, ${A}`);
}
function dC(t, A) {
  return $e(t, A, "sub");
}
function pC(t, A) {
  const e = () => {
    throw new Error(`Invalid mul types: ${t}, ${A}`);
  }, I = (g) => g;
  if (t === "int") {
    if (cA(A)) return I(A);
    e();
  }
  if (A === "int") {
    if (cA(t)) return I(t);
    e();
  }
  if (t === "uint") {
    if (hA(A)) return I(A);
    e();
  }
  if (A === "uint") {
    if (hA(t)) return I(t);
    e();
  }
  if (t === "float") {
    if (Qt(A)) return I(A);
    e();
  }
  if (A === "float") {
    if (Qt(t)) return I(t);
    e();
  }
  if (cA(t) || hA(t) || cA(A) || hA(A)) {
    if (t === A) return I(t);
    e();
  }
  if (t === "vec2") {
    if (A === "vec2" || it(A)) return I("vec2");
    if (A === "mat3x2") return I("vec3");
    if (A === "mat4x2") return I("vec4");
    e();
  }
  if (t === "vec3") {
    if (A === "mat2x3") return I("vec2");
    if (A === "vec3" || nt(A)) return I("vec3");
    if (A === "mat4x3") return I("vec4");
    e();
  }
  if (t === "vec4") {
    if (A === "mat2x4") return I("vec2");
    if (A === "mat3x4") return I("vec3");
    if (A === "vec4" || Ct(A)) return I("vec4");
    e();
  }
  if (A === "vec2") {
    if (it(t)) return I("vec2");
    if (t === "mat2x3") return I("vec3");
    if (t === "mat2x4") return I("vec4");
    e();
  }
  if (A === "vec3") {
    if (t === "mat3x2") return I("vec2");
    if (nt(t)) return I("vec3");
    if (t === "mat3x4") return I("vec4");
    e();
  }
  if (A === "vec4") {
    if (t === "mat4x2") return I("vec2");
    if (t === "mat4x3") return I("vec3");
    if (Ct(t)) return I("vec4");
    e();
  }
  if (it(t)) {
    if (it(A)) return I("mat2");
    if (A === "mat3x2") return I("mat3x2");
    if (A === "mat4x2") return I("mat4x2");
    e();
  }
  if (t === "mat2x3") {
    if (it(A)) return I("mat2x3");
    if (A === "mat3x2") return I("mat3");
    if (A === "mat4x2") return I("mat4x3");
    e();
  }
  if (t === "mat2x4") {
    if (it(A)) return I("mat2x4");
    if (A === "mat3x2") return I("mat3x4");
    if (A === "mat4x2") return I("mat4");
    e();
  }
  if (t === "mat3x2") {
    if (A === "mat2x3") return I("mat2");
    if (nt(A)) return I("mat3x2");
    if (A === "mat4x3") return I("mat4x2");
    e();
  }
  if (nt(t)) {
    if (A === "mat2x3") return I("mat2x3");
    if (nt(A)) return I("mat3");
    if (A === "mat4x3") return I("mat4x3");
    e();
  }
  if (t === "mat3x4") {
    if (A === "mat2x3") return I("mat2x4");
    if (nt(A)) return I("mat3x4");
    if (A === "mat4x3") return I("mat4");
    e();
  }
  if (t === "mat4x2") {
    if (A === "mat2x4") return I("mat2");
    if (A === "mat3x4") return I("mat3x2");
    if (Ct(A)) return I("mat4x2");
    e();
  }
  if (t === "mat4x3") {
    if (A === "mat2x4") return I("mat2x3");
    if (A === "mat3x4") return I("mat3");
    if (Ct(A)) return I("mat4x3");
    e();
  }
  if (Ct(t)) {
    if (A === "mat2x4") return I("mat2x4");
    if (A === "mat3x4") return I("mat3x4");
    if (Ct(A)) return I("mat4");
    e();
  }
  throw new Error(`Invalid mul types: ${t}, ${A}`);
}
function MC(t, A) {
  return $e(t, A, "div");
}
function FC(t, A) {
  if (t === A) return t;
  if (t === "int") {
    if (cA(A)) return A;
  } else if (A === "int") {
    if (cA(t)) return t;
  } else if (t === "uint") {
    if (hA(A)) return A;
  } else if (A === "uint" && hA(t))
    return t;
  throw new Error(`Invalid imod types: ${t}, ${A}`);
}
function mC(t, A) {
  if (t === A || A === "float") return t;
  throw new Error(`Invalid mod types: ${t}, ${A}`);
}
function NC(t) {
  return t;
}
function SC(t) {
  return t;
}
function GC(t) {
  return t;
}
function kC(t) {
  return t;
}
function xC(t) {
  return t;
}
function RC(t) {
  return t;
}
function UC(t) {
  return t;
}
function LC(t) {
  return t;
}
function YC(t) {
  return t;
}
function JC(t) {
  return t;
}
function vC(t) {
  return t;
}
function bC(t) {
  return t;
}
function TC(t) {
  return t;
}
function HC(t) {
  return t;
}
function KC(t) {
  return t;
}
function qC(t) {
  return t;
}
function qg(t, A, e = "min") {
  if (t === A) return t;
  if (A === "float") {
    if (Zt(t)) return t;
  } else if (A === "int") {
    if (cA(t)) return t;
  } else if (A === "uint" && hA(t))
    return t;
  throw new Error(`Invalid ${e} types: ${t}, ${A}`);
}
function zC(t, A) {
  return qg(t, A, "max");
}
function ZC(t, A, e) {
  if (A === "float") {
    if (Zt(t)) return t;
  } else if (A === "int") {
    if (cA(t)) return t;
  } else if (A === "uint" && hA(t))
    return t;
  throw new Error(`Invalid clamp types: ${t}, ${A}`);
}
function VC(t, A, e) {
  if (e === t || e === "float" || e === "bool" && t === "float" || e === "bvec2" && t === "vec2" || e === "bvec3" && t === "vec3" || e === "bvec4" && t === "vec4") return t;
  throw new Error(`Invalid mix types: ${t}, ${A}, ${e}`);
}
function jC(t, A) {
  if (t === A || A === "float") return A;
  throw new Error(`Invalid step types: ${t}, ${A}`);
}
function XC(t, A, e) {
  if (t === A && (t === e || t === "float"))
    return e;
  throw new Error(`Invalid smoothstep types: ${t}, ${A}, ${e}`);
}
function zg(t, A = "isNan") {
  if (t === "float") return "bool";
  if (t === "vec2") return "bvec2";
  if (t === "vec3") return "bvec3";
  if (t === "vec4") return "bvec4";
  throw new Error(`Invalid ${A} types: ${t}`);
}
function _C(t) {
  return zg(t, "isInf");
}
const dA = (t, A) => new Xg({ a: t, b: A }), Gt = (t, A) => new _g({ a: t, b: A }), EA = (t, A) => new Pg({ a: t, b: A }), ge = (t, A) => new Og({ a: t, b: A }), Je = (t, A) => new Wg({ a: t, b: A }), Zg = (t, A) => new $g({ a: t, b: A }), PC = (t) => new As({ a: t }).outputs, AI = (t) => new ts({ a: t }), OC = (t) => new es({ a: t }), WC = (t) => new Is({ a: t }), $C = (t) => new gs({ a: t }), AE = (t) => new ss({ a: t }), tE = (t) => new Bs({ a: t }), eE = (t) => new Qs({ a: t }), se = (t) => new is({ a: t }), IE = (t, A) => new ns({ a: t, b: A }), gE = (t) => new Cs({ a: t }), sE = (t) => new Es({ a: t }), BE = (t) => new as({ a: t }), QE = (t) => new os({ a: t }), iE = (t) => new rs({ a: t }), nE = (t) => new cs({ a: t }), CE = (t) => new hs({ a: t }), EE = (t, A) => new ls({ a: t, b: A }), Vg = (t, A) => new us({ a: t, b: A }), aE = (t, A, e) => new ws({ a: t, min: A, max: e }), jg = (t, A, e) => new ys({ a: t, b: A, t: e }), oE = (t, A) => new Ds({ edge: t, x: A }), rE = (t, A, e) => new fs({ edge0: t, edge1: A, x: e }), cE = (t) => new ds({ a: t }), hE = (t) => new ps({ a: t });
class Xg extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "sum", outTypeFunc: $e }), this.statements = ({ inputs: I, outputs: g }) => [`${g.sum} = ${I.a} + ${I.b};`];
  }
}
class _g extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "difference", outTypeFunc: dC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.difference} = ${I.a} - ${I.b};`];
  }
}
class Pg extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "product", outTypeFunc: pC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.product} = ${I.a} * ${I.b};`];
  }
}
class Og extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "quotient", outTypeFunc: MC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.quotient} = ${I.a} / ${I.b};`];
  }
}
class Wg extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "remainder", outTypeFunc: FC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.remainder} = ${I.a} % ${I.b};`];
  }
}
class $g extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "remainder", outTypeFunc: mC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.remainder} = mod(${I.a}, ${I.b});`];
  }
}
class As extends V {
  constructor({ a: A }) {
    const e = { a: Z(A) }, I = e.a, g = {
      fract: I,
      integer: I
    };
    super({ inTypes: e, outTypes: g, inputs: { a: A } }), this.statements = ({ inputs: s, outputs: B }) => [`${B.fract} = modf(${s.a}, ${B.integer});`];
  }
}
class ts extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "neg", outTypeFunc: NC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.neg} = -${e.a};`];
  }
}
class es extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "abs", outTypeFunc: SC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.abs} = abs(${e.a});`];
  }
}
class Is extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "sign", outTypeFunc: GC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.sign} = sign(${e.a});`];
  }
}
class gs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "floor", outTypeFunc: kC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.floor} = floor(${e.a});`];
  }
}
class ss extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "ceil", outTypeFunc: xC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.ceil} = ceil(${e.a});`];
  }
}
class Bs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "trunc", outTypeFunc: RC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.trunc} = trunc(${e.a});`];
  }
}
class Qs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "round", outTypeFunc: UC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.round} = round(${e.a});`];
  }
}
class is extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "fract", outTypeFunc: LC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.fract} = fract(${e.a});`];
  }
}
class ns extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "power", outTypeFunc: YC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.power} = pow(${I.a}, ${I.b});`];
  }
}
class Cs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "exp", outTypeFunc: JC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.exp} = exp(${e.a});`];
  }
}
class Es extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "exp2", outTypeFunc: vC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.exp2} = exp2(${e.a});`];
  }
}
class as extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "log", outTypeFunc: bC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.log} = log(${e.a});`];
  }
}
class os extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "log2", outTypeFunc: TC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.log2} = log2(${e.a});`];
  }
}
class rs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "sqr", outTypeFunc: HC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.sqr} = ${e.a} * ${e.a};`];
  }
}
class cs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "sqrt", outTypeFunc: KC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.sqrt} = sqrt(${e.a});`];
  }
}
class hs extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "inversesqrt", outTypeFunc: qC }), this.statements = ({ inputs: e, outputs: I }) => [`${I.inversesqrt} = inversesqrt(${e.a});`];
  }
}
class ls extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "min", outTypeFunc: qg }), this.statements = ({ inputs: I, outputs: g }) => [`${g.min} = min(${I.a}, ${I.b});`];
  }
}
class us extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "max", outTypeFunc: zC }), this.statements = ({ inputs: I, outputs: g }) => [`${g.max} = max(${I.a}, ${I.b});`];
  }
}
class ws extends ut {
  constructor({
    a: A,
    min: e,
    max: I
  }) {
    super({
      a: A,
      b: e,
      c: I,
      outKey: "clamp",
      outTypeFunc: ZC
    }), this.statements = ({ inputs: g, outputs: s }) => {
      const { a: B, b: Q, c: i } = g;
      return [`${s.clamp} = clamp(${B}, ${Q}, ${i});`];
    };
  }
}
class ys extends ut {
  constructor({ a: A, b: e, t: I }) {
    super({ a: A, b: e, c: I, outKey: "mix", outTypeFunc: VC }), this.statements = ({ inputs: g, outputs: s }) => {
      const { a: B, b: Q, c: i } = g;
      return [`${s.mix} = mix(${B}, ${Q}, ${i});`];
    };
  }
}
class Ds extends $ {
  constructor({ edge: A, x: e }) {
    super({
      a: A,
      b: e,
      outKey: "step",
      outTypeFunc: jC
    }), this.statements = ({ inputs: I, outputs: g }) => {
      const { a: s, b: B } = I;
      return [`${g.step} = step(${s}, ${B});`];
    };
  }
}
class fs extends ut {
  constructor({
    edge0: A,
    edge1: e,
    x: I
  }) {
    super({
      a: A,
      b: e,
      c: I,
      outKey: "smoothstep",
      outTypeFunc: XC
    }), this.statements = ({ inputs: g, outputs: s }) => {
      const { a: B, b: Q, c: i } = g;
      return [`${s.smoothstep} = smoothstep(${B}, ${Q}, ${i});`];
    };
  }
}
class ds extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "isNan", outTypeFunc: zg }), this.statements = ({ inputs: e, outputs: I }) => [`${I.isNan} = isNan(${e.a});`];
  }
}
class ps extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "isInf", outTypeFunc: _C }), this.statements = ({ inputs: e, outputs: I }) => [`${I.isInf} = isInf(${e.a});`];
  }
}
const lE = (t, A) => new Fs({ a: t, b: A }), uE = (t, A) => new ms({ a: t, b: A }), wE = (t, A) => new Ns({ a: t, b: A }), yE = (t) => new Ss({ a: t }), DE = (t, A) => new Gs({ a: t, b: A }), fE = (t, A) => new ks({ a: t, b: A }), dE = (t, A) => new xs({ a: t, b: A }), Ms = (t, A) => new Rs({ a: t, b: A }), pE = (t, A) => new Us({ a: t, b: A }), ME = (t, A) => new Ls({ a: t, b: A }), FE = (t) => new Ys({ a: t }), mE = (t) => new Js({ a: t }), tI = (t, A, e) => new vs({ cond: t, t: A, f: e }), NE = (t) => new Ts({ a: t });
class Fs extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (I, g) => I, outKey: "and" }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.and === "bool" ? [`${g.and} = ${I.a} && ${I.b};`] : [`${g.and} = ${I.a} & ${I.b};`];
  }
}
class ms extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (I, g) => I, outKey: "or" }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.or === "bool" ? [`${g.or} = ${I.a} || ${I.b};`] : [`${g.or} = ${I.a} | ${I.b};`];
  }
}
class Ns extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: (I, g) => I, outKey: "xor" }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.xor === "bool" ? [`${g.xor} = ${I.a} ^^ ${I.b};`] : [`${g.xor} = ${I.a} ^ ${I.b};`];
  }
}
class Ss extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "not" }), this.statements = ({ inputs: e, outputs: I }) => this.outTypes.not === "bool" ? [`${I.not} = !${e.a};`] : [`${I.not} = not(${e.a});`];
  }
}
class Gs extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (I, g) => ue(I, "lessThan"),
      outKey: "lessThan"
    }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.lessThan === "bool" ? [`${g.lessThan} = ${I.a} < ${I.b};`] : [`${g.lessThan} = lessThan(${I.a}, ${I.b});`];
  }
}
class ks extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (I, g) => ue(I, "lessThanEqual"),
      outKey: "lessThanEqual"
    }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.lessThanEqual === "bool" ? [`${g.lessThanEqual} = ${I.a} <= ${I.b};`] : [
      `${g.lessThanEqual} = lessThanEqual(${I.a}, ${I.b});`
    ];
  }
}
class xs extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (I, g) => ue(I, "greaterThan"),
      outKey: "greaterThan"
    }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.greaterThan === "bool" ? [`${g.greaterThan} = ${I.a} > ${I.b};`] : [
      `${g.greaterThan} = greaterThan(${I.a}, ${I.b});`
    ];
  }
}
class Rs extends $ {
  constructor({ a: A, b: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (I, g) => ue(I, "greaterThanEqual"),
      outKey: "greaterThanEqual"
    }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.greaterThanEqual === "bool" ? [`${g.greaterThanEqual} = ${I.a} >= ${I.b};`] : [
      `${g.greaterThanEqual} = greaterThanEqual(${I.a}, ${I.b});`
    ];
  }
}
class Us extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: bs, outKey: "equal" }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.equal === "bool" ? [`${g.equal} = ${I.a} == ${I.b};`] : [`${g.equal} = equal(${I.a}, ${I.b});`];
  }
}
class Ls extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outTypeFunc: SE, outKey: "notEqual" }), this.statements = ({ inputs: I, outputs: g }) => this.outTypes.notEqual === "bool" ? [`${g.notEqual} = ${I.a} != ${I.b};`] : [`${g.notEqual} = notEqual(${I.a}, ${I.b});`];
  }
}
class Ys extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "bool", outKey: "any" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.any} = any(${e.a});`];
  }
}
class Js extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "bool", outKey: "all" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.all} = all(${e.a});`];
  }
}
class vs extends ut {
  constructor({
    cond: A,
    t: e,
    f: I
  }) {
    super({
      a: A,
      b: e,
      c: I,
      outKey: "select",
      outTypeFunc: (g, s, B) => s
    }), this.statements = ({ inputs: g, outputs: s }) => {
      const { a: B, b: Q, c: i } = g;
      return [`${s.select} = (${B}) ? (${Q}) : (${i});`];
    };
  }
}
function ue(t, A) {
  if (lt(t))
    return "bool";
  if (t === "ivec2" || t === "uvec2" || t === "vec2")
    return "bvec2";
  if (t === "ivec3" || t === "uvec3" || t === "vec3")
    return "bvec3";
  if (t === "ivec4" || t === "uvec4" || t === "vec4")
    return "bvec4";
  throw new Error(`Invalid ${A} type: ${t}`);
}
function bs(t, A = "equal") {
  if (lt(t))
    return "bool";
  if (ht(t))
    return t;
  if (t === "ivec2" || t === "uvec2" || t === "vec2")
    return "bvec2";
  if (t === "ivec3" || t === "uvec3" || t === "vec3")
    return "bvec3";
  if (t === "ivec4" || t === "uvec4" || t === "vec4")
    return "bvec4";
  throw new Error(`Invalid ${A} type: ${t}`);
}
function SE(t) {
  return bs(t, "notEqual");
}
function GE(t) {
  if (ht(t))
    return "bool";
  if (cA(t))
    return "int";
  if (hA(t))
    return "uint";
  throw new Error(`Invalid compXor type: ${t}`);
}
class Ts extends S {
  constructor({ a: A }) {
    const e = GE(Z(A));
    super({ a: A, outTypeFunc: (I) => e, outKey: "compXor" }), this.statements = ({ inputs: I, outputs: g }) => {
      if (lt(this.outTypes.compXor))
        return [`${g.compXor} = ${I.a};`];
      const B = (kt(e) ? ["x", "y"] : xt(e) ? ["x", "y", "z"] : ["x", "y", "z", "w"]).map((i) => `${I.a}.${i}`), Q = ht(e) ? "^^" : "^";
      return [`${g.compXor} = ${B.join(` ${Q} `)};`];
    };
  }
}
const kE = (t) => new js({ value: t }), xE = (t) => new Xs({ value: t }), RE = (t) => new _s({ value: t }), Hs = (t) => new Ps({ value: t }), UE = (t) => new Os({ value: t }), LE = (t) => new Ws({ value: t }), YE = (t) => new $s({ value: t }), JE = (t) => new AB({ value: t }), vE = (t) => new tB({ value: t }), bE = (t) => new eB({ value: t }), TE = (t) => new IB({ value: t }), HE = (t) => new gB({ value: t }), KE = (t) => new sB({ value: t }), Ks = (t) => new BB({ value: t }), ct = (t) => new QB({ value: t }), qs = (t) => new iB({ value: t }), qE = (t) => new nB({ value: t }), zE = (t) => new CB({ value: t }), ZE = (t) => new EB({ value: t }), zs = (t) => new aB({ value: t }), Zs = (t) => new oB({ value: t }), VE = (t) => new rB({ value: t }), jE = (t) => new cB({ value: t }), XE = (t) => new hB({ value: t }), _E = (t) => new lB({ value: t }), PE = (t) => new uB({ value: t }), OE = (t) => new wB({ value: t }), Vs = (t) => new yB({ value: t }), WE = (t) => new DB({ value: t }), ve = (t) => new fB({ value: t });
class iA extends S {
  constructor({
    value: A,
    outType: e,
    outKey: I
  }) {
    super({ a: A, outTypeFunc: () => e, outKey: I }), this.statements = ({ inputs: g, outputs: s }) => [
      `${s[I]} = ${UI(e)}(${g.a});`
    ];
  }
}
class js extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bool", outKey: "bool" });
  }
}
class Xs extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "int", outKey: "int" });
  }
}
class _s extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uint", outKey: "uint" });
  }
}
class Ps extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "float", outKey: "float" });
  }
}
class Os extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec2", outKey: "bvec2" });
  }
}
class Ws extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec3", outKey: "bvec3" });
  }
}
class $s extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "bvec4", outKey: "bvec4" });
  }
}
class AB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec2", outKey: "ivec2" });
  }
}
class tB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec3", outKey: "ivec3" });
  }
}
class eB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "ivec4", outKey: "ivec4" });
  }
}
class IB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec2", outKey: "uvec2" });
  }
}
class gB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec3", outKey: "uvec3" });
  }
}
class sB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "uvec4", outKey: "uvec4" });
  }
}
class BB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec2", outKey: "vec2" });
  }
}
class QB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec3", outKey: "vec3" });
  }
}
class iB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "vec4", outKey: "vec4" });
  }
}
class nB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat2", outKey: "mat2" });
  }
}
class CB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat3", outKey: "mat3" });
  }
}
class EB extends iA {
  constructor({
    value: A
  }) {
    super({ value: A, outType: "mat4", outKey: "mat4" });
  }
}
class aB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "int", outTypeFunc: () => "int" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.int} = floatBitsToInt(${e.a});`];
  }
}
class oB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.uint} = floatBitsToUint(${e.a});`];
  }
}
class rB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "float", outTypeFunc: () => "float" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.float} = intBitsToFloat(${e.a});`];
  }
}
class cB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "float", outTypeFunc: () => "float" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.float} = uintBitsToFloat(${e.a});`];
  }
}
class hB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.uint} = packSnorm2x16(${e.a});`];
  }
}
class lB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.vec2} = unpackSnorm2x16(${e.a});`];
  }
}
class uB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.uint} = packUnorm2x16(${e.a});`];
  }
}
class wB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.vec2} = unpackUnorm2x16(${e.a});`];
  }
}
class yB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "uint", outTypeFunc: () => "uint" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.uint} = packHalf2x16(${e.a});`];
  }
}
class DB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "vec2", outTypeFunc: () => "vec2" }), this.statements = ({ inputs: e, outputs: I }) => [`${I.vec2} = unpackHalf2x16(${e.a});`];
  }
}
class fB extends S {
  constructor({ value: A }) {
    super({ a: A, outKey: "rgba8", outTypeFunc: () => "vec4" }), this.statements = ({ inputs: e, outputs: I }) => [
      `uvec4 uRgba = uvec4(${e.a} & 0xffu, (${e.a} >> 8u) & 0xffu, (${e.a} >> 16u) & 0xffu, (${e.a} >> 24u) & 0xffu);`,
      `${I.rgba8} = vec4(uRgba) / 255.0;`
    ];
  }
}
const $E = (t) => new FB({ a: t }), Aa = (t, A) => new mB({ a: t, b: A }), dB = (t, A) => new NB({ a: t, b: A }), ta = (t, A) => new SB({ a: t, b: A }), pB = (t) => new GB({ a: t }), ea = (t, A, e) => new RB({ a: t, b: A, c: e }), Ia = (t, A) => new UB({ incident: t, normal: A }), ga = (t, A, e) => new LB({ incident: t, normal: A, eta: e }), Nt = (t) => new HB({ vector: t }), KA = ({
  vector: t,
  vectorType: A,
  x: e,
  y: I,
  z: g,
  w: s,
  r: B,
  g: Q,
  b: i,
  a: C
}) => new KB({ vector: t, vectorType: A, x: e, y: I, z: g, w: s, r: B, g: Q, b: i, a: C }), sa = (t) => new kB({ a: t }), MB = (t, A) => new xB({ a: t, b: A }), Ba = (t, A) => new qB({ vector: t, select: A }), Qa = (t, A) => new YB({ a: t, b: A }), ia = (t, A) => new JB({ a: t, b: A }), na = (t) => new vB({ a: t }), Ca = (t) => new bB({ a: t }), Ea = (t) => new TB({ a: t });
class FB extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => "float", outKey: "length" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.length} = length(${e.a});`
    ];
  }
}
class mB extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "distance", outTypeFunc: (I, g) => "float" }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.distance} = distance(${I.a}, ${I.b});`
    ];
  }
}
class NB extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "dot", outTypeFunc: (I, g) => "float" }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.dot} = dot(${I.a}, ${I.b});`
    ];
  }
}
class SB extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "cross", outTypeFunc: (I, g) => "vec3" }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.cross} = cross(${I.a}, ${I.b});`
    ];
  }
}
class GB extends S {
  constructor({ a: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "normalize" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.normalize} = normalize(${e.a});`
    ];
  }
}
function aa(t) {
  if (t === "vec3")
    return "vec2";
  if (t === "vec4")
    return "vec3";
  throw new Error("Invalid type");
}
class kB extends S {
  constructor({ a: A }) {
    super({
      a: A,
      outTypeFunc: (e) => aa(e),
      outKey: "projected"
    }), this.statements = ({ inputs: e, outputs: I }) => {
      if (this.inTypes.a === "vec3")
        return [`${I.projected} = ${e.a}.xy / ${e.a}.z;`];
      if (this.inTypes.a === "vec4")
        return [`${I.projected} = ${e.a}.xyz / ${e.a}.w;`];
      throw new Error("Invalid type");
    };
  }
}
function oa(t) {
  if (t === "float") return "vec2";
  if (t === "vec2") return "vec3";
  if (t === "vec3") return "vec4";
  throw new Error("Invalid type");
}
class xB extends $ {
  constructor({ a: A, b: e }) {
    const I = Z(A), g = oa(I);
    super({ a: A, b: e, outKey: "extend", outTypeFunc: () => g }), this.statements = ({ inputs: s, outputs: B }) => [
      `${B.extend} = ${g}(${s.a}, ${s.b});`
    ];
  }
}
class RB extends ut {
  constructor({ a: A, b: e, c: I }) {
    super({
      a: A,
      b: e,
      c: I,
      outKey: "forward",
      outTypeFunc: (g, s, B) => g
    }), this.statements = ({ inputs: g, outputs: s }) => [
      `${s.forward} = faceforward(${g.a}, ${g.b}, ${g.c});`
    ];
  }
}
class UB extends $ {
  constructor({
    incident: A,
    normal: e
  }) {
    super({
      a: A,
      b: e,
      outKey: "reflection",
      outTypeFunc: (I, g) => I
    }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.reflection} = reflect(${I.a}, ${I.b});`
    ];
  }
}
class LB extends ut {
  constructor({
    incident: A,
    normal: e,
    eta: I
  }) {
    super({
      a: A,
      b: e,
      c: I,
      outKey: "refraction",
      outTypeFunc: (g, s, B) => g
    }), this.statements = ({ inputs: g, outputs: s }) => [
      `${s.refraction} = refract(${g.a}, ${g.b}, ${g.c});`
    ];
  }
}
class YB extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "product", outTypeFunc: (I, g) => I }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.product} = matrixCompMult(${A}, ${e});`
    ];
  }
}
function ra(t, A) {
  if (t === "vec2") {
    if (A === "vec2") return "mat2";
    if (A === "vec3") return "mat3x2";
    if (A === "vec4") return "mat4x2";
  }
  if (t === "vec3") {
    if (A === "vec2") return "mat2x3";
    if (A === "vec3") return "mat3";
    if (A === "vec4") return "mat4x3";
  }
  if (t === "vec4") {
    if (A === "vec2") return "mat2x4";
    if (A === "vec3") return "mat3x4";
    if (A === "vec4") return "mat4";
  }
  throw new Error(`Invalid outer type: ${t}, ${A}`);
}
class JB extends $ {
  constructor({ a: A, b: e }) {
    super({ a: A, b: e, outKey: "outer", outTypeFunc: ra }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.outer} = outerProduct(${I.a}, ${I.b});`
    ];
  }
}
function ca(t) {
  if (t === "mat2") return "mat2";
  if (t === "mat3") return "mat3";
  if (t === "mat4") return "mat4";
  if (t === "mat2x2") return "mat2x2";
  if (t === "mat2x3") return "mat3x2";
  if (t === "mat2x4") return "mat4x2";
  if (t === "mat3x2") return "mat2x3";
  if (t === "mat3x3") return "mat3x3";
  if (t === "mat3x4") return "mat4x3";
  if (t === "mat4x2") return "mat2x4";
  if (t === "mat4x3") return "mat3x4";
  if (t === "mat4x4") return "mat4x4";
  throw new Error(`Invalid transpose type: ${t}`);
}
class vB extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "transpose", outTypeFunc: ca }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.transpose} = transpose(${e.a});`
    ];
  }
}
class bB extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "det", outTypeFunc: (e) => "float" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.det} = determinant(${e.a});`
    ];
  }
}
class TB extends S {
  constructor({ a: A }) {
    super({ a: A, outKey: "inverse", outTypeFunc: (e) => e }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.inverse} = inverse(${A});`
    ];
  }
}
function ha(t) {
  const A = (e) => e;
  switch (t) {
    case "vec2":
      return A({ x: "float", y: "float", r: "float", g: "float" });
    case "vec3":
      return A({
        x: "float",
        y: "float",
        z: "float",
        r: "float",
        g: "float",
        b: "float"
      });
    case "vec4":
      return A({
        x: "float",
        y: "float",
        z: "float",
        w: "float",
        r: "float",
        g: "float",
        b: "float",
        a: "float"
      });
    case "ivec2":
      return A({ x: "int", y: "int", r: "int", g: "int" });
    case "ivec3":
      return A({
        x: "int",
        y: "int",
        z: "int",
        r: "int",
        g: "int",
        b: "int"
      });
    case "ivec4":
      return A({
        x: "int",
        y: "int",
        z: "int",
        w: "int",
        r: "int",
        g: "int",
        b: "int",
        a: "int"
      });
    case "uvec2":
      return A({ x: "uint", y: "uint", r: "uint", g: "uint" });
    case "uvec3":
      return A({
        x: "uint",
        y: "uint",
        z: "uint",
        r: "uint",
        g: "uint",
        b: "uint"
      });
    case "uvec4":
      return A({
        x: "uint",
        y: "uint",
        z: "uint",
        w: "uint",
        r: "uint",
        g: "uint",
        b: "uint",
        a: "uint"
      });
    default:
      throw new Error(`Invalid vector type: ${t}`);
  }
}
class HB extends V {
  constructor({ vector: A }) {
    const I = { vector: Z(A) }, g = ha(I.vector);
    super({ inTypes: I, outTypes: g, inputs: { vector: A } }), this.statements = ({ inputs: s, outputs: B }) => {
      const { x: Q, y: i, z: C, w: E, r: n, g: o, b: r, a: l } = B, { vector: c } = s;
      return [
        Q ? `${Q} = ${c}.x;` : null,
        i ? `${i} = ${c}.y;` : null,
        C ? `${C} = ${c}.z;` : null,
        E ? `${E} = ${c}.w;` : null,
        n ? `${n} = ${c}.r;` : null,
        o ? `${o} = ${c}.g;` : null,
        r ? `${r} = ${c}.b;` : null,
        l ? `${l} = ${c}.a;` : null
      ].filter(Boolean);
    };
  }
}
class KB extends V {
  constructor({
    vector: A,
    vectorType: e,
    x: I,
    y: g,
    z: s,
    w: B,
    r: Q,
    g: i,
    b: C,
    a: E
  }) {
    if (!A && !e)
      throw new Error("Either vector or vectorType must be provided");
    const n = e ?? Z(A), o = kI(n), r = xI(n), l = {
      vector: n,
      x: o,
      y: o,
      r: o,
      g: o
    }, c = { vector: A, x: I, y: g, r: Q, g: i };
    r >= 3 && (Object.assign(l, { z: o, b: o }), Object.assign(c, { z: s, b: C })), r >= 4 && (Object.assign(l, { w: o, a: o }), Object.assign(c, { w: B, a: E })), super({ inTypes: l, outTypes: { vector: n }, inputs: c }), this.statements = ({ inputs: h, outputs: u }) => {
      const { vector: y } = u, {
        vector: w,
        x: f,
        y: d,
        z: m,
        w: M,
        r: p,
        g: D,
        b: R,
        a: N
      } = h, F = [
        `${y}.x = ${f ?? p ?? (w ? `${w}.x` : Jt(o))};`,
        `${y}.y = ${d ?? D ?? (w ? `${w}.y` : Jt(o))};`
      ];
      return r >= 3 && F.push(
        `${y}.z = ${m ?? R ?? (w ? `${w}.z` : Jt(o))};`
      ), r >= 4 && F.push(
        `${y}.w = ${M ?? N ?? (w ? `${w}.w` : Jt(o))};`
      ), F;
    };
  }
  dynoOut() {
    return new q(
      this,
      "vector"
    );
  }
}
function la(t, A) {
  let e = null;
  if (Zt(t) ? e = A.length === 1 ? "float" : A.length === 2 ? "vec2" : A.length === 3 ? "vec3" : A.length === 4 ? "vec4" : null : cA(t) ? e = A.length === 1 ? "int" : A.length === 2 ? "ivec2" : A.length === 3 ? "ivec3" : A.length === 4 ? "ivec4" : null : hA(t) && (e = A.length === 1 ? "uint" : A.length === 2 ? "uvec2" : A.length === 3 ? "uvec3" : A.length === 4 ? "uvec4" : null), e == null)
    throw new Error(`Invalid swizzle: ${A}`);
  return e;
}
class qB extends S {
  constructor({ vector: A, select: e }) {
    super({
      a: A,
      outKey: "swizzle",
      outTypeFunc: (I) => la(I, e)
    }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.swizzle} = ${I.a}.${e};`
    ];
  }
}
const ua = (t, A, e) => new PB({ index: t, from: A, to: e }), wa = (t) => new Rt({ value: t }), ya = (t) => new xA({ state: t }), Da = (t) => new RA({ state: t }), zB = (t) => new OB({ value: t }), ZB = (t) => new WB({ value: t }), VB = (t) => new $B({ value: t }), jB = (t) => new AQ({ value: t }), fa = (t) => new tQ({ value: t }), da = (t) => new eQ({ value: t }), XB = (t) => new IQ({ value: t }), be = (t) => new gQ({ value: t }), _B = (t, A, e) => new sQ({ z: t, zNear: A, zFar: e }).outputs.depth;
class PB extends V {
  constructor({
    from: A,
    to: e,
    index: I
  }) {
    super({
      inTypes: { from: "int", to: "int", index: "int" },
      outTypes: { index: "int" },
      inputs: { from: A, to: e, index: I },
      statements: ({ inputs: g, outputs: s }) => [
        `${s.index} = ${g.index} - ${g.from} + ${g.to};`
      ]
    });
  }
  dynoOut() {
    return new q(this, "index");
  }
}
class xA extends V {
  constructor({ state: A }) {
    const e = Z(A);
    super({
      inTypes: { state: e },
      outTypes: { state: "uint" },
      inputs: { state: A },
      globals: () => [
        oA(`
          uint pcg_next(uint state) {
            return state * 747796405u + 2891336453u;
          }
        `)
      ],
      statements: ({ inputs: I, outputs: g }) => {
        const s = e === "uint" ? `${I.state}` : e === "int" ? `uint(${I.state})` : `floatBitsToUint(${I.state})`;
        return [`${g.state} = pcg_next(${s});`];
      }
    });
  }
  dynoOut() {
    return new q(this, "state");
  }
}
class RA extends V {
  constructor({ state: A }) {
    super({
      inTypes: { state: "uint" },
      outTypes: { hash: "uint" },
      inputs: { state: A },
      globals: () => [
        oA(`
          uint pcg_hash(uint state) {
            uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
            return (hash >> 22u) ^ hash;
          }
        `)
      ],
      statements: ({ inputs: e, outputs: I }) => [
        `${I.hash} = pcg_hash(${e.state});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class Rt extends V {
  constructor({ value: A }) {
    const e = Z(A), I = RI(e);
    super({
      inTypes: { value: e },
      outTypes: { state: "uint" },
      inputs: { value: A },
      globals: () => [
        oA(`
          uint pcg_mix(uint value) {
            return value;
          }
          uint pcg_mix(uvec2 value) {
            return value.x + 0x9e3779b9u * value.y;
          }
          uint pcg_mix(uvec3 value) {
            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z;
          }
          uint pcg_mix(uvec4 value) {
            return value.x + 0x9e3779b9u * value.y + 0x85ebca6bu * value.z + 0xc2b2ae35u * value.w;
          }
        `)
      ],
      statements: ({ inputs: g, outputs: s }) => {
        const B = hA(e) ? `${g.value}` : cA(e) ? `${I}(${g.value})` : `floatBitsToUint(${g.value})`;
        return [
          `${I} bits = ${B};`,
          `${s.state} = pcg_mix(bits);`
        ];
      }
    });
  }
  dynoOut() {
    return new q(this, "state");
  }
}
class OB extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "uint" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let I = new Rt({ value: e }).outputs.state;
        return I = new xA({ state: I }).outputs.state, new RA({ state: I }).outputs;
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class WB extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "uvec2" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let I = new Rt({ value: e }).outputs.state;
        I = new xA({ state: I }).outputs.state;
        const g = new RA({ state: I }).outputs.hash;
        I = new xA({ state: I }).outputs.state;
        const s = new RA({ state: I }).outputs.hash;
        return { hash: KA({ vectorType: "uvec2", x: g, y: s }) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class $B extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "uvec3" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let I = new Rt({ value: e }).outputs.state;
        I = new xA({ state: I }).outputs.state;
        const g = new RA({ state: I }).outputs.hash;
        I = new xA({ state: I }).outputs.state;
        const s = new RA({ state: I }).outputs.hash;
        I = new xA({ state: I }).outputs.state;
        const B = new RA({ state: I }).outputs.hash;
        return { hash: KA({ vectorType: "uvec3", x: g, y: s, z: B }) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class AQ extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "uvec4" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        let I = new Rt({ value: e }).outputs.state;
        I = new xA({ state: I }).outputs.state;
        const g = new RA({ state: I }).outputs.hash;
        I = new xA({ state: I }).outputs.state;
        const s = new RA({ state: I }).outputs.hash;
        I = new xA({ state: I }).outputs.state;
        const B = new RA({ state: I }).outputs.hash;
        I = new xA({ state: I }).outputs.state;
        const Q = new RA({ state: I }).outputs.hash;
        return { hash: KA({ vectorType: "uvec4", x: g, y: s, z: B, w: Q }) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class tQ extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "float" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const I = zB(e);
        return { hash: EA(Hs(I), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class eQ extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "vec2" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const I = ZB(e);
        return { hash: EA(Ks(I), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class IQ extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "vec3" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const I = VB(e);
        return { hash: EA(ct(I), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class gQ extends zA {
  constructor({ value: A }) {
    super({
      inTypes: { value: Z(A) },
      outTypes: { hash: "vec4" },
      inputs: { value: A },
      construct: ({ value: e }) => {
        if (!e)
          throw new Error("value is required");
        const I = jB(e);
        return { hash: EA(qs(I), K("float", 1 / 2 ** 32)) };
      }
    });
  }
  dynoOut() {
    return new q(this, "hash");
  }
}
class sQ extends V {
  constructor({
    z: A,
    zNear: e,
    zFar: I
  }) {
    super({
      inTypes: { z: "float", zNear: "float", zFar: "float" },
      outTypes: { depth: "float" },
      inputs: { z: A, zNear: e, zFar: I },
      statements: ({ inputs: g, outputs: s }) => [
        `float clamped = clamp(${g.z}, ${g.zNear}, ${g.zFar});`,
        `${s.depth} = (log2(clamped + 1.0) - log2(${g.zNear} + 1.0)) / (log2(${g.zFar} + 1.0) - log2(${g.zNear} + 1.0));`
      ]
    });
  }
  dynoOut() {
    return new q(this, "depth");
  }
}
const BQ = (t, {
  scale: A,
  scales: e,
  rotate: I,
  translate: g
}) => new iQ({ position: t, scale: A, scales: e, rotate: I, translate: g }).outputs.position, QQ = (t, {
  scale: A,
  scales: e,
  rotate: I
}) => new nQ({ dir: t, scale: A, scales: e, rotate: I }).outputs.dir, pa = (t, { rotate: A }) => new CQ({ quaternion: t, rotate: A }).outputs.quaternion;
class iQ extends V {
  constructor({
    position: A,
    scale: e,
    scales: I,
    rotate: g,
    translate: s
  }) {
    super({
      inTypes: {
        position: "vec3",
        scale: "float",
        scales: "vec3",
        rotate: "vec4",
        translate: "vec3"
      },
      outTypes: { position: "vec3" },
      inputs: { position: A, scale: e, scales: I, rotate: g, translate: s },
      statements: ({ inputs: B, outputs: Q }) => {
        const { position: i } = Q;
        if (!i)
          return [];
        const { scale: C, scales: E, rotate: n, translate: o } = B;
        return [
          `${i} = ${B.position ?? "vec3(0.0, 0.0, 0.0)"};`,
          C ? `${i} *= ${C};` : null,
          E ? `${i} *= ${E};` : null,
          n ? `${i} = quatVec(${n}, ${i});` : null,
          o ? `${i} += ${o};` : null
        ].filter(Boolean);
      }
    });
  }
}
class nQ extends V {
  constructor({
    dir: A,
    scale: e,
    scales: I,
    rotate: g
  }) {
    super({
      inTypes: { dir: "vec3", scale: "float", scales: "vec3", rotate: "vec4" },
      outTypes: { dir: "vec3" },
      inputs: { dir: A, scale: e, scales: I, rotate: g },
      statements: ({ inputs: s, outputs: B }) => {
        const { dir: Q } = B;
        if (!Q)
          return [];
        const { scale: i, scales: C, rotate: E } = s;
        return [
          `${Q} = ${s.dir ?? "vec3(0.0, 0.0, 0.0)"};`,
          i ? `${Q} *= ${i};` : null,
          C ? `${Q} *= ${C};` : null,
          E ? `${Q} = quatVec(${E}, ${Q});` : null
        ].filter(Boolean);
      }
    });
  }
}
class CQ extends V {
  constructor({
    quaternion: A,
    rotate: e
  }) {
    super({
      inTypes: { quaternion: "vec4", rotate: "vec4" },
      outTypes: { quaternion: "vec4" },
      inputs: { quaternion: A, rotate: e },
      statements: ({ inputs: I, outputs: g }) => {
        const { quaternion: s } = g;
        return s ? [
          `${s} = ${I.quaternion ?? "vec4(0.0, 0.0, 0.0, 1.0)"};`,
          e ? `${s} = quatQuat(${I.rotate}, ${s});` : null
        ].filter(Boolean) : [];
      }
    });
  }
}
const Ma = () => {
  throw new Error("Not implemented");
}, Fa = () => {
  throw new Error("Not implemented");
}, ma = () => {
  throw new Error("Not implemented");
}, Na = () => {
  throw new Error("Not implemented");
}, Sa = () => {
  throw new Error("Not implemented");
}, Ga = () => {
  throw new Error("Not implemented");
}, ka = (t, A) => new EQ({ texture: t, lod: A }), xa = (t, A, e) => new aQ({ texture: t, coord: A, bias: e }), Ra = (t, A, e) => new oQ({ texture: t, coord: A, lod: e });
class EQ extends V {
  constructor({ texture: A, lod: e }) {
    const I = Z(A);
    super({
      inTypes: { texture: I, lod: "int" },
      outTypes: { size: rQ(I) },
      inputs: { texture: A, lod: e },
      statements: ({ inputs: g, outputs: s }) => [
        `${s.size} = textureSize(${g.texture}, ${g.lod ?? "0"});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "size");
  }
}
class aQ extends V {
  constructor({
    texture: A,
    coord: e,
    bias: I
  }) {
    const g = Z(A);
    super({
      inTypes: {
        texture: g,
        coord: Ua(g),
        bias: "float"
      },
      outTypes: { sample: cQ(g) },
      inputs: { texture: A, coord: e, bias: I },
      statements: ({ inputs: s, outputs: B }) => [
        `${B.sample} = texture(${s.texture}, ${s.coord}${s.bias ? `, ${s.bias}` : ""});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "sample");
  }
}
class oQ extends V {
  constructor({
    texture: A,
    coord: e,
    lod: I
  }) {
    const g = Z(A);
    super({
      inTypes: {
        texture: g,
        coord: rQ(g),
        lod: "int"
      },
      outTypes: { texel: cQ(g) },
      inputs: { texture: A, coord: e, lod: I },
      statements: ({ inputs: s, outputs: B }) => [
        `${B.texel} = texelFetch(${s.texture}, ${s.coord}, ${s.lod ?? "0"});`
      ]
    });
  }
  dynoOut() {
    return new q(this, "texel");
  }
}
function rQ(t) {
  switch (t) {
    case "sampler2D":
    case "usampler2D":
    case "isampler2D":
    case "samplerCube":
    case "usamplerCube":
    case "isamplerCube":
    case "sampler2DShadow":
    case "samplerCubeShadow":
      return "ivec2";
    case "sampler3D":
    case "usampler3D":
    case "isampler3D":
    case "sampler2DArray":
    case "usampler2DArray":
    case "isampler2DArray":
    case "sampler2DArrayShadow":
      return "ivec3";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
function Ua(t) {
  switch (t) {
    case "sampler2D":
    case "usampler2D":
    case "isampler2D":
      return "vec2";
    case "sampler3D":
    case "usampler3D":
    case "isampler3D":
    case "samplerCube":
    case "usamplerCube":
    case "isamplerCube":
    case "sampler2DArray":
    case "usampler2DArray":
    case "isampler2DArray":
    case "sampler2DShadow":
      return "vec3";
    case "samplerCubeShadow":
    case "sampler2DArrayShadow":
      return "vec4";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
function cQ(t) {
  switch (t) {
    case "sampler2D":
    case "sampler2DArray":
    case "sampler3D":
    case "samplerCube":
    case "sampler2DShadow":
      return "vec4";
    case "usampler2D":
    case "usampler2DArray":
    case "usampler3D":
    case "usamplerCube":
      return "uvec4";
    case "isampler2D":
    case "isampler2DArray":
    case "isampler3D":
    case "isamplerCube":
      return "ivec4";
    case "samplerCubeShadow":
    case "sampler2DArrayShadow":
      return "float";
    default:
      throw new Error(`Invalid texture type: ${t}`);
  }
}
const La = (t) => new hQ({ degrees: t }), Ya = (t) => new lQ({ radians: t }), Te = (t) => new uQ({ radians: t }), Ja = (t) => new wQ({ radians: t }), va = (t) => new yQ({ radians: t }), ba = (t) => new DQ({ sin: t }), Ta = (t) => new fQ({ cos: t }), Ha = (t) => new dQ({ tan: t }), Ka = (t, A) => new pQ({ y: t, x: A }), qa = (t) => new MQ({ x: t }), za = (t) => new FQ({ x: t }), Za = (t) => new mQ({ x: t }), Va = (t) => new NQ({ x: t }), ja = (t) => new SQ({ x: t }), Xa = (t) => new GQ({ x: t });
class hQ extends S {
  constructor({ degrees: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "radians" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.radians} = radians(${e.a});`
    ];
  }
}
class lQ extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "degrees" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.degrees} = degrees(${e.a});`
    ];
  }
}
class uQ extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "sin" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.sin} = sin(${e.a});`
    ];
  }
}
class wQ extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "cos" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.cos} = cos(${e.a});`
    ];
  }
}
class yQ extends S {
  constructor({ radians: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "tan" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.tan} = tan(${e.a});`
    ];
  }
}
class DQ extends S {
  constructor({ sin: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "asin" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.asin} = asin(${e.a});`
    ];
  }
}
class fQ extends S {
  constructor({ cos: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "acos" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.acos} = acos(${e.a});`
    ];
  }
}
class dQ extends S {
  constructor({ tan: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "atan" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.atan} = atan(${e.a});`
    ];
  }
}
class pQ extends $ {
  constructor({ y: A, x: e }) {
    super({
      a: A,
      b: e,
      outTypeFunc: (I, g) => I,
      outKey: "atan2"
    }), this.statements = ({ inputs: I, outputs: g }) => [
      `${g.atan2} = atan2(${I.a}, ${I.b});`
    ];
  }
}
class MQ extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "sinh" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.sinh} = sinh(${e.a});`
    ];
  }
}
class FQ extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "cosh" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.cosh} = cosh(${e.a});`
    ];
  }
}
class mQ extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "tanh" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.tanh} = tanh(${e.a});`
    ];
  }
}
class NQ extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "asinh" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.asinh} = asinh(${e.a});`
    ];
  }
}
class SQ extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "acosh" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.acosh} = acosh(${e.a});`
    ];
  }
}
class GQ extends S {
  constructor({ x: A }) {
    super({ a: A, outTypeFunc: (e) => e, outKey: "atanh" }), this.statements = ({ inputs: e, outputs: I }) => [
      `${I.atanh} = atanh(${e.a});`
    ];
  }
}
const yr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Abs: es,
  Acos: fQ,
  Acosh: SQ,
  Add: Xg,
  All: Js,
  And: Fs,
  Any: Ys,
  Asin: DQ,
  Asinh: NQ,
  Atan: dQ,
  Atan2: pQ,
  Atanh: GQ,
  BVec2: Os,
  BVec3: Ws,
  BVec4: $s,
  BinaryOp: $,
  Bool: js,
  Ceil: ss,
  Clamp: ws,
  Combine: KB,
  CombineGsplat: qI,
  CompMult: YB,
  CompXor: Ts,
  Compilation: YI,
  Cos: wQ,
  Cosh: FQ,
  Cross: SB,
  Degrees: lQ,
  Determinant: bB,
  Distance: mB,
  Div: Og,
  Dot: NB,
  Dyno: V,
  DynoBlock: zA,
  DynoBool: Qe,
  DynoBvec2: PI,
  DynoBvec3: Ag,
  DynoBvec4: Ig,
  DynoConst: LI,
  DynoFloat: ot,
  DynoInt: Kt,
  DynoIsampler2D: wg,
  DynoIsampler2DArray: Dg,
  DynoIsampler3D: pg,
  DynoIsamplerCube: mg,
  DynoIvec2: WI,
  DynoIvec3: eg,
  DynoIvec4: sg,
  DynoLiteral: Ft,
  DynoMat2: Bg,
  DynoMat2x2: Qg,
  DynoMat2x3: ig,
  DynoMat2x4: ng,
  DynoMat3: Cg,
  DynoMat3x2: Eg,
  DynoMat3x3: ag,
  DynoMat3x4: og,
  DynoMat4: rg,
  DynoMat4x2: cg,
  DynoMat4x3: hg,
  DynoMat4x4: lg,
  DynoOutput: q,
  DynoProgram: Oe,
  DynoProgramTemplate: We,
  DynoRemapIndex: PB,
  DynoSampler2D: yg,
  DynoSampler2DArray: fg,
  DynoSampler2DArrayShadow: Gg,
  DynoSampler2DShadow: Sg,
  DynoSampler3D: Mg,
  DynoSamplerCube: Ng,
  DynoSamplerCubeShadow: kg,
  DynoUint: _I,
  DynoUniform: x,
  DynoUsampler2D: ug,
  DynoUsampler2DArray: Tt,
  DynoUsampler3D: dg,
  DynoUsamplerCube: Fg,
  DynoUvec2: OI,
  DynoUvec3: tg,
  DynoUvec4: gg,
  DynoValue: st,
  DynoVec2: $I,
  DynoVec3: St,
  DynoVec4: _t,
  Equal: Us,
  Exp: Cs,
  Exp2: Es,
  ExtendVec: xB,
  FaceForward: RB,
  Float: Ps,
  FloatBitsToInt: aB,
  FloatBitsToUint: oB,
  Floor: gs,
  Fract: is,
  GreaterThan: xs,
  GreaterThanEqual: Rs,
  Gsplat: W,
  GsplatNormal: ZI,
  Hash: OB,
  Hash2: WB,
  Hash3: $B,
  Hash4: AQ,
  HashFloat: tQ,
  HashVec2: eQ,
  HashVec3: IQ,
  HashVec4: gQ,
  IMod: Wg,
  IVec2: AB,
  IVec3: tB,
  IVec4: eB,
  Int: Xs,
  IntBitsToFloat: rB,
  Inverse: TB,
  InverseSqrt: hs,
  IsInf: ps,
  IsNan: ds,
  Length: FB,
  LessThan: Gs,
  LessThanEqual: ks,
  Log: as,
  Log2: os,
  Mat2: nB,
  Mat3: CB,
  Mat4: EB,
  Max: us,
  Min: ls,
  Mix: ys,
  Mod: $g,
  Modf: As,
  Mul: Pg,
  Neg: ts,
  Normalize: GB,
  NormalizedDepth: sQ,
  Not: Ss,
  NotEqual: Ls,
  NumPackedSplats: vI,
  Or: ms,
  Outer: JB,
  OutputPackedSplat: XI,
  OutputRgba8: _e,
  PackHalf2x16: yB,
  PackSnorm2x16: hB,
  PackUnorm2x16: uB,
  PcgHash: RA,
  PcgMix: Rt,
  PcgNext: xA,
  Pow: ns,
  ProjectH: kB,
  Radians: hQ,
  ReadPackedSplat: TI,
  ReadPackedSplatRange: HI,
  ReflectVec: UB,
  RefractVec: LB,
  Round: Qs,
  Select: vs,
  Sign: Is,
  SimpleCast: iA,
  Sin: uQ,
  Sinh: MQ,
  Smoothstep: fs,
  Split: HB,
  SplitGsplat: KI,
  Sqr: rs,
  Sqrt: cs,
  Step: Ds,
  Sub: _g,
  Swizzle: qB,
  TPackedSplats: Xt,
  Tan: yQ,
  Tanh: mQ,
  TexelFetch: oQ,
  Texture: aQ,
  TextureSize: EQ,
  TransformDir: nQ,
  TransformGsplat: VI,
  TransformPosition: iQ,
  TransformQuaternion: CQ,
  Transpose: vB,
  TrinaryOp: ut,
  Trunc: Bs,
  UVec2: IB,
  UVec3: gB,
  UVec4: sB,
  Uint: _s,
  UintBitsToFloat: cB,
  UintToRgba8: fB,
  UnaryOp: S,
  UnpackHalf2x16: DB,
  UnpackSnorm2x16: lB,
  UnpackUnorm2x16: wB,
  Vec2: BB,
  Vec3: QB,
  Vec4: iB,
  Xor: Ns,
  abs: OC,
  acos: Ta,
  acosh: ja,
  add: dA,
  all: mE,
  and: lE,
  any: FE,
  arrayIndex: Sa,
  arrayLength: Ga,
  asin: ba,
  asinh: Va,
  atan: Ha,
  atan2: Ka,
  atanh: Xa,
  bool: kE,
  bvec2: UE,
  bvec3: LE,
  bvec4: YE,
  ceil: AE,
  clamp: aE,
  combine: KA,
  combineGsplat: Bt,
  comment: Na,
  compMult: Qa,
  compXor: NE,
  cos: Ja,
  cosh: za,
  cross: ta,
  defineGsplat: SA,
  defineGsplatNormal: zI,
  definePackedSplats: he,
  degrees: Ya,
  determinant: Ca,
  distance: Aa,
  div: ge,
  dot: dB,
  dyno: jt,
  dynoBlock: NA,
  dynoBool: Wi,
  dynoBvec2: tn,
  dynoBvec3: sn,
  dynoBvec4: nn,
  dynoConst: K,
  dynoDeclare: je,
  dynoFloat: bA,
  dynoFor: ma,
  dynoIf: Ma,
  dynoInt: An,
  dynoIsampler2D: Fn,
  dynoIsampler2DArray: Sn,
  dynoIsampler3D: xn,
  dynoIsamplerCube: Ln,
  dynoIvec2: In,
  dynoIvec3: Qn,
  dynoIvec4: En,
  dynoLiteral: Be,
  dynoMat2: on,
  dynoMat2x2: rn,
  dynoMat2x3: cn,
  dynoMat2x4: hn,
  dynoMat3: ln,
  dynoMat3x2: un,
  dynoMat3x3: wn,
  dynoMat3x4: yn,
  dynoMat4: Dn,
  dynoMat4x2: fn,
  dynoMat4x3: dn,
  dynoMat4x4: pn,
  dynoSampler2D: mn,
  dynoSampler2DArray: Gn,
  dynoSampler2DArrayShadow: vn,
  dynoSampler2DShadow: Jn,
  dynoSampler3D: Rn,
  dynoSamplerCube: Yn,
  dynoSamplerCubeShadow: bn,
  dynoSwitch: Fa,
  dynoUint: $i,
  dynoUsampler2D: Mn,
  dynoUsampler2DArray: Nn,
  dynoUsampler3D: kn,
  dynoUsamplerCube: Un,
  dynoUvec2: en,
  dynoUvec3: Bn,
  dynoUvec4: Cn,
  dynoVec2: gn,
  dynoVec3: At,
  dynoVec4: an,
  equal: pE,
  exp: gE,
  exp2: sE,
  extendVec: MB,
  faceforward: ea,
  float: Hs,
  floatBitsToInt: zs,
  floatBitsToUint: Zs,
  floor: $C,
  fract: se,
  greaterThan: dE,
  greaterThanEqual: Ms,
  gsplatNormal: Ue,
  hash: zB,
  hash2: ZB,
  hash3: VB,
  hash4: jB,
  hashFloat: fa,
  hashVec2: da,
  hashVec3: XB,
  hashVec4: be,
  imod: Je,
  int: xE,
  intBitsToFloat: VE,
  inverse: Ea,
  inversesqrt: CE,
  isAllFloatType: Qt,
  isBoolType: ht,
  isFloatType: Zt,
  isInf: hE,
  isIntType: cA,
  isMat2: it,
  isMat3: nt,
  isMat4: Ct,
  isMatFloatType: GI,
  isNan: cE,
  isScalarType: lt,
  isUintType: hA,
  isVector2Type: kt,
  isVector3Type: xt,
  isVector4Type: Vt,
  isVectorType: zi,
  ivec2: JE,
  ivec3: vE,
  ivec4: bE,
  length: $E,
  lessThan: DE,
  lessThanEqual: fE,
  literalNegOne: Xi,
  literalOne: ji,
  literalZero: Jt,
  log: BE,
  log2: QE,
  mat2: qE,
  mat3: zE,
  mat4: ZE,
  max: Vg,
  min: EE,
  mix: jg,
  mod: Zg,
  modf: PC,
  mul: EA,
  neg: AI,
  normalize: pB,
  normalizedDepth: _B,
  not: yE,
  notEqual: ME,
  numPackedSplats: _i,
  numberAsFloat: H,
  numberAsInt: sA,
  numberAsUint: BA,
  or: uE,
  outer: ia,
  outputPackedSplat: jI,
  outputRgba8: Pi,
  packHalf2x16: Vs,
  packSnorm2x16: XE,
  packUnorm2x16: PE,
  pcgHash: Da,
  pcgMix: wa,
  pcgNext: ya,
  pow: IE,
  projectH: sa,
  radians: La,
  readPackedSplat: mt,
  readPackedSplatRange: JI,
  reflectVec: Ia,
  refractVec: ga,
  remapIndex: ua,
  round: eE,
  sameSizeIvec: Vi,
  sameSizeUvec: RI,
  sameSizeVec: Zi,
  select: tI,
  sign: WC,
  sin: Te,
  sinh: qa,
  smoothstep: rE,
  split: Nt,
  splitGsplat: at,
  sqr: iE,
  sqrt: nE,
  step: oE,
  sub: Gt,
  swizzle: Ba,
  tan: va,
  tanh: Za,
  texelFetch: Ra,
  texture: xa,
  textureSize: ka,
  transformDir: QQ,
  transformGsplat: Xe,
  transformPos: BQ,
  transformQuat: pa,
  transpose: na,
  trunc: tE,
  typeLiteral: UI,
  uint: RE,
  uintBitsToFloat: jE,
  uintToRgba8: ve,
  uniform: Oi,
  unindent: oA,
  unindentLines: UA,
  unpackHalf2x16: WE,
  unpackSnorm2x16: _E,
  unpackUnorm2x16: OE,
  uvec2: TE,
  uvec3: HE,
  uvec4: KE,
  valType: Z,
  vec2: Ks,
  vec3: ct,
  vec4: qs,
  vectorDim: xI,
  vectorElementType: kI,
  xor: wE
}, Symbol.toStringTag, { value: "Module" }));
var _a = `precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out vec4 target;

{{ GLOBALS }}

void computeReadback(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        computeReadback(index);
    } else {
        target = vec4(0.0, 0.0, 0.0, 0.0);
    }
}`;
const kA = class kA {
  constructor({ renderer: A } = {}) {
    this.renderer = A, this.capacity = 0, this.count = 0;
  }
  dispose() {
    this.target && (this.target.dispose(), this.target = void 0);
  }
  // Ensure we have a buffer large enough for the readback of count indices.
  // Pass in previous bufer of the desired type.
  ensureBuffer(A, e) {
    const g = Math.ceil(Math.max(1, A) / O) * O * 4;
    if (e.byteLength >= g)
      return e;
    const s = new ArrayBuffer(g);
    if (e instanceof ArrayBuffer)
      return s;
    const B = e.constructor;
    return new B(s);
  }
  // Ensure our render target is large enough for the readback of capacity indices.
  ensureCapacity(A) {
    const { width: e, height: I, depth: g, maxSplats: s } = pA(A);
    (!this.target || s > this.capacity) && (this.dispose(), this.capacity = s, this.target = new a.WebGLArrayRenderTarget(e, I, g, {
      depthBuffer: !1,
      stencilBuffer: !1,
      generateMipmaps: !1,
      magFilter: a.NearestFilter,
      minFilter: a.NearestFilter
    }), this.target.texture.format = a.RGBAFormat, this.target.texture.type = a.UnsignedByteType, this.target.texture.internalFormat = "RGBA8", this.target.scissorTest = !0);
  }
  // Get a program and THREE.RawShaderMaterial for a given Rgba8Readback,
  // generating it if necessary and caching the result.
  prepareProgramMaterial(A) {
    let e = kA.readbackProgram.get(A);
    if (!e) {
      const g = NA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: s }) => (A.inputs.index = s, { rgba8: new _e({ rgba8: A.outputs.rgba8 }) })
      );
      kA.programTemplate || (kA.programTemplate = new We(_a)), e = new Oe({
        graph: g,
        inputs: { index: "index" },
        outputs: { rgba8: "target" },
        template: kA.programTemplate
      }), Object.assign(e.uniforms, {
        targetLayer: { value: 0 },
        targetBase: { value: 0 },
        targetCount: { value: 0 }
      }), kA.readbackProgram.set(A, e);
    }
    const I = e.prepareMaterial();
    return kA.fullScreenQuad.material = I, { program: e, material: I };
  }
  saveRenderState(A) {
    return {
      xrEnabled: A.xr.enabled,
      autoClear: A.autoClear
    };
  }
  resetRenderState(A, e) {
    A.setRenderTarget(null), A.xr.enabled = e.xrEnabled, A.autoClear = e.autoClear;
  }
  process({
    count: A,
    material: e
  }) {
    const I = this.renderer;
    if (!I)
      throw new Error("No renderer");
    if (!this.target)
      throw new Error("No target");
    const g = O * gt;
    e.uniforms.targetBase.value = 0, e.uniforms.targetCount.value = A;
    let s = 0;
    for (; s < A; ) {
      const B = Math.floor(s / g), Q = B * g, i = Math.min(
        gt,
        Math.ceil((A - Q) / O)
      );
      e.uniforms.targetLayer.value = B, this.target.scissor.set(0, 0, O, i), I.setRenderTarget(this.target, B), I.xr.enabled = !1, I.autoClear = !1, kA.fullScreenQuad.render(I), s += O * i;
    }
    this.count = A;
  }
  async read({
    readback: A
  }) {
    const e = this.renderer;
    if (!e)
      throw new Error("No renderer");
    if (!this.target)
      throw new Error("No target");
    const I = Math.ceil(this.count / O) * O;
    if (A.byteLength < I * 4)
      throw new Error(
        `Readback buffer too small: ${A.byteLength} < ${I * 4}`
      );
    const g = new Uint8Array(
      A instanceof ArrayBuffer ? A : A.buffer
    ), s = O * gt;
    let B = 0;
    const Q = [];
    for (; B < this.count; ) {
      const i = Math.floor(B / s), C = i * s, E = Math.min(
        gt,
        Math.ceil((this.count - C) / O)
      );
      e.setRenderTarget(this.target, i);
      const n = O * E * 4, o = g.subarray(
        C * 4,
        C * 4 + n
      ), r = e == null ? void 0 : e.readRenderTargetPixelsAsync(
        this.target,
        0,
        0,
        O,
        E,
        o
      );
      Q.push(r), B += O * E;
    }
    return Promise.all(Q).then(() => A);
  }
  // Perform render operation to run the Rgba8Readback program
  // but don't perform the readback yet.
  render({
    reader: A,
    count: e,
    renderer: I
  }) {
    if (this.renderer = I || this.renderer, !this.renderer)
      throw new Error("No renderer");
    this.ensureCapacity(e);
    const { program: g, material: s } = this.prepareProgramMaterial(A);
    g.update();
    const B = this.saveRenderState(this.renderer);
    this.process({ count: e, material: s }), this.resetRenderState(this.renderer, B);
  }
  // Perform a readback of the render target, returning a buffer of the
  // given type.
  async readback({
    readback: A
  }) {
    if (!this.renderer)
      throw new Error("No renderer");
    const e = this.saveRenderState(this.renderer), I = this.read({ readback: A });
    return this.resetRenderState(this.renderer, e), I;
  }
  // Perform a render and readback operation for the given Rgba8Readback,
  // and readback buffer (call ensureBuffer first).
  async renderReadback({
    reader: A,
    count: e,
    renderer: I,
    readback: g
  }) {
    if (this.renderer = I || this.renderer, !this.renderer)
      throw new Error("No renderer");
    this.ensureCapacity(e);
    const { program: s, material: B } = this.prepareProgramMaterial(A);
    s.update();
    const Q = this.saveRenderState(this.renderer);
    this.process({ count: e, material: B });
    const i = this.read({ readback: g });
    return this.resetRenderState(this.renderer, Q), i;
  }
  getTexture() {
    var A;
    return (A = this.target) == null ? void 0 : A.texture;
  }
};
kA.programTemplate = null, kA.readbackProgram = /* @__PURE__ */ new Map(), kA.fullScreenQuad = new lI(
  new a.RawShaderMaterial({ visible: !1 })
);
let ne = kA;
const CA = class CA {
  constructor(A = {}) {
    this.capacity = 0, this.count = 0, this.array = null, this.readback = null, this.source = null, this.needsUpdate = !0, this.dyno = new x({
      key: "rgbaArray",
      type: kQ,
      globals: () => [xQ],
      value: {
        texture: CA.getEmpty(),
        count: 0
      },
      update: (e) => {
        var I;
        return e.texture = ((I = this.readback) == null ? void 0 : I.getTexture()) ?? this.source ?? CA.getEmpty(), e.count = this.count, e;
      }
    }), A.array ? (this.array = A.array, this.capacity = Math.floor(this.array.length / 4), this.capacity = Math.floor(this.capacity / O) * O, this.count = Math.min(
      this.capacity,
      A.count ?? Number.POSITIVE_INFINITY
    )) : (this.capacity = A.capacity ?? 0, this.count = 0);
  }
  // Free up resources
  dispose() {
    this.readback && (this.readback.dispose(), this.readback = null), this.source && (this.source.dispose(), this.source = null);
  }
  // Ensure that our array is large enough to hold capacity RGBA8 values.
  ensureCapacity(A) {
    var e;
    if (!this.array || A > (((e = this.array) == null ? void 0 : e.length) ?? 0) / 4) {
      this.capacity = pA(A).maxSplats;
      const I = new Uint8Array(this.capacity * 4);
      this.array && I.set(this.array), this.array = I;
    }
    return this.array;
  }
  // Get the THREE.DataArrayTexture from either the readback or the source.
  getTexture() {
    var e;
    let A = (e = this.readback) == null ? void 0 : e.getTexture();
    return (this.source || this.array) && (A = this.maybeUpdateSource()), A ?? CA.getEmpty();
  }
  // Create or get a THREE.DataArrayTexture from the data array.
  maybeUpdateSource() {
    if (!this.array)
      throw new Error("No array");
    if (this.needsUpdate || !this.source) {
      if (this.needsUpdate = !1, this.source) {
        const { width: A, height: e, depth: I } = this.source.image;
        this.capacity !== A * e * I && (this.source.dispose(), this.source = null);
      }
      if (this.source)
        this.array.buffer !== this.source.image.data.buffer && (this.source.image.data = new Uint8Array(this.array.buffer));
      else {
        const { width: A, height: e, depth: I } = pA(this.capacity);
        this.source = new a.DataArrayTexture(
          this.array,
          A,
          e,
          I
        ), this.source.format = a.RGBAFormat, this.source.type = a.UnsignedByteType, this.source.internalFormat = "RGBA8", this.source.needsUpdate = !0;
      }
      this.source.needsUpdate = !0;
    }
    return this.source;
  }
  // Generate the RGBA8 values from a Rgba8Readback dyno program.
  render({
    reader: A,
    count: e,
    renderer: I
  }) {
    this.readback || (this.readback = new ne({ renderer: I })), this.readback.render({ reader: A, count: e, renderer: I }), this.capacity = this.readback.capacity, this.count = this.readback.count;
  }
  // Extract the RGBA8 values from a PackedSplats collection.
  fromPackedSplats({
    packedSplats: A,
    base: e,
    count: I,
    renderer: g
  }) {
    const { dynoSplats: s, dynoBase: B, dynoCount: Q, reader: i } = CA.makeDynos();
    return s.packedSplats = A, B.value = e, Q.value = I, this.render({ reader: i, count: I, renderer: g }), this;
  }
  // Read back the RGBA8 values from the readback buffer.
  async read() {
    if (!this.readback)
      throw new Error("No readback");
    return (!this.array || this.array.length < this.count * 4) && (this.array = new Uint8Array(this.capacity * 4)), (await this.readback.readback({ readback: this.array })).subarray(0, this.count * 4);
  }
  // Can be used where you need an uninitialized THREE.DataArrayTexture like
  // a uniform you will update with the result of this.getTexture() later.
  static getEmpty() {
    if (!CA.emptySource) {
      const A = new Uint8Array(4);
      CA.emptySource = new a.DataArrayTexture(A, 1, 1, 1), CA.emptySource.format = a.RGBAFormat, CA.emptySource.type = a.UnsignedByteType, CA.emptySource.internalFormat = "RGBA8", CA.emptySource.needsUpdate = !0;
    }
    return CA.emptySource;
  }
  // Create a dyno program that can extract RGBA8 values from a PackedSplats
  static makeDynos() {
    if (!CA.dynos) {
      const A = new II(), e = new Kt({ value: 0 }), I = new Kt({ value: 0 }), g = NA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: s }) => {
          if (!s)
            throw new Error("index is undefined");
          s = dA(s, e);
          const B = JI(
            A,
            s,
            e,
            I
          );
          return { rgba8: at(B).outputs.rgba };
        }
      );
      CA.dynos = { dynoSplats: A, dynoBase: e, dynoCount: I, reader: g };
    }
    return CA.dynos;
  }
};
CA.emptySource = null, CA.dynos = null;
let He = CA;
const kQ = { type: "RgbaArray" }, xQ = oA(`
  struct RgbaArray {
    sampler2DArray texture;
    int count;
  };
`);
function Pa(t, A) {
  return new V({
    inTypes: { rgba: kQ, index: "int" },
    outTypes: { rgba: "vec4" },
    inputs: { rgba: t, index: A },
    globals: () => [xQ],
    statements: ({ inputs: I, outputs: g }) => UA(`
        if ((index >= 0) && (index < ${I.rgba}.count)) {
          ${g.rgba} = texelFetch(${I.rgba}.texture, splatTexCoord(index), 0);
        } else {
          ${g.rgba} = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `)
  }).outputs.rgba;
}
var Oa = /* @__PURE__ */ ((t) => (t.ALL = "all", t.PLANE = "plane", t.SPHERE = "sphere", t.BOX = "box", t.ELLIPSOID = "ellipsoid", t.CYLINDER = "cylinder", t.CAPSULE = "capsule", t.INFINITE_CONE = "infinite_cone", t))(Oa || {});
function Wa(t) {
  switch (t) {
    case "all":
      return 0;
    case "plane":
      return 1;
    case "sphere":
      return 2;
    case "box":
      return 3;
    case "ellipsoid":
      return 4;
    case "cylinder":
      return 5;
    case "capsule":
      return 6;
    case "infinite_cone":
      return 7;
    default:
      throw new Error(`Unknown SDF type: ${t}`);
  }
}
var $a = /* @__PURE__ */ ((t) => (t.MULTIPLY = "multiply", t.SET_RGB = "set_rgb", t.ADD_RGBA = "add_rgba", t))($a || {});
function Ao(t) {
  switch (t) {
    case "multiply":
      return 0;
    case "set_rgb":
      return 1;
    case "add_rgba":
      return 2;
    default:
      throw new Error(`Unknown blend mode: ${t}`);
  }
}
class to extends a.Object3D {
  constructor(A = {}) {
    super();
    const { type: e, invert: I, opacity: g, color: s, displace: B, radius: Q } = A;
    this.type = e ?? "sphere", this.invert = I ?? !1, this.opacity = g ?? 1, this.color = s ?? new a.Color(1, 1, 1), this.displace = B ?? new a.Vector3(0, 0, 0), this.radius = Q ?? 0;
  }
}
const ce = class ce extends a.Object3D {
  constructor(A = {}) {
    const {
      name: e,
      rgbaBlendMode: I = "multiply",
      sdfSmooth: g = 0,
      softEdge: s = 0,
      invert: B = !1,
      sdfs: Q = null
    } = A;
    super(), this.rgbaBlendMode = I, this.sdfSmooth = g, this.softEdge = s, this.invert = B, this.sdfs = Q, this.ordering = ce.nextOrdering++, this.name = e ?? `Edit ${this.ordering}`;
  }
  addSdf(A) {
    this.sdfs == null && (this.sdfs = []), this.sdfs.includes(A) || this.sdfs.push(A);
  }
  removeSdf(A) {
    this.sdfs != null && (this.sdfs = this.sdfs.filter((e) => e !== A));
  }
};
ce.nextOrdering = 1;
let Ce = ce;
class eo {
  constructor({ maxSdfs: A, maxEdits: e }) {
    this.maxSdfs = Math.max(16, A ?? 0), this.numSdfs = 0, this.sdfData = new Uint32Array(this.maxSdfs * 8 * 4), this.sdfFloatData = new Float32Array(this.sdfData.buffer), this.sdfTexture = this.newSdfTexture(this.sdfData, this.maxSdfs), this.dynoSdfArray = new x({
      key: "sdfArray",
      type: RQ,
      globals: () => [UQ],
      value: {
        numSdfs: 0,
        sdfTexture: this.sdfTexture
      },
      update: (I) => (I.numSdfs = this.numSdfs, I.sdfTexture = this.sdfTexture, I)
    }), this.maxEdits = Math.max(16, e ?? 0), this.numEdits = 0, this.editData = new Uint32Array(this.maxEdits * 4), this.editFloatData = new Float32Array(this.editData.buffer), this.dynoNumEdits = new Kt({ value: 0 }), this.dynoEdits = this.newEdits(this.editData, this.maxEdits);
  }
  newSdfTexture(A, e) {
    const I = new a.DataTexture(
      A,
      8,
      e,
      a.RGBAIntegerFormat,
      a.UnsignedIntType
    );
    return I.internalFormat = "RGBA32UI", I.needsUpdate = !0, I;
  }
  newEdits(A, e) {
    return new x({
      key: "edits",
      type: "uvec4",
      count: e,
      globals: () => [LQ],
      value: A
    });
  }
  // Ensure our SDF texture and edits uniform array have enough capacity.
  // Reallocate if not.
  ensureCapacity({
    maxSdfs: A,
    maxEdits: e
  }) {
    let I = !1;
    return A > this.sdfTexture.image.height && (this.sdfTexture.dispose(), this.maxSdfs = Math.max(this.maxSdfs * 2, A), this.sdfData = new Uint32Array(this.maxSdfs * 8 * 4), this.sdfFloatData = new Float32Array(this.sdfData.buffer), this.sdfTexture = this.newSdfTexture(this.sdfData, this.maxSdfs)), e > (this.dynoEdits.count ?? 0) && (this.maxEdits = Math.max(this.maxEdits * 2, e), this.editData = new Uint32Array(this.maxEdits * 4), this.editFloatData = new Float32Array(this.editData.buffer), this.dynoEdits = this.newEdits(this.editData, this.maxEdits), I = !0), I;
  }
  updateEditData(A, e) {
    const I = this.editData[A] !== e;
    return this.editData[A] = e, I;
  }
  updateEditFloatData(A, e) {
    wt[0] = e;
    const I = this.editFloatData[A] !== wt[0];
    return I && (this.editFloatData[A] = wt[0]), I;
  }
  encodeEdit(A, {
    sdfFirst: e,
    sdfCount: I,
    invert: g,
    rgbaBlendMode: s,
    softEdge: B,
    sdfSmooth: Q
  }) {
    const i = A * 4;
    let C = !1;
    return C = this.updateEditData(i + 0, s | (g ? 256 : 0)) || C, C = this.updateEditData(i + 1, e | I << 16) || C, C = this.updateEditFloatData(i + 2, B) || C, C = this.updateEditFloatData(i + 3, Q) || C, C;
  }
  updateSdfData(A, e) {
    const I = this.sdfData[A] !== e;
    return this.sdfData[A] = e, I;
  }
  updateSdfFloatData(A, e) {
    wt[0] = e;
    const I = this.sdfFloatData[A] !== wt[0];
    return I && (this.sdfFloatData[A] = wt[0]), I;
  }
  encodeSdf(A, {
    sdfType: e,
    invert: I,
    center: g,
    quaternion: s,
    scale: B,
    sizes: Q
  }, i) {
    const C = A * 32, E = e | (I ? 256 : 0);
    let n = !1;
    n = this.updateSdfFloatData(C + 0, (g == null ? void 0 : g.x) ?? 0) || n, n = this.updateSdfFloatData(C + 1, (g == null ? void 0 : g.y) ?? 0) || n, n = this.updateSdfFloatData(C + 2, (g == null ? void 0 : g.z) ?? 0) || n, n = this.updateSdfData(C + 3, E) || n, n = this.updateSdfFloatData(C + 4, (s == null ? void 0 : s.x) ?? 0) || n, n = this.updateSdfFloatData(C + 5, (s == null ? void 0 : s.y) ?? 0) || n, n = this.updateSdfFloatData(C + 6, (s == null ? void 0 : s.z) ?? 0) || n, n = this.updateSdfFloatData(C + 7, (s == null ? void 0 : s.w) ?? 0) || n, n = this.updateSdfFloatData(C + 8, (B == null ? void 0 : B.x) ?? 0) || n, n = this.updateSdfFloatData(C + 9, (B == null ? void 0 : B.y) ?? 0) || n, n = this.updateSdfFloatData(C + 10, (B == null ? void 0 : B.z) ?? 0) || n, n = this.updateSdfData(C + 11, 0) || n, n = this.updateSdfFloatData(C + 12, (Q == null ? void 0 : Q.x) ?? 0) || n, n = this.updateSdfFloatData(C + 13, (Q == null ? void 0 : Q.y) ?? 0) || n, n = this.updateSdfFloatData(C + 14, (Q == null ? void 0 : Q.z) ?? 0) || n, n = this.updateSdfFloatData(C + 15, (Q == null ? void 0 : Q.w) ?? 0) || n;
    const o = Math.min(4, i.length);
    for (let r = 0; r < o; ++r) {
      const l = C + 16 + r * 4;
      n = this.updateSdfFloatData(l + 0, i[r].x) || n, n = this.updateSdfFloatData(l + 1, i[r].y) || n, n = this.updateSdfFloatData(l + 2, i[r].z) || n, n = this.updateSdfFloatData(l + 3, i[r].w) || n;
    }
    return n;
  }
  // Update the SDFs and edits from an array of SplatEdits and their
  // associated SplatEditSdfs, updating it for the dyno shader program.
  update(A) {
    const e = A.reduce((n, { sdfs: o }) => n + o.length, 0), I = this.ensureCapacity({
      maxEdits: A.length,
      maxSdfs: e
    }), g = [new a.Vector4(), new a.Vector4()], s = new a.Vector3(), B = new a.Quaternion(), Q = new a.Vector3(), i = new a.Vector4();
    let C = 0, E = I;
    A.length !== this.dynoNumEdits.value && (this.dynoNumEdits.value = A.length, this.numEdits = A.length, E = !0);
    for (const [n, { edit: o, sdfs: r }] of A.entries()) {
      E = this.encodeEdit(n, {
        sdfFirst: C,
        sdfCount: r.length,
        invert: o.invert,
        rgbaBlendMode: Ao(o.rgbaBlendMode),
        softEdge: o.softEdge,
        sdfSmooth: o.sdfSmooth
      }) || E;
      let l = !1;
      for (const c of r)
        i.set(c.scale.x, c.scale.y, c.scale.z, c.radius), c.scale.setScalar(1), c.updateMatrixWorld(), c.matrixWorld.clone().invert().decompose(s, B, Q), c.scale.set(i.x, i.y, i.z), c.updateMatrixWorld(), g[0].set(c.color.r, c.color.g, c.color.b, c.opacity), g[1].set(c.displace.x, c.displace.y, c.displace.z, 1), l = this.encodeSdf(
          C,
          {
            sdfType: Wa(c.type),
            invert: c.invert,
            center: s,
            quaternion: B,
            scale: Q,
            sizes: i
          },
          g
        ) || l, C += 1;
      this.numSdfs = C, l && (this.sdfTexture.needsUpdate = !0), E || (E = l);
    }
    return { updated: E, dynoUpdated: I };
  }
  // Modify a Gsplat in a dyno shader program using the current edits and SDFs.
  modify(A) {
    return Io(
      A,
      this.dynoSdfArray,
      this.dynoNumEdits,
      this.dynoEdits
    );
  }
}
const RQ = { type: "SdfArray" }, UQ = oA(`
  struct SdfArray {
    int numSdfs;
    usampler2D sdfTexture;
  };

  void unpackSdfArray(
    usampler2D sdfTexture, int sdfIndex, out uint flags,
    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,
    int numValues, out vec4 values[4]
  ) {
    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);
    flags = temp.w;
    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);
    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);
    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);
    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    for (int i = 0; i < numValues; ++i) {
      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);
      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));
    }
  }

  const uint SDF_FLAG_TYPE = 0xFFu;
  const uint SDF_FLAG_INVERT = 1u << 8u;

  const uint SDF_TYPE_ALL = 0u;
  const uint SDF_TYPE_PLANE = 1u;
  const uint SDF_TYPE_SPHERE = 2u;
  const uint SDF_TYPE_BOX = 3u;
  const uint SDF_TYPE_ELLIPSOID = 4u;
  const uint SDF_TYPE_CYLINDER = 5u;
  const uint SDF_TYPE_CAPSULE = 6u;
  const uint SDF_TYPE_INFINITE_CONE = 7u;

  float evaluateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 outValues[4]
  ) {
    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;
    float maxExp = -1.0 / 0.0;
    for (int i = 0; i < numValues; ++i) {
        outValues[i] = vec4(0.0);
    }

    uint flags;
    vec3 center, scale;
    vec4 quaternion, sizes;
    vec4 values[4];

    int sdfLast = min(sdfFirst + sdfCount, numSdfs);
    for (int index = sdfFirst; index < sdfLast; ++index) {
      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);
      uint sdfType = flags & SDF_FLAG_TYPE;
      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;

      float distance;
      switch (sdfType) {
        case SDF_TYPE_ALL:
          distance = -1.0 / 0.0;
          break;
        case SDF_TYPE_PLANE: {
          distance = sdfPos.z;
          break;
        }
        case SDF_TYPE_SPHERE: {
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_BOX: {
          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;
          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;
          break;
        }
        case SDF_TYPE_ELLIPSOID: {
          vec3 sizes = sizes.xyz;
          float k0 = length(sdfPos / sizes);
          float k1 = length(sdfPos / dot(sizes, sizes));
          distance = k0 * (k0 - 1.0) / k1;
          break;
        }
        case SDF_TYPE_CYLINDER: {
          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;
          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
          break;
        }
        case SDF_TYPE_CAPSULE: {
          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_INFINITE_CONE: {
          float angle = 0.25 * PI * sizes.w;
          vec2 c = vec2(sin(angle), cos(angle));
          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);
          float d = length(q - c * max(dot(q, c), 0.0));
          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);
          break;
        }
      }

      if ((flags & SDF_FLAG_INVERT) != 0u) {
        distance = -distance;
      }

      if (smoothK == 0.0) {
        if (distance < distanceAccum) {
          distanceAccum = distance;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] = values[i];
          }
        }
      } else {
        float scaledDistance = -distance / smoothK;
        if (scaledDistance > maxExp) {
          float scale = exp(maxExp - scaledDistance);
          distanceAccum *= scale;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] *= scale;
          }
          maxExp = scaledDistance;
        }

        float weight = exp(scaledDistance - maxExp);
        distanceAccum += weight;
        for (int i = 0; i < numValues; ++i) {
          outValues[i] += weight * values[i];
        }
      }
    }

    if (smoothK == 0.0) {
      return distanceAccum;
    } else {
      // Very distant SDFs may result in 0 accumulation
      if (distanceAccum == 0.0) {
        return 1.0 / 0.0;
      }
      for (int i = 0; i < numValues; ++i) {
        outValues[i] /= distanceAccum;
      }
      return (-log(distanceAccum) - maxExp) * smoothK;
    }
  }

  float modulateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 values[4],
    float softEdge, bool invert
  ) {
    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);
    if (invert) {
      distance = -distance;
    }

    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)
      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);
  }
`), LQ = oA(`
  const uint EDIT_FLAG_BLEND = 0xFFu;
  const uint EDIT_BLEND_MULTIPLY = 0u;
  const uint EDIT_BLEND_SET_RGB = 1u;
  const uint EDIT_BLEND_ADD_RGBA = 2u;
  const uint EDIT_FLAG_INVERT = 0x100u;

  void decodeEdit(
    uvec4 packedEdit, out int sdfFirst, out int sdfCount,
    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth
  ) {
    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;
    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;

    sdfFirst = int(packedEdit.y & 0xFFFFu);
    sdfCount = int(packedEdit.y >> 16u);

    softEdge = uintBitsToFloat(packedEdit.z);
    sdfSmooth = uintBitsToFloat(packedEdit.w);
  }

  void applyRgbaDisplaceEdit(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,
    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba
  ) {
    vec4 values[4];
    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);
    // On Android, moving values[0] is necessary to work around a compiler bug.
    vec4 sdfRgba = values[0];
    vec4 sdfDisplaceScale = values[1];

    vec4 target;
    switch (rgbaBlendMode) {
      case EDIT_BLEND_MULTIPLY:
        target = rgba * sdfRgba;
        break;
      case EDIT_BLEND_SET_RGB:
        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);
        break;
      case EDIT_BLEND_ADD_RGBA:
        target = rgba + sdfRgba;
        break;
      default:
        // Debug output if blend mode not set
        target = vec4(fract(pos), 1.0);
    }
    rgba = mix(rgba, target, modulate);
    pos += sdfDisplaceScale.xyz * modulate;
  }

  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {
    int sdfFirst, sdfCount;
    bool invert;
    uint rgbaBlendMode;
    float softEdge, sdfSmooth;
    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);
    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);
  }
`);
function Io(t, A, e, I) {
  return new V({
    inTypes: {
      gsplat: W,
      sdfArray: RQ,
      numEdits: "int",
      rgbaDisplaceEdits: "uvec4"
    },
    outTypes: { gsplat: W },
    globals: () => [UQ, LQ],
    inputs: { gsplat: t, sdfArray: A, numEdits: e, rgbaDisplaceEdits: I },
    statements: ({ inputs: s, outputs: B }) => {
      const { sdfArray: Q, numEdits: i, rgbaDisplaceEdits: C } = s, { gsplat: E } = B;
      return UA(`
        ${E} = ${s.gsplat};
        if (isGsplatActive(${E}.flags)) {
          for (int editIndex = 0; editIndex < ${i}; ++editIndex) {
            applyPackedRgbaDisplaceEdit(
              ${C}[editIndex], ${Q}.sdfTexture, ${Q}.numSdfs,
              ${E}.center, ${E}.rgba
            );
          }
        }
      `);
    }
  }).outputs.gsplat;
}
const wt = new Float32Array(1);
class go {
  constructor(A) {
    this.modifier = A, this.cache = /* @__PURE__ */ new Map();
  }
  apply(A) {
    let e = this.cache.get(A);
    return e || (e = NA(
      { index: "int" },
      { gsplat: W },
      ({ index: I }) => {
        const { gsplat: g } = A.apply({ index: I });
        return this.modifier.apply({ gsplat: g });
      }
    ), this.cache.set(A, e)), e;
  }
}
class ft {
  // Create the dyno uniforms that parameterize the transform, setting them
  // to initial values that are different from any valid transform.
  constructor() {
    this.scale = new ot({ value: Number.NEGATIVE_INFINITY }), this.rotate = new _t({
      value: new a.Quaternion(
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY
      )
    }), this.translate = new St({
      value: new a.Vector3(
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY,
        Number.POSITIVE_INFINITY
      )
    });
  }
  // Apply the transform to a Vec3 position in a dyno program.
  apply(A) {
    return BQ(A, {
      scale: this.scale,
      rotate: this.rotate,
      translate: this.translate
    });
  }
  applyDir(A) {
    return QQ(A, {
      rotate: this.rotate
    });
  }
  // Apply the transform to a Gsplat in a dyno program.
  applyGsplat(A) {
    return Xe(A, {
      scale: this.scale,
      rotate: this.rotate,
      translate: this.translate
    });
  }
  // Update the uniforms to match the given transform matrix.
  updateFromMatrix(A) {
    const e = new a.Vector3(), I = new a.Quaternion(), g = new a.Vector3();
    A.decompose(g, I, e);
    const s = (e.x + e.y + e.z) / 3;
    let B = !1;
    return s !== this.scale.value && (this.scale.value = s, B = !0), g.equals(this.translate.value) || (this.translate.value.copy(g), B = !0), I.equals(this.rotate.value) || (this.rotate.value.copy(I), B = !0), B;
  }
  // Update this transform to match the object's to-world transform.
  update(A) {
    return A.updateMatrixWorld(), this.updateFromMatrix(A.matrixWorld);
  }
}
class qt extends a.Object3D {
  constructor({
    numSplats: A,
    generator: e,
    construct: I,
    update: g
  }) {
    if (super(), this.numSplats = A ?? 0, this.generator = e, this.frameUpdate = g, this.version = 0, I) {
      const s = I(this);
      Object.assign(this, s);
    }
  }
  updateVersion() {
    this.version += 1;
  }
  set needsUpdate(A) {
    A && this.updateVersion();
  }
}
const et = class et extends qt {
  constructor(A = {}) {
    const e = new ft(), I = new ft(), g = new ft(), s = new ft(), B = new _t({
      value: new a.Vector4(
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY,
        Number.NEGATIVE_INFINITY
      )
    }), Q = new ot({ value: 0 }), i = new ot({ value: 0 }), C = {
      transform: e,
      viewToWorld: I,
      worldToView: g,
      viewToObject: s,
      recolor: B,
      time: Q,
      deltaTime: i
    };
    if (super({
      update: ({ time: E, deltaTime: n, viewToWorld: o, globalEdits: r }) => this.update({ time: E, deltaTime: n, viewToWorld: o, globalEdits: r })
    }), this.isInitialized = !1, this.recolor = new a.Color(1, 1, 1), this.opacity = 1, this.enableViewToObject = !1, this.enableViewToWorld = !1, this.enableWorldToView = !1, this.skinning = null, this.edits = null, this.rgbaDisplaceEdits = null, this.splatRgba = null, this.maxSh = 3, this.packedSplats = A.packedSplats ?? new qA(), this.numSplats = this.packedSplats.numSplats, this.editable = A.editable ?? !0, this.onFrame = A.onFrame, this.context = C, this.objectModifier = A.objectModifier, this.worldModifier = A.worldModifier, this.updateGenerator(), A.url || A.fileBytes || A.constructSplats || A.packedSplats && !A.packedSplats.isInitialized)
      this.initialized = this.asyncInitialize(A).then(async () => {
        if (this.updateGenerator(), this.isInitialized = !0, A.onLoad) {
          const E = A.onLoad(this);
          E instanceof Promise && await E;
        }
        return this;
      });
    else if (this.isInitialized = !0, this.initialized = Promise.resolve(this), A.onLoad) {
      const E = A.onLoad(this);
      E instanceof Promise && (this.initialized = E.then(() => this));
    }
  }
  async asyncInitialize(A) {
    const { url: e, fileBytes: I, fileType: g, fileName: s, maxSplats: B, constructSplats: Q } = A;
    if (e || I || Q) {
      const i = {
        url: e,
        fileBytes: I,
        fileType: g,
        fileName: s,
        maxSplats: B,
        construct: Q
      };
      this.packedSplats.reinitialize(i);
    }
    this.packedSplats && (await this.packedSplats.initialized, this.numSplats = this.packedSplats.numSplats, this.updateGenerator());
  }
  static async staticInitialize() {
    await NI(), et.isStaticInitialized = !0;
  }
  // Creates a new Gsplat with the provided parameters (all values in "float" space,
  // i.e. 0-1 for opacity and color) and adds it to the end of the packedSplats,
  // increasing numSplats by 1. If necessary, reallocates the buffer with an exponential
  // doubling strategy to fit the new data, so it's fairly efficient to just
  // pushSplat(...) each Gsplat you want to create in a loop.
  pushSplat(A, e, I, g, s) {
    this.packedSplats.pushSplat(A, e, I, g, s);
  }
  // This method iterates over all Gsplats in this instance's packedSplats,
  // invoking the provided callback with index: number in 0..=(this.numSplats-1) and
  // center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion,
  // opacity: number (0..1), and color: THREE.Color (rgb values in 0..1).
  // Note that the objects passed in as center etc. are the same for every callback
  // invocation: these objects are reused for efficiency. Changing these values has
  // no effect as they are decoded/unpacked copies of the underlying data. To update
  // the packedSplats, call .packedSplats.setSplat(index, center, scales,
  // quaternion, opacity, color).
  forEachSplat(A) {
    this.packedSplats.forEachSplat(A);
  }
  // Call this when you are finished with the SplatMesh and want to free
  // any buffers it holds (via packedSplats).
  dispose() {
    this.packedSplats.dispose();
  }
  constructGenerator(A) {
    const { transform: e, viewToObject: I, recolor: g } = A, s = NA(
      { index: "int" },
      { gsplat: W },
      ({ index: B }) => {
        if (!B)
          throw new Error("index is undefined");
        let Q = mt(this.packedSplats.dyno, B);
        if (this.maxSh >= 1) {
          const { sh1Texture: C, sh2Texture: E, sh3Texture: n } = this.ensureShTextures();
          if (C) {
            const o = I.translate, { center: r } = at(Q).outputs, l = pB(Gt(r, o));
            let c = io(Q, C, l);
            this.maxSh >= 2 && E && (c = dA(c, no(Q, E, l))), this.maxSh >= 3 && n && (c = dA(c, Co(Q, n, l)));
            let { rgba: h } = at(Q).outputs;
            h = dA(h, MB(c, K("float", 0))), Q = Bt({ gsplat: Q, rgba: h });
          }
        }
        if (this.splatRgba) {
          const C = Pa(this.splatRgba.dyno, B);
          Q = Bt({ gsplat: Q, rgba: C });
        }
        this.skinning && (Q = this.skinning.modify(Q)), this.objectModifier && (Q = this.objectModifier.apply({ gsplat: Q }).gsplat), Q = e.applyGsplat(Q);
        const i = EA(g, at(Q).outputs.rgba);
        return Q = Bt({ gsplat: Q, rgba: i }), this.rgbaDisplaceEdits && (Q = this.rgbaDisplaceEdits.modify(Q)), this.worldModifier && (Q = this.worldModifier.apply({ gsplat: Q }).gsplat), { gsplat: Q };
      }
    );
    this.generator = s;
  }
  // Call this whenever something changes in the Gsplat processing pipeline,
  // for example changing maxSh or updating objectModifier or worldModifier.
  // Compiled generators are cached for efficiency and re-use when the same
  // pipeline structure emerges after successive changes.
  updateGenerator() {
    this.constructGenerator(this.context);
  }
  // This is called automatically by SparkRenderer and you should not have to
  // call it. It updates parameters for the generated pipeline and calls
  // updateGenerator() if the pipeline needs to change.
  update({
    time: A,
    viewToWorld: e,
    deltaTime: I,
    globalEdits: g
  }) {
    var h;
    this.numSplats = this.packedSplats.numSplats, this.context.time.value = A, this.context.deltaTime.value = I, et.dynoTime.value = A;
    const { transform: s, viewToObject: B, recolor: Q } = this.context;
    let i = s.update(this);
    this.context.viewToWorld.updateFromMatrix(e) && this.enableViewToWorld && (i = !0);
    const C = e.clone().invert();
    this.context.worldToView.updateFromMatrix(C) && this.enableWorldToView && (i = !0);
    const o = new a.Matrix4().compose(
      s.translate.value,
      s.rotate.value,
      new a.Vector3().setScalar(s.scale.value)
    ).invert().multiply(e);
    B.updateFromMatrix(o) && (this.enableViewToObject || this.packedSplats.extra.sh1) && (i = !0);
    const r = new a.Vector4(
      this.recolor.r,
      this.recolor.g,
      this.recolor.b,
      this.opacity
    );
    r.equals(Q.value) || (Q.value.copy(r), i = !0);
    const l = this.editable ? (this.edits ?? []).concat(g) : [];
    this.editable && !this.edits && this.traverseVisible((u) => {
      u instanceof Ce && l.push(u);
    }), l.sort((u, y) => u.ordering - y.ordering);
    const c = l.map((u) => {
      if (u.sdfs != null)
        return { edit: u, sdfs: u.sdfs };
      const y = [];
      return u.traverseVisible((w) => {
        w instanceof to && y.push(w);
      }), { edit: u, sdfs: y };
    });
    if (c.length > 0 && !this.rgbaDisplaceEdits) {
      const u = c.length, y = c.reduce(
        (w, f) => w + f.sdfs.length,
        0
      );
      this.rgbaDisplaceEdits = new eo({
        maxEdits: u,
        maxSdfs: y
      }), this.updateGenerator();
    }
    if (this.rgbaDisplaceEdits) {
      const u = this.rgbaDisplaceEdits.update(c);
      i || (i = u.updated), u.dynoUpdated && this.updateGenerator();
    }
    i && this.updateVersion(), (h = this.onFrame) == null || h.call(this, { mesh: this, time: A, deltaTime: I });
  }
  // This method conforms to the standard THREE.Raycaster API, performing object-ray
  // intersections using this method to populate the provided intersects[] array
  // with each intersection point.
  raycast(A, e) {
    if (!this.packedSplats.packedArray || !this.packedSplats.numSplats)
      return;
    const { near: I, far: g, ray: s } = A, B = this.matrixWorld.clone().invert(), Q = new a.Matrix3().setFromMatrix4(B), i = s.origin.clone().applyMatrix4(B), C = s.direction.clone().applyMatrix3(Q), E = new a.Vector3();
    B.decompose(new a.Vector3(), new a.Quaternion(), E), (E.x * E.y * E.z) ** (1 / 3);
    const o = Yi(
      i.x,
      i.y,
      i.z,
      C.x,
      C.y,
      C.z,
      I,
      g,
      this.packedSplats.numSplats,
      this.packedSplats.packedArray,
      !0
    );
    for (const r of o) {
      const l = s.direction.clone().multiplyScalar(r).add(s.origin);
      e.push({
        distance: r,
        point: l,
        object: this
      });
    }
  }
  ensureShTextures() {
    if (!this.packedSplats.extra.sh1)
      return {};
    let A = this.packedSplats.extra.sh1Texture;
    if (!A) {
      let g = this.packedSplats.extra.sh1;
      const { width: s, height: B, depth: Q, maxSplats: i } = pA(
        g.length / 2
      );
      if (g.length < i * 2) {
        const E = new Uint32Array(i * 2);
        E.set(g), this.packedSplats.extra.sh1 = E, g = E;
      }
      const C = new a.DataArrayTexture(g, s, B, Q);
      C.format = a.RGIntegerFormat, C.type = a.UnsignedIntType, C.internalFormat = "RG32UI", C.needsUpdate = !0, A = new Tt({
        value: C,
        key: "sh1"
      }), this.packedSplats.extra.sh1Texture = A;
    }
    if (!this.packedSplats.extra.sh2)
      return { sh1Texture: A };
    let e = this.packedSplats.extra.sh2Texture;
    if (!e) {
      let g = this.packedSplats.extra.sh2;
      const { width: s, height: B, depth: Q, maxSplats: i } = pA(
        g.length / 4
      );
      if (g.length < i * 4) {
        const E = new Uint32Array(i * 4);
        E.set(g), this.packedSplats.extra.sh2 = E, g = E;
      }
      const C = new a.DataArrayTexture(g, s, B, Q);
      C.format = a.RGBAIntegerFormat, C.type = a.UnsignedIntType, C.internalFormat = "RGBA32UI", C.needsUpdate = !0, e = new Tt({
        value: C,
        key: "sh2"
      }), this.packedSplats.extra.sh2Texture = e;
    }
    if (!this.packedSplats.extra.sh3)
      return { sh1Texture: A, sh2Texture: e };
    let I = this.packedSplats.extra.sh3Texture;
    if (!I) {
      let g = this.packedSplats.extra.sh3;
      const { width: s, height: B, depth: Q, maxSplats: i } = pA(
        g.length / 4
      );
      if (g.length < i * 4) {
        const E = new Uint32Array(i * 4);
        E.set(g), this.packedSplats.extra.sh3 = E, g = E;
      }
      const C = new a.DataArrayTexture(g, s, B, Q);
      C.format = a.RGBAIntegerFormat, C.type = a.UnsignedIntType, C.internalFormat = "RGBA32UI", C.needsUpdate = !0, I = new Tt({
        value: C,
        key: "sh3"
      }), this.packedSplats.extra.sh3Texture = I;
    }
    return { sh1Texture: A, sh2Texture: e, sh3Texture: I };
  }
};
et.staticInitialized = et.staticInitialize(), et.isStaticInitialized = !1, et.dynoTime = new ot({ value: 0 });
let _A = et;
const so = oA(`
  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {
    // Extract sint7 values packed into 2 x uint32
    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;
    vec3 sh1_0 = vec3(ivec3(
      int(packed.x << 25u) >> 25,
      int(packed.x << 18u) >> 25,
      int(packed.x << 11u) >> 25
    )) / 63.0;
    vec3 sh1_1 = vec3(ivec3(
      int(packed.x << 4u) >> 25,
      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,
      int(packed.y << 22u) >> 25
    )) / 63.0;
    vec3 sh1_2 = vec3(ivec3(
      int(packed.y << 15u) >> 25,
      int(packed.y << 8u) >> 25,
      int(packed.y << 1u) >> 25
    )) / 63.0;

    return sh1_0 * (-0.4886025 * viewDir.y)
      + sh1_1 * (0.4886025 * viewDir.z)
      + sh1_2 * (-0.4886025 * viewDir.x);
  }
`), Bo = oA(`
  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {
    // Extract sint8 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);
    vec3 sh2_0 = vec3(ivec3(
      int(packed.x << 24u) >> 24,
      int(packed.x << 16u) >> 24,
      int(packed.x << 8u) >> 24
    )) / 127.0;
    vec3 sh2_1 = vec3(ivec3(
      int(packed.x) >> 24,
      int(packed.y << 24u) >> 24,
      int(packed.y << 16u) >> 24
    )) / 127.0;
    vec3 sh2_2 = vec3(ivec3(
      int(packed.y << 8u) >> 24,
      int(packed.y) >> 24,
      int(packed.z << 24u) >> 24
    )) / 127.0;
    vec3 sh2_3 = vec3(ivec3(
      int(packed.z << 16u) >> 24,
      int(packed.z << 8u) >> 24,
      int(packed.z) >> 24
    )) / 127.0;
    vec3 sh2_4 = vec3(ivec3(
      int(packed.w << 24u) >> 24,
      int(packed.w << 16u) >> 24,
      int(packed.w << 8u) >> 24
    )) / 127.0;

    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)
      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)
      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))
      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)
      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));
  }
`), Qo = oA(`
  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {
    // Extract sint6 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);
    vec3 sh3_0 = vec3(ivec3(
      int(packed.x << 26u) >> 26,
      int(packed.x << 20u) >> 26,
      int(packed.x << 14u) >> 26
    )) / 31.0;
    vec3 sh3_1 = vec3(ivec3(
      int(packed.x << 8u) >> 26,
      int(packed.x << 2u) >> 26,
      int((packed.x >> 4u) | (packed.y << 28u)) >> 26
    )) / 31.0;
    vec3 sh3_2 = vec3(ivec3(
      int(packed.y << 22u) >> 26,
      int(packed.y << 16u) >> 26,
      int(packed.y << 10u) >> 26
    )) / 31.0;
    vec3 sh3_3 = vec3(ivec3(
      int(packed.y << 4u) >> 26,
      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,
      int(packed.z << 24u) >> 26
    )) / 31.0;
    vec3 sh3_4 = vec3(ivec3(
      int(packed.z << 18u) >> 26,
      int(packed.z << 12u) >> 26,
      int(packed.z << 6u) >> 26
    )) / 31.0;
    vec3 sh3_5 = vec3(ivec3(
      int(packed.z) >> 26,
      int(packed.w << 26u) >> 26,
      int(packed.w << 20u) >> 26
    )) / 31.0;
    vec3 sh3_6 = vec3(ivec3(
      int(packed.w << 14u) >> 26,
      int(packed.w << 8u) >> 26,
      int(packed.w << 2u) >> 26
    )) / 31.0;

    float xx = viewDir.x * viewDir.x;
    float yy = viewDir.y * viewDir.y;
    float zz = viewDir.z * viewDir.z;
    float xy = viewDir.x * viewDir.y;
    float yz = viewDir.y * viewDir.z;
    float zx = viewDir.z * viewDir.x;

    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))
      + sh3_1 * (2.8906114 * xy * viewDir.z) +
      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))
      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))
      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))
      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))
      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));
  }
`);
function io(t, A, e) {
  return jt({
    inTypes: { gsplat: W, sh1: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh1: A, viewDir: e },
    globals: () => [SA, so],
    statements: ({ inputs: I, outputs: g }) => UA(`
        if (isGsplatActive(${I.gsplat}.flags)) {
          ${g.rgb} = evaluateSH1(${I.gsplat}, ${I.sh1}, ${I.viewDir});
        } else {
          ${g.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
function no(t, A, e) {
  return jt({
    inTypes: { gsplat: W, sh2: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh2: A, viewDir: e },
    globals: () => [SA, Bo],
    statements: ({ inputs: I, outputs: g }) => UA(`
        if (isGsplatActive(${I.gsplat}.flags)) {
          ${g.rgb} = evaluateSH2(${I.gsplat}, ${I.sh2}, ${I.viewDir});
        } else {
          ${g.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
function Co(t, A, e) {
  return jt({
    inTypes: { gsplat: W, sh3: "usampler2DArray", viewDir: "vec3" },
    outTypes: { rgb: "vec3" },
    inputs: { gsplat: t, sh3: A, viewDir: e },
    globals: () => [SA, Qo],
    statements: ({ inputs: I, outputs: g }) => UA(`
        if (isGsplatActive(${I.gsplat}.flags)) {
          ${g.rgb} = evaluateSH3(${I.gsplat}, ${I.sh3}, ${I.viewDir});
        } else {
          ${g.rgb} = vec3(0.0);
        }
      `)
  }).outputs.rgb;
}
const dt = class dt {
  // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet
  constructor({ fileBytes: A }) {
    this.header = "", this.littleEndian = !0, this.elements = {}, this.comments = [], this.data = null, this.numSplats = 0, this.fileBytes = A instanceof ArrayBuffer ? new Uint8Array(A) : A;
  }
  // Identify and parse the PLY text header (assumed to be <64KB in size).
  // this.elements will contain all the elements in the file, typically
  // "vertex" contains the Gsplat data.
  async parseHeader() {
    const e = new ReadableStream({
      start: (B) => {
        B.enqueue(this.fileBytes.slice(0, 65536)), B.close();
      }
    }).pipeThrough(new TextDecoderStream()).getReader();
    this.header = "";
    const I = `end_header
`;
    for (; ; ) {
      const { value: B, done: Q } = await e.read();
      if (Q)
        throw new Error("Failed to read header");
      this.header += B;
      const i = this.header.indexOf(I);
      if (i >= 0) {
        this.header = this.header.slice(0, i + I.length);
        break;
      }
    }
    const g = new TextEncoder().encode(this.header).length;
    this.data = new DataView(this.fileBytes.buffer, g), this.elements = {};
    let s = null;
    this.comments = [], this.header.trim().split(`
`).forEach((B, Q) => {
      const i = B.trim();
      if (Q === 0) {
        if (i !== "ply")
          throw new Error("Invalid PLY header");
        return;
      }
      if (i.length === 0)
        return;
      const C = i.split(" ");
      switch (C[0]) {
        case "format":
          if (C[1] === "binary_little_endian")
            this.littleEndian = !0;
          else if (C[1] === "binary_big_endian")
            this.littleEndian = !1;
          else
            throw new Error(`Unsupported PLY format: ${C[1]}`);
          if (C[2] !== "1.0")
            throw new Error(`Unsupported PLY version: ${C[2]}`);
          break;
        case "end_header":
          break;
        case "comment":
          this.comments.push(i.slice(8));
          break;
        case "element": {
          const E = C[1];
          s = {
            name: E,
            count: Number.parseInt(C[2]),
            properties: {}
          }, this.elements[E] = s;
          break;
        }
        case "property":
          if (s == null)
            throw new Error("Property must be inside an element");
          C[1] === "list" ? s.properties[C[4]] = {
            isList: !0,
            type: C[3],
            countType: C[2]
          } : s.properties[C[2]] = {
            isList: !1,
            type: C[1]
          };
          break;
      }
    }), this.elements.vertex && (this.numSplats = this.elements.vertex.count);
  }
  parseData(A) {
    let e = 0;
    const I = this.data;
    if (I == null)
      throw new Error("No data to parse");
    for (const g in this.elements) {
      const s = this.elements[g], { count: B, properties: Q } = s, i = {}, C = [];
      for (const [n, o] of Object.entries(Q))
        o.isList ? (i[n] = [], C.push(() => {
          const r = i[n];
          r.length = Ae[o.countType](
            I,
            e,
            this.littleEndian
          ), e += yt[o.countType];
          for (let l = 0; l < r.length; l++)
            r[l] = Ae[o.type](
              I,
              e,
              this.littleEndian
            ), e += yt[o.type];
        })) : (i[n] = 0, C.push(() => {
          i[n] = Ae[o.type](
            I,
            e,
            this.littleEndian
          ), e += yt[o.type];
        }));
      const E = A(s) ?? (() => {
      });
      for (let n = 0; n < B; n++) {
        for (const o of C)
          o();
        E(n, i);
      }
    }
  }
  // Parse all the Gsplat data in the PLY file in go, invoking the given
  // callbacks for each Gsplat.
  parseSplats(A, e) {
    if (this.elements.vertex == null)
      throw new Error("No vertex element found");
    let I = !1;
    const g = [];
    let s = 0, B = [], Q = [], i = [], C, E, n;
    function o() {
      const u = ao[s];
      B = new Array(3).fill(null).flatMap(
        (y, w) => [0, 1, 2].map((f, d) => `f_rest_${w + d * u / 3}`)
      ), Q = new Array(5).fill(null).flatMap(
        (y, w) => [0, 1, 2].map((f, d) => `f_rest_${3 + w + d * u / 3}`)
      ), i = new Array(7).fill(null).flatMap(
        (y, w) => [0, 1, 2].map((f, d) => `f_rest_${8 + w + d * u / 3}`)
      ), C = s >= 1 ? new Float32Array(3 * 3) : void 0, E = s >= 2 ? new Float32Array(5 * 3) : void 0, n = s >= 3 ? new Float32Array(7 * 3) : void 0;
    }
    function r(u, y) {
      if (!C)
        throw new Error("Missing sh1");
      for (const [w, f] of B.entries())
        C[w] = y[f] * 8 / 255 - 4;
      if (E)
        for (const [w, f] of Q.entries())
          E[w] = y[f] * 8 / 255 - 4;
      if (n)
        for (const [w, f] of i.entries())
          n[w] = y[f] * 8 / 255 - 4;
      e == null || e(u, C, E, n);
    }
    function l(u) {
      const {
        min_x: y,
        min_y: w,
        min_z: f,
        max_x: d,
        max_y: m,
        max_z: M,
        min_scale_x: p,
        min_scale_y: D,
        min_scale_z: R,
        max_scale_x: N,
        max_scale_y: F,
        max_scale_z: L
      } = u.properties;
      if (!y || !w || !f || !d || !m || !M || !p || !D || !R || !N || !F || !L)
        throw new Error("Missing PLY chunk properties");
      return I = !0, (G, k) => {
        const {
          min_x: U,
          min_y: J,
          min_z: AA,
          max_x: z,
          max_y: eA,
          max_z: tA,
          min_scale_x: X,
          min_scale_y: b,
          min_scale_z: _,
          max_scale_x: j,
          max_scale_y: P,
          max_scale_z: Y,
          min_r: uA,
          min_g: nA,
          min_b: wA,
          max_r: yA,
          max_g: MA,
          max_b: rA
        } = k;
        g.push({
          min_x: U,
          min_y: J,
          min_z: AA,
          max_x: z,
          max_y: eA,
          max_z: tA,
          min_scale_x: X,
          min_scale_y: b,
          min_scale_z: _,
          max_scale_x: j,
          max_scale_y: P,
          max_scale_z: Y,
          min_r: uA,
          min_g: nA,
          min_b: wA,
          max_r: yA,
          max_g: MA,
          max_b: rA
        });
      };
    }
    function c(u) {
      if (e && u.name === "sh")
        return s = EI(u.properties), o(), r;
      if (u.name !== "vertex")
        return null;
      const { packed_position: y, packed_rotation: w, packed_scale: f, packed_color: d } = u.properties;
      if (!y || !w || !f || !d)
        throw new Error(
          "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"
        );
      const m = Math.sqrt(2);
      return (M, p) => {
        const D = g[M >>> 8];
        if (D == null)
          throw new Error("Missing PLY chunk");
        const {
          min_x: R,
          min_y: N,
          min_z: F,
          max_x: L,
          max_y: G,
          max_z: k,
          min_scale_x: U,
          min_scale_y: J,
          min_scale_z: AA,
          max_scale_x: z,
          max_scale_y: eA,
          max_scale_z: tA,
          min_r: X,
          min_g: b,
          min_b: _,
          max_r: j,
          max_g: P,
          max_b: Y
        } = D, { packed_position: uA, packed_rotation: nA, packed_scale: wA, packed_color: yA } = p, MA = (uA >>> 21 & 2047) / 2047 * (L - R) + R, rA = (uA >>> 11 & 1023) / 1023 * (G - N) + N, LA = (uA & 2047) / 2047 * (k - F) + F, FA = ((nA >>> 20 & 1023) / 1023 - 0.5) * m, PA = ((nA >>> 10 & 1023) / 1023 - 0.5) * m, OA = ((nA & 1023) / 1023 - 0.5) * m, v = Math.sqrt(Math.max(0, 1 - FA * FA - PA * PA - OA * OA)), lA = nA >>> 30, ZA = lA === 0 ? FA : lA === 1 ? v : PA, Ut = lA <= 1 ? PA : lA === 2 ? v : OA, Ot = lA <= 2 ? OA : v, mA = lA === 0 ? v : FA, T = Math.exp(
          (wA >>> 21 & 2047) / 2047 * (z - U) + U
        ), VA = Math.exp(
          (wA >>> 11 & 1023) / 1023 * (eA - J) + J
        ), we = Math.exp(
          (wA & 2047) / 2047 * (tA - AA) + AA
        ), ye = (yA >>> 24 & 255) / 255 * ((j ?? 1) - (X ?? 0)) + (X ?? 0), De = (yA >>> 16 & 255) / 255 * ((P ?? 1) - (b ?? 0)) + (b ?? 0), fe = (yA >>> 8 & 255) / 255 * ((Y ?? 1) - (_ ?? 0)) + (_ ?? 0), de = (yA & 255) / 255;
        A(
          M,
          MA,
          rA,
          LA,
          T,
          VA,
          we,
          ZA,
          Ut,
          Ot,
          mA,
          de,
          ye,
          De,
          fe
        );
      };
    }
    const h = (u) => {
      if (u.name === "chunk")
        return l(u);
      if (I)
        return c(u);
      if (u.name !== "vertex")
        return null;
      const {
        x: y,
        y: w,
        z: f,
        scale_0: d,
        scale_1: m,
        scale_2: M,
        rot_0: p,
        rot_1: D,
        rot_2: R,
        rot_3: N,
        opacity: F,
        f_dc_0: L,
        f_dc_1: G,
        f_dc_2: k,
        red: U,
        green: J,
        blue: AA,
        alpha: z
      } = u.properties;
      if (!y || !w || !f)
        throw new Error("Missing PLY properties: x, y, z");
      const eA = d && m && M, tA = p && D && R && N, X = z != null ? te[z.type] : 1, b = U != null ? te[U.type] : 1, _ = J != null ? te[J.type] : 1, j = AA != null ? te[AA.type] : 1;
      return s = EI(u.properties), o(), (P, Y) => {
        const uA = eA ? Math.exp(Y.scale_0) : dt.defaultPointScale, nA = eA ? Math.exp(Y.scale_1) : dt.defaultPointScale, wA = eA ? Math.exp(Y.scale_2) : dt.defaultPointScale, yA = tA ? Y.rot_1 : 0, MA = tA ? Y.rot_2 : 0, rA = tA ? Y.rot_3 : 0, LA = tA ? Y.rot_0 : 1, FA = F != null ? 1 / (1 + Math.exp(-Y.opacity)) : z != null ? Y.alpha / X : 1, PA = L != null ? Y.f_dc_0 * $t + 0.5 : U != null ? Y.red / b : 1, OA = G != null ? Y.f_dc_1 * $t + 0.5 : J != null ? Y.green / _ : 1, v = k != null ? Y.f_dc_2 * $t + 0.5 : AA != null ? Y.blue / j : 1;
        if (A(
          P,
          Y.x,
          Y.y,
          Y.z,
          uA,
          nA,
          wA,
          yA,
          MA,
          rA,
          LA,
          FA,
          PA,
          OA,
          v
        ), e && C) {
          if (C)
            for (const [lA, ZA] of B.entries())
              C[lA] = Y[ZA];
          if (E)
            for (const [lA, ZA] of Q.entries())
              E[lA] = Y[ZA];
          if (n)
            for (const [lA, ZA] of i.entries())
              n[lA] = Y[ZA];
          e(P, C, E, n);
        }
      };
    };
    this.parseData(h);
  }
  // Inject RGBA values into original PLY file, which can be used to modify
  // the color/opacity of the Gsplats and write out the modified PLY file.
  injectRgba(A) {
    let e = 0;
    const I = this.data;
    if (I == null)
      throw new Error("No parsed data");
    if (A.length !== this.numSplats * 4)
      throw new Error("Invalid RGBA array length");
    for (const g in this.elements) {
      const s = this.elements[g], { count: B, properties: Q } = s, i = [];
      let C = 0;
      const E = g === "vertex";
      if (E) {
        for (const n of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"])
          if (!Q[n] || Q[n].type !== "float")
            throw new Error(`Can't injectRgba due to property: ${n}`);
      }
      for (const [n, o] of Object.entries(Q))
        if (o.isList)
          i.push(() => {
            const r = Ae[o.countType](
              I,
              e,
              this.littleEndian
            );
            e += yt[o.countType], e += r * yt[o.type];
          });
        else {
          if (E)
            if (n === "f_dc_0" || n === "f_dc_1" || n === "f_dc_2") {
              const r = Number.parseInt(
                n.slice(5)
              );
              i.push(() => {
                const l = (A[C + r] / 255 - 0.5) / $t;
                CI[o.type](
                  I,
                  e,
                  this.littleEndian,
                  l
                );
              });
            } else n === "opacity" && i.push(() => {
              const r = Math.max(
                -100,
                Math.min(
                  100,
                  -Math.log(1 / (A[C + 3] / 255) - 1)
                )
              );
              CI[o.type](
                I,
                e,
                this.littleEndian,
                r
              );
            });
          i.push(() => {
            e += yt[o.type];
          });
        }
      for (let n = 0; n < B; n++) {
        for (const o of i)
          o();
        E && (C += 4);
      }
    }
  }
};
dt.defaultPointScale = 1e-3;
let Ee = dt;
const $t = 0.28209479177387814, Ae = {
  char: (t, A, e) => t.getInt8(A),
  uchar: (t, A, e) => t.getUint8(A),
  short: (t, A, e) => t.getInt16(A, e),
  ushort: (t, A, e) => t.getUint16(A, e),
  int: (t, A, e) => t.getInt32(A, e),
  uint: (t, A, e) => t.getUint32(A, e),
  float: (t, A, e) => t.getFloat32(A, e),
  double: (t, A, e) => t.getFloat64(A, e)
}, CI = {
  char: (t, A, e, I) => {
    t.setInt8(A, I);
  },
  uchar: (t, A, e, I) => {
    t.setUint8(A, I);
  },
  short: (t, A, e, I) => {
    t.setInt16(A, I, e);
  },
  ushort: (t, A, e, I) => {
    t.setUint16(A, I, e);
  },
  int: (t, A, e, I) => {
    t.setInt32(A, I, e);
  },
  uint: (t, A, e, I) => {
    t.setUint32(A, I, e);
  },
  float: (t, A, e, I) => {
    t.setFloat32(A, I, e);
  },
  double: (t, A, e, I) => {
    t.setFloat64(A, I, e);
  }
}, yt = {
  char: 1,
  uchar: 1,
  short: 2,
  ushort: 2,
  int: 4,
  uint: 4,
  float: 4,
  double: 8
}, te = {
  char: 127,
  uchar: 255,
  short: 32767,
  ushort: 65535,
  int: 2147483647,
  uint: 4294967295,
  float: 1,
  double: 1
}, Eo = {
  0: 0,
  9: 1,
  24: 2,
  45: 3
}, ao = {
  0: 0,
  1: 9,
  2: 24,
  3: 45
};
function EI(t) {
  let A = 0;
  for (; t[`f_rest_${A}`]; )
    A += 1;
  const e = Eo[A];
  if (e == null)
    throw new Error(`Unsupported number of SH coefficients: ${A}`);
  return e;
}
const YQ = '(function(){"use strict";let MA;const Qg=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&Qg.decode();let OA=null;function Vg(){return(OA===null||OA.byteLength===0)&&(OA=new Uint8Array(MA.memory.buffer)),OA}function Pg(B,A){return B=B>>>0,Qg.decode(Vg().subarray(B,B+A))}function Og(B,A,I){return MA.sort_splats(B,A,I)>>>0}function $g(B,A,I){return MA.sort32_splats(B,A,I)>>>0}async function AB(B,A){if(typeof Response=="function"&&B instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(B,A)}catch(g){if(B.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n",g);else throw g}const I=await B.arrayBuffer();return await WebAssembly.instantiate(I,A)}else{const I=await WebAssembly.instantiate(B,A);return I instanceof WebAssembly.Instance?{instance:I,module:B}:I}}function IB(){const B={};return B.wbg={},B.wbg.__wbg_buffer_609cc3eee51ed158=function(A){return A.buffer},B.wbg.__wbg_length_3b4f022188ae8db6=function(A){return A.length},B.wbg.__wbg_length_6ca527665d89694d=function(A){return A.length},B.wbg.__wbg_length_8cfd2c6409af88ad=function(A){return A.length},B.wbg.__wbg_new_9fee97a409b32b68=function(A){return new Uint16Array(A)},B.wbg.__wbg_new_e3b321dcfef89fc7=function(A){return new Uint32Array(A)},B.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(A,I,g){return new Float32Array(A,I>>>0,g>>>0)},B.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(A,I,g){return new Uint32Array(A,I>>>0,g>>>0)},B.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(A){return new Float32Array(A>>>0)},B.wbg.__wbg_set_10bad9bee0e9c58b=function(A,I,g){A.set(I,g>>>0)},B.wbg.__wbg_set_d23661d19148b229=function(A,I,g){A.set(I,g>>>0)},B.wbg.__wbg_set_f4f1f0daa30696fc=function(A,I,g){A.set(I,g>>>0)},B.wbg.__wbg_subarray_3aaeec89bb2544f0=function(A,I,g){return A.subarray(I>>>0,g>>>0)},B.wbg.__wbg_subarray_769e1e0f81bb259b=function(A,I,g){return A.subarray(I>>>0,g>>>0)},B.wbg.__wbindgen_init_externref_table=function(){const A=MA.__wbindgen_export_0,I=A.grow(4);A.set(0,void 0),A.set(I+0,void 0),A.set(I+1,null),A.set(I+2,!0),A.set(I+3,!1)},B.wbg.__wbindgen_memory=function(){return MA.memory},B.wbg.__wbindgen_throw=function(A,I){throw new Error(Pg(A,I))},B}function gB(B,A){return MA=B.exports,Cg.__wbindgen_wasm_module=A,OA=null,MA.__wbindgen_start(),MA}async function Cg(B){if(MA!==void 0)return MA;typeof B<"u"&&(Object.getPrototypeOf(B)===Object.prototype?{module_or_path:B}=B:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof B>"u"&&(B=new URL("data:application/wasm;base64,",self.location.href));const A=IB();(typeof B=="string"||typeof Request=="function"&&B instanceof Request||typeof URL=="function"&&B instanceof URL)&&(B=fetch(B));const{instance:I,module:g}=await AB(await B,A);return gB(I,g)}var Eg={},BB=function(B,A,I,g,Q){var C=new Worker(Eg[A]||(Eg[A]=URL.createObjectURL(new Blob([B+\';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})\'],{type:"text/javascript"}))));return C.onmessage=function(t){var E=t.data,i=E.$e$;if(i){var s=new Error(i[0]);s.code=i[1],s.stack=i[2],Q(s,null)}else Q(null,E)},C.postMessage(I,g),C},j=Uint8Array,mA=Uint16Array,tg=Int32Array,RI=new j([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),UI=new j([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),ig=new j([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),sg=function(B,A){for(var I=new mA(31),g=0;g<31;++g)I[g]=A+=1<<B[g-1];for(var Q=new tg(I[30]),g=1;g<30;++g)for(var C=I[g];C<I[g+1];++C)Q[C]=C-I[g]<<5|g;return{b:I,r:Q}},eg=sg(RI,2),JI=eg.b,QB=eg.r;JI[28]=258,QB[258]=28;for(var CB=sg(UI,0),ng=CB.b,iI=new mA(32768),_=0;_<32768;++_){var SA=(_&43690)>>1|(_&21845)<<1;SA=(SA&52428)>>2|(SA&13107)<<2,SA=(SA&61680)>>4|(SA&3855)<<4,iI[_]=((SA&65280)>>8|(SA&255)<<8)>>1}for(var bA=function(B,A,I){for(var g=B.length,Q=0,C=new mA(A);Q<g;++Q)B[Q]&&++C[B[Q]-1];var t=new mA(A);for(Q=1;Q<A;++Q)t[Q]=t[Q-1]+C[Q-1]<<1;var E;if(I){E=new mA(1<<A);var i=15-A;for(Q=0;Q<g;++Q)if(B[Q])for(var s=Q<<4|B[Q],n=A-B[Q],e=t[B[Q]-1]++<<n,a=e|(1<<n)-1;e<=a;++e)E[iI[e]>>i]=s}else for(E=new mA(g),Q=0;Q<g;++Q)B[Q]&&(E[Q]=iI[t[B[Q]-1]++]>>15-B[Q]);return E},$A=new j(288),_=0;_<144;++_)$A[_]=8;for(var _=144;_<256;++_)$A[_]=9;for(var _=256;_<280;++_)$A[_]=7;for(var _=280;_<288;++_)$A[_]=8;for(var og=new j(32),_=0;_<32;++_)og[_]=5;var ag=bA($A,9,1),rg=bA(og,5,1),sI=function(B){for(var A=B[0],I=1;I<B.length;++I)B[I]>A&&(A=B[I]);return A},oA=function(B,A,I){var g=A/8|0;return(B[g]|B[g+1]<<8)>>(A&7)&I},eI=function(B,A){var I=A/8|0;return(B[I]|B[I+1]<<8|B[I+2]<<16)>>(A&7)},YI=function(B){return(B+7)/8|0},kA=function(B,A,I){return(A==null||A<0)&&(A=0),(I==null||I>B.length)&&(I=B.length),new j(B.subarray(A,I))},hg=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],P=function(B,A,I){var g=new Error(A||hg[B]);if(g.code=B,Error.captureStackTrace&&Error.captureStackTrace(g,P),!I)throw g;return g},LI=function(B,A,I,g){var Q=B.length,C=g?g.length:0;if(!Q||A.f&&!A.l)return I||new j(0);var t=!I,E=t||A.i!=2,i=A.i;t&&(I=new j(Q*3));var s=function(EA){var iA=I.length;if(EA>iA){var sA=new j(Math.max(iA*2,EA));sA.set(I),I=sA}},n=A.f||0,e=A.p||0,a=A.b||0,o=A.l,r=A.d,c=A.m,l=A.n,h=Q*8;do{if(!o){n=oA(B,e,1);var D=oA(B,e+1,3);if(e+=3,D)if(D==1)o=ag,r=rg,c=9,l=5;else if(D==2){var R=oA(B,e,31)+257,d=oA(B,e+10,15)+4,u=R+oA(B,e+5,31)+1;e+=14;for(var F=new j(u),k=new j(19),N=0;N<d;++N)k[ig[N]]=oA(B,e+N*3,7);e+=d*3;for(var y=sI(k),U=(1<<y)-1,H=bA(k,y,1),N=0;N<u;){var K=H[oA(B,e,U)];e+=K&15;var w=K>>4;if(w<16)F[N++]=w;else{var L=0,z=0;for(w==16?(z=3+oA(B,e,3),e+=2,L=F[N-1]):w==17?(z=3+oA(B,e,7),e+=3):w==18&&(z=11+oA(B,e,127),e+=7);z--;)F[N++]=L}}var W=F.subarray(0,R),T=F.subarray(R);c=sI(W),l=sI(T),o=bA(W,c,1),r=bA(T,l,1)}else P(1);else{var w=YI(e)+4,M=B[w-4]|B[w-3]<<8,G=w+M;if(G>Q){i&&P(0);break}E&&s(a+M),I.set(B.subarray(w,G),a),A.b=a+=M,A.p=e=G*8,A.f=n;continue}if(e>h){i&&P(0);break}}E&&s(a+131072);for(var O=(1<<c)-1,V=(1<<l)-1,v=e;;v=e){var L=o[eI(B,e)&O],q=L>>4;if(e+=L&15,e>h){i&&P(0);break}if(L||P(2),q<256)I[a++]=q;else if(q==256){v=e,o=null;break}else{var b=q-254;if(q>264){var N=q-257,J=RI[N];b=oA(B,e,(1<<J)-1)+JI[N],e+=J}var Z=r[eI(B,e)&V],f=Z>>4;Z||P(3),e+=Z&15;var T=ng[f];if(f>3){var J=UI[f];T+=eI(B,e)&(1<<J)-1,e+=J}if(e>h){i&&P(0);break}E&&s(a+131072);var CA=a+b;if(a<T){var QA=C-T,nA=Math.min(T,CA);for(QA+a<0&&P(3);a<nA;++a)I[a]=g[QA+a]}for(;a<CA;++a)I[a]=I[a-T]}}A.l=o,A.p=v,A.b=a,A.f=n,o&&(n=1,A.m=c,A.d=r,A.n=l)}while(!n);return a!=I.length&&t?kA(I,0,a):I.subarray(0,a)},EB=new j(0),tB=function(B,A){var I={};for(var g in B)I[g]=B[g];for(var g in A)I[g]=A[g];return I},cg=function(B,A,I){for(var g=B(),Q=B.toString(),C=Q.slice(Q.indexOf("[")+1,Q.lastIndexOf("]")).replace(/\\s+/g,"").split(","),t=0;t<g.length;++t){var E=g[t],i=C[t];if(typeof E=="function"){A+=";"+i+"=";var s=E.toString();if(E.prototype)if(s.indexOf("[native code]")!=-1){var n=s.indexOf(" ",8)+1;A+=s.slice(n,s.indexOf("(",n))}else{A+=s;for(var e in E.prototype)A+=";"+i+".prototype."+e+"="+E.prototype[e].toString()}else A+=s}else I[i]=E}return A},nI=[],iB=function(B){var A=[];for(var I in B)B[I].buffer&&A.push((B[I]=new B[I].constructor(B[I])).buffer);return A},sB=function(B,A,I,g){if(!nI[I]){for(var Q="",C={},t=B.length-1,E=0;E<t;++E)Q=cg(B[E],Q,C);nI[I]={c:cg(B[t],Q,C),e:C}}var i=tB({},nI[I].e);return BB(nI[I].c+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+A.toString()+"}",I,i,iB(i),g)},eB=function(){return[j,mA,tg,RI,UI,ig,JI,ng,ag,rg,iI,hg,bA,sI,oA,eI,YI,kA,P,LI,oI,wg,Dg]},wg=function(B){return postMessage(B,[B.buffer])},Dg=function(B){return B&&{out:B.size&&new j(B.size),dictionary:B.dictionary}},nB=function(B,A,I,g,Q,C){var t=sB(I,g,Q,function(E,i){t.terminate(),C(E,i)});return t.postMessage([B,A],A.consume?[B.buffer]:[]),function(){t.terminate()}},cA=function(B,A){return B[A]|B[A+1]<<8},gA=function(B,A){return(B[A]|B[A+1]<<8|B[A+2]<<16|B[A+3]<<24)>>>0},xI=function(B,A){return gA(B,A)+gA(B,A+4)*4294967296},oB=function(B){(B[0]!=31||B[1]!=139||B[2]!=8)&&P(6,"invalid gzip data");var A=B[3],I=10;A&4&&(I+=(B[10]|B[11]<<8)+2);for(var g=(A>>3&1)+(A>>4&1);g>0;g-=!B[I++]);return I+(A&2)},mI=function(){function B(A,I){typeof A=="function"&&(I=A,A={}),this.ondata=I;var g=A&&A.dictionary&&A.dictionary.subarray(-32768);this.s={i:0,b:g?g.length:0},this.o=new j(32768),this.p=new j(0),g&&this.o.set(g)}return B.prototype.e=function(A){if(this.ondata||P(5),this.d&&P(4),!this.p.length)this.p=A;else if(A.length){var I=new j(this.p.length+A.length);I.set(this.p),I.set(A,this.p.length),this.p=I}},B.prototype.c=function(A){this.s.i=+(this.d=A||!1);var I=this.s.b,g=LI(this.p,this.s,this.o);this.ondata(kA(g,I,this.s.b),this.d),this.o=kA(g,this.s.b-32768),this.s.b=this.o.length,this.p=kA(this.p,this.s.p/8|0),this.s.p&=7},B.prototype.push=function(A,I){this.e(A),this.c(I)},B}();function aB(B,A,I){return I||(I=A,A={}),typeof I!="function"&&P(7),nB(B,A,[eB],function(g){return wg(oI(g.data[0],Dg(g.data[1])))},1,I)}function oI(B,A){return LI(B,{i:2},A&&A.out,A&&A.dictionary)}var yg=function(){function B(A,I){this.v=1,this.r=0,mI.call(this,A,I)}return B.prototype.push=function(A,I){if(mI.prototype.e.call(this,A),this.r+=A.length,this.v){var g=this.p.subarray(this.v-1),Q=g.length>3?oB(g):4;if(Q>g.length){if(!I)return}else this.v>1&&this.onmember&&this.onmember(this.r-g.length);this.p=g.subarray(Q),this.v=0}mI.prototype.c.call(this,I),this.s.f&&!this.s.l&&!I&&(this.v=YI(this.s.p)+9,this.s={i:0},this.o=new j(0),this.push(new j(0),I))},B}(),dI=typeof TextDecoder<"u"&&new TextDecoder;try{dI.decode(EB,{stream:!0})}catch{}var rB=function(B){for(var A="",I=0;;){var g=B[I++],Q=(g>127)+(g>223)+(g>239);if(I+Q>B.length)return{s:A,r:kA(B,I-1)};Q?Q==3?(g=((g&15)<<18|(B[I++]&63)<<12|(B[I++]&63)<<6|B[I++]&63)-65536,A+=String.fromCharCode(55296|g>>10,56320|g&1023)):Q&1?A+=String.fromCharCode((g&31)<<6|B[I++]&63):A+=String.fromCharCode((g&15)<<12|(B[I++]&63)<<6|B[I++]&63):A+=String.fromCharCode(g)}};function hB(B,A){if(A){for(var I="",g=0;g<B.length;g+=16384)I+=String.fromCharCode.apply(null,B.subarray(g,g+16384));return I}else{if(dI)return dI.decode(B);var Q=rB(B),C=Q.s,I=Q.r;return I.length&&P(8),C}}var Fg=function(B,A){return A+30+cA(B,A+26)+cA(B,A+28)},lg=function(B,A,I){var g=cA(B,A+28),Q=hB(B.subarray(A+46,A+46+g),!(cA(B,A+8)&2048)),C=A+46+g,t=gA(B,A+20),E=I&&t==4294967295?cB(B,C):[t,gA(B,A+24),gA(B,A+42)],i=E[0],s=E[1],n=E[2];return[cA(B,A+10),i,s,Q,C+cA(B,A+30)+cA(B,A+32),n]},cB=function(B,A){for(;cA(B,A)!=1;A+=4+cA(B,A+2));return[xI(B,A+12),xI(B,A+4),xI(B,A+20)]},Mg=typeof queueMicrotask=="function"?queueMicrotask:typeof setTimeout=="function"?setTimeout:function(B){B()};function wB(B,A,I){I||(I=A,A={}),typeof I!="function"&&P(7);var g=[],Q=function(){for(var l=0;l<g.length;++l)g[l]()},C={},t=function(l,h){Mg(function(){I(l,h)})};Mg(function(){t=I});for(var E=B.length-22;gA(B,E)!=101010256;--E)if(!E||B.length-E>65558)return t(P(13,0,1),null),Q;var i=cA(B,E+8);if(i){var s=i,n=gA(B,E+16),e=n==4294967295||s==65535;if(e){var a=gA(B,E-12);e=gA(B,a)==101075792,e&&(s=i=gA(B,a+32),n=gA(B,a+48))}for(var o=A&&A.filter,r=function(l){var h=lg(B,n,e),D=h[0],w=h[1],M=h[2],G=h[3],R=h[4],d=h[5],u=Fg(B,d);n=R;var F=function(N,y){N?(Q(),t(N,null)):(y&&(C[G]=y),--i||t(null,C))};if(!o||o({name:G,size:w,originalSize:M,compression:D}))if(!D)F(null,kA(B,u,u+w));else if(D==8){var k=B.subarray(u,u+w);if(M<524288||w>.8*M)try{F(null,oI(k,{out:new j(M)}))}catch(N){F(N,null)}else g.push(aB(k,{size:M},F))}else F(P(14,"unknown compression type "+D,1),null);else F(null,null)},c=0;c<s;++c)r(c)}else t(null,{});return Q}function DB(B,A){for(var I={},g=B.length-22;gA(B,g)!=101010256;--g)(!g||B.length-g>65558)&&P(13);var Q=cA(B,g+8);if(!Q)return{};var C=gA(B,g+16),t=C==4294967295||Q==65535;if(t){var E=gA(B,g-12);t=gA(B,E)==101075792,t&&(Q=gA(B,E+32),C=gA(B,E+48))}for(var i=A&&A.filter,s=0;s<Q;++s){var n=lg(B,C,t),e=n[0],a=n[1],o=n[2],r=n[3],c=n[4],l=n[5],h=Fg(B,l);C=c,(!i||i({name:r,size:a,originalSize:o,compression:e}))&&(e?e==8?I[r]=oI(B.subarray(h,h+a),{out:new j(o)}):P(14,"unknown compression type "+e):I[r]=kA(B,h,h+a))}return I}/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */const Ng="172",yB="",wA="srgb",ug="srgb-linear",Gg="linear",pI="srgb";function tA(B,A,I){return Math.max(A,Math.min(I,B))}function FB(B,A){return(B%A+A)%A}function HI(B,A,I){return(1-I)*B+I*A}class AI{constructor(A,I,g,Q,C,t,E,i,s){AI.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],A!==void 0&&this.set(A,I,g,Q,C,t,E,i,s)}set(A,I,g,Q,C,t,E,i,s){const n=this.elements;return n[0]=A,n[1]=Q,n[2]=E,n[3]=I,n[4]=C,n[5]=i,n[6]=g,n[7]=t,n[8]=s,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(A){const I=this.elements,g=A.elements;return I[0]=g[0],I[1]=g[1],I[2]=g[2],I[3]=g[3],I[4]=g[4],I[5]=g[5],I[6]=g[6],I[7]=g[7],I[8]=g[8],this}extractBasis(A,I,g){return A.setFromMatrix3Column(this,0),I.setFromMatrix3Column(this,1),g.setFromMatrix3Column(this,2),this}setFromMatrix4(A){const I=A.elements;return this.set(I[0],I[4],I[8],I[1],I[5],I[9],I[2],I[6],I[10]),this}multiply(A){return this.multiplyMatrices(this,A)}premultiply(A){return this.multiplyMatrices(A,this)}multiplyMatrices(A,I){const g=A.elements,Q=I.elements,C=this.elements,t=g[0],E=g[3],i=g[6],s=g[1],n=g[4],e=g[7],a=g[2],o=g[5],r=g[8],c=Q[0],l=Q[3],h=Q[6],D=Q[1],w=Q[4],M=Q[7],G=Q[2],R=Q[5],d=Q[8];return C[0]=t*c+E*D+i*G,C[3]=t*l+E*w+i*R,C[6]=t*h+E*M+i*d,C[1]=s*c+n*D+e*G,C[4]=s*l+n*w+e*R,C[7]=s*h+n*M+e*d,C[2]=a*c+o*D+r*G,C[5]=a*l+o*w+r*R,C[8]=a*h+o*M+r*d,this}multiplyScalar(A){const I=this.elements;return I[0]*=A,I[3]*=A,I[6]*=A,I[1]*=A,I[4]*=A,I[7]*=A,I[2]*=A,I[5]*=A,I[8]*=A,this}determinant(){const A=this.elements,I=A[0],g=A[1],Q=A[2],C=A[3],t=A[4],E=A[5],i=A[6],s=A[7],n=A[8];return I*t*n-I*E*s-g*C*n+g*E*i+Q*C*s-Q*t*i}invert(){const A=this.elements,I=A[0],g=A[1],Q=A[2],C=A[3],t=A[4],E=A[5],i=A[6],s=A[7],n=A[8],e=n*t-E*s,a=E*i-n*C,o=s*C-t*i,r=I*e+g*a+Q*o;if(r===0)return this.set(0,0,0,0,0,0,0,0,0);const c=1/r;return A[0]=e*c,A[1]=(Q*s-n*g)*c,A[2]=(E*g-Q*t)*c,A[3]=a*c,A[4]=(n*I-Q*i)*c,A[5]=(Q*C-E*I)*c,A[6]=o*c,A[7]=(g*i-s*I)*c,A[8]=(t*I-g*C)*c,this}transpose(){let A;const I=this.elements;return A=I[1],I[1]=I[3],I[3]=A,A=I[2],I[2]=I[6],I[6]=A,A=I[5],I[5]=I[7],I[7]=A,this}getNormalMatrix(A){return this.setFromMatrix4(A).invert().transpose()}transposeIntoArray(A){const I=this.elements;return A[0]=I[0],A[1]=I[3],A[2]=I[6],A[3]=I[1],A[4]=I[4],A[5]=I[7],A[6]=I[2],A[7]=I[5],A[8]=I[8],this}setUvTransform(A,I,g,Q,C,t,E){const i=Math.cos(C),s=Math.sin(C);return this.set(g*i,g*s,-g*(i*t+s*E)+t+A,-Q*s,Q*i,-Q*(-s*t+i*E)+E+I,0,0,1),this}scale(A,I){return this.premultiply(KI.makeScale(A,I)),this}rotate(A){return this.premultiply(KI.makeRotation(-A)),this}translate(A,I){return this.premultiply(KI.makeTranslation(A,I)),this}makeTranslation(A,I){return A.isVector2?this.set(1,0,A.x,0,1,A.y,0,0,1):this.set(1,0,A,0,1,I,0,0,1),this}makeRotation(A){const I=Math.cos(A),g=Math.sin(A);return this.set(I,-g,0,g,I,0,0,0,1),this}makeScale(A,I){return this.set(A,0,0,0,I,0,0,0,1),this}equals(A){const I=this.elements,g=A.elements;for(let Q=0;Q<9;Q++)if(I[Q]!==g[Q])return!1;return!0}fromArray(A,I=0){for(let g=0;g<9;g++)this.elements[g]=A[g+I];return this}toArray(A=[],I=0){const g=this.elements;return A[I]=g[0],A[I+1]=g[1],A[I+2]=g[2],A[I+3]=g[3],A[I+4]=g[4],A[I+5]=g[5],A[I+6]=g[6],A[I+7]=g[7],A[I+8]=g[8],A}clone(){return new this.constructor().fromArray(this.elements)}}const KI=new AI,fg=new AI().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Sg=new AI().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function lB(){const B={enabled:!0,workingColorSpace:ug,spaces:{},convert:function(Q,C,t){return this.enabled===!1||C===t||!C||!t||(this.spaces[C].transfer===pI&&(Q.r=qA(Q.r),Q.g=qA(Q.g),Q.b=qA(Q.b)),this.spaces[C].primaries!==this.spaces[t].primaries&&(Q.applyMatrix3(this.spaces[C].toXYZ),Q.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===pI&&(Q.r=zA(Q.r),Q.g=zA(Q.g),Q.b=zA(Q.b))),Q},fromWorkingColorSpace:function(Q,C){return this.convert(Q,this.workingColorSpace,C)},toWorkingColorSpace:function(Q,C){return this.convert(Q,C,this.workingColorSpace)},getPrimaries:function(Q){return this.spaces[Q].primaries},getTransfer:function(Q){return Q===yB?Gg:this.spaces[Q].transfer},getLuminanceCoefficients:function(Q,C=this.workingColorSpace){return Q.fromArray(this.spaces[C].luminanceCoefficients)},define:function(Q){Object.assign(this.spaces,Q)},_getMatrix:function(Q,C,t){return Q.copy(this.spaces[C].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(Q){return this.spaces[Q].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(Q=this.workingColorSpace){return this.spaces[Q].workingColorSpaceConfig.unpackColorSpace}},A=[.64,.33,.3,.6,.15,.06],I=[.2126,.7152,.0722],g=[.3127,.329];return B.define({[ug]:{primaries:A,whitePoint:g,transfer:Gg,toXYZ:fg,fromXYZ:Sg,luminanceCoefficients:I,workingColorSpaceConfig:{unpackColorSpace:wA},outputColorSpaceConfig:{drawingBufferColorSpace:wA}},[wA]:{primaries:A,whitePoint:g,transfer:pI,toXYZ:fg,fromXYZ:Sg,luminanceCoefficients:I,outputColorSpaceConfig:{drawingBufferColorSpace:wA}}}),B}const DA=lB();function qA(B){return B<.04045?B*.0773993808:Math.pow(B*.9478672986+.0521327014,2.4)}function zA(B){return B<.0031308?B*12.92:1.055*Math.pow(B,.41666)-.055}class RA{constructor(A=0,I=0,g=0,Q=1){this.isQuaternion=!0,this._x=A,this._y=I,this._z=g,this._w=Q}static slerpFlat(A,I,g,Q,C,t,E){let i=g[Q+0],s=g[Q+1],n=g[Q+2],e=g[Q+3];const a=C[t+0],o=C[t+1],r=C[t+2],c=C[t+3];if(E===0){A[I+0]=i,A[I+1]=s,A[I+2]=n,A[I+3]=e;return}if(E===1){A[I+0]=a,A[I+1]=o,A[I+2]=r,A[I+3]=c;return}if(e!==c||i!==a||s!==o||n!==r){let l=1-E;const h=i*a+s*o+n*r+e*c,D=h>=0?1:-1,w=1-h*h;if(w>Number.EPSILON){const G=Math.sqrt(w),R=Math.atan2(G,h*D);l=Math.sin(l*R)/G,E=Math.sin(E*R)/G}const M=E*D;if(i=i*l+a*M,s=s*l+o*M,n=n*l+r*M,e=e*l+c*M,l===1-E){const G=1/Math.sqrt(i*i+s*s+n*n+e*e);i*=G,s*=G,n*=G,e*=G}}A[I]=i,A[I+1]=s,A[I+2]=n,A[I+3]=e}static multiplyQuaternionsFlat(A,I,g,Q,C,t){const E=g[Q],i=g[Q+1],s=g[Q+2],n=g[Q+3],e=C[t],a=C[t+1],o=C[t+2],r=C[t+3];return A[I]=E*r+n*e+i*o-s*a,A[I+1]=i*r+n*a+s*e-E*o,A[I+2]=s*r+n*o+E*a-i*e,A[I+3]=n*r-E*e-i*a-s*o,A}get x(){return this._x}set x(A){this._x=A,this._onChangeCallback()}get y(){return this._y}set y(A){this._y=A,this._onChangeCallback()}get z(){return this._z}set z(A){this._z=A,this._onChangeCallback()}get w(){return this._w}set w(A){this._w=A,this._onChangeCallback()}set(A,I,g,Q){return this._x=A,this._y=I,this._z=g,this._w=Q,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(A){return this._x=A.x,this._y=A.y,this._z=A.z,this._w=A.w,this._onChangeCallback(),this}setFromEuler(A,I=!0){const g=A._x,Q=A._y,C=A._z,t=A._order,E=Math.cos,i=Math.sin,s=E(g/2),n=E(Q/2),e=E(C/2),a=i(g/2),o=i(Q/2),r=i(C/2);switch(t){case"XYZ":this._x=a*n*e+s*o*r,this._y=s*o*e-a*n*r,this._z=s*n*r+a*o*e,this._w=s*n*e-a*o*r;break;case"YXZ":this._x=a*n*e+s*o*r,this._y=s*o*e-a*n*r,this._z=s*n*r-a*o*e,this._w=s*n*e+a*o*r;break;case"ZXY":this._x=a*n*e-s*o*r,this._y=s*o*e+a*n*r,this._z=s*n*r+a*o*e,this._w=s*n*e-a*o*r;break;case"ZYX":this._x=a*n*e-s*o*r,this._y=s*o*e+a*n*r,this._z=s*n*r-a*o*e,this._w=s*n*e+a*o*r;break;case"YZX":this._x=a*n*e+s*o*r,this._y=s*o*e+a*n*r,this._z=s*n*r-a*o*e,this._w=s*n*e-a*o*r;break;case"XZY":this._x=a*n*e-s*o*r,this._y=s*o*e-a*n*r,this._z=s*n*r+a*o*e,this._w=s*n*e+a*o*r;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+t)}return I===!0&&this._onChangeCallback(),this}setFromAxisAngle(A,I){const g=I/2,Q=Math.sin(g);return this._x=A.x*Q,this._y=A.y*Q,this._z=A.z*Q,this._w=Math.cos(g),this._onChangeCallback(),this}setFromRotationMatrix(A){const I=A.elements,g=I[0],Q=I[4],C=I[8],t=I[1],E=I[5],i=I[9],s=I[2],n=I[6],e=I[10],a=g+E+e;if(a>0){const o=.5/Math.sqrt(a+1);this._w=.25/o,this._x=(n-i)*o,this._y=(C-s)*o,this._z=(t-Q)*o}else if(g>E&&g>e){const o=2*Math.sqrt(1+g-E-e);this._w=(n-i)/o,this._x=.25*o,this._y=(Q+t)/o,this._z=(C+s)/o}else if(E>e){const o=2*Math.sqrt(1+E-g-e);this._w=(C-s)/o,this._x=(Q+t)/o,this._y=.25*o,this._z=(i+n)/o}else{const o=2*Math.sqrt(1+e-g-E);this._w=(t-Q)/o,this._x=(C+s)/o,this._y=(i+n)/o,this._z=.25*o}return this._onChangeCallback(),this}setFromUnitVectors(A,I){let g=A.dot(I)+1;return g<Number.EPSILON?(g=0,Math.abs(A.x)>Math.abs(A.z)?(this._x=-A.y,this._y=A.x,this._z=0,this._w=g):(this._x=0,this._y=-A.z,this._z=A.y,this._w=g)):(this._x=A.y*I.z-A.z*I.y,this._y=A.z*I.x-A.x*I.z,this._z=A.x*I.y-A.y*I.x,this._w=g),this.normalize()}angleTo(A){return 2*Math.acos(Math.abs(tA(this.dot(A),-1,1)))}rotateTowards(A,I){const g=this.angleTo(A);if(g===0)return this;const Q=Math.min(1,I/g);return this.slerp(A,Q),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(A){return this._x*A._x+this._y*A._y+this._z*A._z+this._w*A._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let A=this.length();return A===0?(this._x=0,this._y=0,this._z=0,this._w=1):(A=1/A,this._x=this._x*A,this._y=this._y*A,this._z=this._z*A,this._w=this._w*A),this._onChangeCallback(),this}multiply(A){return this.multiplyQuaternions(this,A)}premultiply(A){return this.multiplyQuaternions(A,this)}multiplyQuaternions(A,I){const g=A._x,Q=A._y,C=A._z,t=A._w,E=I._x,i=I._y,s=I._z,n=I._w;return this._x=g*n+t*E+Q*s-C*i,this._y=Q*n+t*i+C*E-g*s,this._z=C*n+t*s+g*i-Q*E,this._w=t*n-g*E-Q*i-C*s,this._onChangeCallback(),this}slerp(A,I){if(I===0)return this;if(I===1)return this.copy(A);const g=this._x,Q=this._y,C=this._z,t=this._w;let E=t*A._w+g*A._x+Q*A._y+C*A._z;if(E<0?(this._w=-A._w,this._x=-A._x,this._y=-A._y,this._z=-A._z,E=-E):this.copy(A),E>=1)return this._w=t,this._x=g,this._y=Q,this._z=C,this;const i=1-E*E;if(i<=Number.EPSILON){const o=1-I;return this._w=o*t+I*this._w,this._x=o*g+I*this._x,this._y=o*Q+I*this._y,this._z=o*C+I*this._z,this.normalize(),this}const s=Math.sqrt(i),n=Math.atan2(s,E),e=Math.sin((1-I)*n)/s,a=Math.sin(I*n)/s;return this._w=t*e+this._w*a,this._x=g*e+this._x*a,this._y=Q*e+this._y*a,this._z=C*e+this._z*a,this._onChangeCallback(),this}slerpQuaternions(A,I,g){return this.copy(A).slerp(I,g)}random(){const A=2*Math.PI*Math.random(),I=2*Math.PI*Math.random(),g=Math.random(),Q=Math.sqrt(1-g),C=Math.sqrt(g);return this.set(Q*Math.sin(A),Q*Math.cos(A),C*Math.sin(I),C*Math.cos(I))}equals(A){return A._x===this._x&&A._y===this._y&&A._z===this._z&&A._w===this._w}fromArray(A,I=0){return this._x=A[I],this._y=A[I+1],this._z=A[I+2],this._w=A[I+3],this._onChangeCallback(),this}toArray(A=[],I=0){return A[I]=this._x,A[I+1]=this._y,A[I+2]=this._z,A[I+3]=this._w,A}fromBufferAttribute(A,I){return this._x=A.getX(I),this._y=A.getY(I),this._z=A.getZ(I),this._w=A.getW(I),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(A){return this._onChangeCallback=A,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class S{constructor(A=0,I=0,g=0){S.prototype.isVector3=!0,this.x=A,this.y=I,this.z=g}set(A,I,g){return g===void 0&&(g=this.z),this.x=A,this.y=I,this.z=g,this}setScalar(A){return this.x=A,this.y=A,this.z=A,this}setX(A){return this.x=A,this}setY(A){return this.y=A,this}setZ(A){return this.z=A,this}setComponent(A,I){switch(A){case 0:this.x=I;break;case 1:this.y=I;break;case 2:this.z=I;break;default:throw new Error("index is out of range: "+A)}return this}getComponent(A){switch(A){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+A)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(A){return this.x=A.x,this.y=A.y,this.z=A.z,this}add(A){return this.x+=A.x,this.y+=A.y,this.z+=A.z,this}addScalar(A){return this.x+=A,this.y+=A,this.z+=A,this}addVectors(A,I){return this.x=A.x+I.x,this.y=A.y+I.y,this.z=A.z+I.z,this}addScaledVector(A,I){return this.x+=A.x*I,this.y+=A.y*I,this.z+=A.z*I,this}sub(A){return this.x-=A.x,this.y-=A.y,this.z-=A.z,this}subScalar(A){return this.x-=A,this.y-=A,this.z-=A,this}subVectors(A,I){return this.x=A.x-I.x,this.y=A.y-I.y,this.z=A.z-I.z,this}multiply(A){return this.x*=A.x,this.y*=A.y,this.z*=A.z,this}multiplyScalar(A){return this.x*=A,this.y*=A,this.z*=A,this}multiplyVectors(A,I){return this.x=A.x*I.x,this.y=A.y*I.y,this.z=A.z*I.z,this}applyEuler(A){return this.applyQuaternion(kg.setFromEuler(A))}applyAxisAngle(A,I){return this.applyQuaternion(kg.setFromAxisAngle(A,I))}applyMatrix3(A){const I=this.x,g=this.y,Q=this.z,C=A.elements;return this.x=C[0]*I+C[3]*g+C[6]*Q,this.y=C[1]*I+C[4]*g+C[7]*Q,this.z=C[2]*I+C[5]*g+C[8]*Q,this}applyNormalMatrix(A){return this.applyMatrix3(A).normalize()}applyMatrix4(A){const I=this.x,g=this.y,Q=this.z,C=A.elements,t=1/(C[3]*I+C[7]*g+C[11]*Q+C[15]);return this.x=(C[0]*I+C[4]*g+C[8]*Q+C[12])*t,this.y=(C[1]*I+C[5]*g+C[9]*Q+C[13])*t,this.z=(C[2]*I+C[6]*g+C[10]*Q+C[14])*t,this}applyQuaternion(A){const I=this.x,g=this.y,Q=this.z,C=A.x,t=A.y,E=A.z,i=A.w,s=2*(t*Q-E*g),n=2*(E*I-C*Q),e=2*(C*g-t*I);return this.x=I+i*s+t*e-E*n,this.y=g+i*n+E*s-C*e,this.z=Q+i*e+C*n-t*s,this}project(A){return this.applyMatrix4(A.matrixWorldInverse).applyMatrix4(A.projectionMatrix)}unproject(A){return this.applyMatrix4(A.projectionMatrixInverse).applyMatrix4(A.matrixWorld)}transformDirection(A){const I=this.x,g=this.y,Q=this.z,C=A.elements;return this.x=C[0]*I+C[4]*g+C[8]*Q,this.y=C[1]*I+C[5]*g+C[9]*Q,this.z=C[2]*I+C[6]*g+C[10]*Q,this.normalize()}divide(A){return this.x/=A.x,this.y/=A.y,this.z/=A.z,this}divideScalar(A){return this.multiplyScalar(1/A)}min(A){return this.x=Math.min(this.x,A.x),this.y=Math.min(this.y,A.y),this.z=Math.min(this.z,A.z),this}max(A){return this.x=Math.max(this.x,A.x),this.y=Math.max(this.y,A.y),this.z=Math.max(this.z,A.z),this}clamp(A,I){return this.x=tA(this.x,A.x,I.x),this.y=tA(this.y,A.y,I.y),this.z=tA(this.z,A.z,I.z),this}clampScalar(A,I){return this.x=tA(this.x,A,I),this.y=tA(this.y,A,I),this.z=tA(this.z,A,I),this}clampLength(A,I){const g=this.length();return this.divideScalar(g||1).multiplyScalar(tA(g,A,I))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(A){return this.x*A.x+this.y*A.y+this.z*A.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(A){return this.normalize().multiplyScalar(A)}lerp(A,I){return this.x+=(A.x-this.x)*I,this.y+=(A.y-this.y)*I,this.z+=(A.z-this.z)*I,this}lerpVectors(A,I,g){return this.x=A.x+(I.x-A.x)*g,this.y=A.y+(I.y-A.y)*g,this.z=A.z+(I.z-A.z)*g,this}cross(A){return this.crossVectors(this,A)}crossVectors(A,I){const g=A.x,Q=A.y,C=A.z,t=I.x,E=I.y,i=I.z;return this.x=Q*i-C*E,this.y=C*t-g*i,this.z=g*E-Q*t,this}projectOnVector(A){const I=A.lengthSq();if(I===0)return this.set(0,0,0);const g=A.dot(this)/I;return this.copy(A).multiplyScalar(g)}projectOnPlane(A){return bI.copy(this).projectOnVector(A),this.sub(bI)}reflect(A){return this.sub(bI.copy(A).multiplyScalar(2*this.dot(A)))}angleTo(A){const I=Math.sqrt(this.lengthSq()*A.lengthSq());if(I===0)return Math.PI/2;const g=this.dot(A)/I;return Math.acos(tA(g,-1,1))}distanceTo(A){return Math.sqrt(this.distanceToSquared(A))}distanceToSquared(A){const I=this.x-A.x,g=this.y-A.y,Q=this.z-A.z;return I*I+g*g+Q*Q}manhattanDistanceTo(A){return Math.abs(this.x-A.x)+Math.abs(this.y-A.y)+Math.abs(this.z-A.z)}setFromSpherical(A){return this.setFromSphericalCoords(A.radius,A.phi,A.theta)}setFromSphericalCoords(A,I,g){const Q=Math.sin(I)*A;return this.x=Q*Math.sin(g),this.y=Math.cos(I)*A,this.z=Q*Math.cos(g),this}setFromCylindrical(A){return this.setFromCylindricalCoords(A.radius,A.theta,A.y)}setFromCylindricalCoords(A,I,g){return this.x=A*Math.sin(I),this.y=g,this.z=A*Math.cos(I),this}setFromMatrixPosition(A){const I=A.elements;return this.x=I[12],this.y=I[13],this.z=I[14],this}setFromMatrixScale(A){const I=this.setFromMatrixColumn(A,0).length(),g=this.setFromMatrixColumn(A,1).length(),Q=this.setFromMatrixColumn(A,2).length();return this.x=I,this.y=g,this.z=Q,this}setFromMatrixColumn(A,I){return this.fromArray(A.elements,I*4)}setFromMatrix3Column(A,I){return this.fromArray(A.elements,I*3)}setFromEuler(A){return this.x=A._x,this.y=A._y,this.z=A._z,this}setFromColor(A){return this.x=A.r,this.y=A.g,this.z=A.b,this}equals(A){return A.x===this.x&&A.y===this.y&&A.z===this.z}fromArray(A,I=0){return this.x=A[I],this.y=A[I+1],this.z=A[I+2],this}toArray(A=[],I=0){return A[I]=this.x,A[I+1]=this.y,A[I+2]=this.z,A}fromBufferAttribute(A,I){return this.x=A.getX(I),this.y=A.getY(I),this.z=A.getZ(I),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const A=Math.random()*Math.PI*2,I=Math.random()*2-1,g=Math.sqrt(1-I*I);return this.x=g*Math.cos(A),this.y=I,this.z=g*Math.sin(A),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const bI=new S,kg=new RA;class Rg{constructor(A=new S(1/0,1/0,1/0),I=new S(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=A,this.max=I}set(A,I){return this.min.copy(A),this.max.copy(I),this}setFromArray(A){this.makeEmpty();for(let I=0,g=A.length;I<g;I+=3)this.expandByPoint(yA.fromArray(A,I));return this}setFromBufferAttribute(A){this.makeEmpty();for(let I=0,g=A.count;I<g;I++)this.expandByPoint(yA.fromBufferAttribute(A,I));return this}setFromPoints(A){this.makeEmpty();for(let I=0,g=A.length;I<g;I++)this.expandByPoint(A[I]);return this}setFromCenterAndSize(A,I){const g=yA.copy(I).multiplyScalar(.5);return this.min.copy(A).sub(g),this.max.copy(A).add(g),this}setFromObject(A,I=!1){return this.makeEmpty(),this.expandByObject(A,I)}clone(){return new this.constructor().copy(this)}copy(A){return this.min.copy(A.min),this.max.copy(A.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(A){return this.isEmpty()?A.set(0,0,0):A.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(A){return this.isEmpty()?A.set(0,0,0):A.subVectors(this.max,this.min)}expandByPoint(A){return this.min.min(A),this.max.max(A),this}expandByVector(A){return this.min.sub(A),this.max.add(A),this}expandByScalar(A){return this.min.addScalar(-A),this.max.addScalar(A),this}expandByObject(A,I=!1){A.updateWorldMatrix(!1,!1);const g=A.geometry;if(g!==void 0){const C=g.getAttribute("position");if(I===!0&&C!==void 0&&A.isInstancedMesh!==!0)for(let t=0,E=C.count;t<E;t++)A.isMesh===!0?A.getVertexPosition(t,yA):yA.fromBufferAttribute(C,t),yA.applyMatrix4(A.matrixWorld),this.expandByPoint(yA);else A.boundingBox!==void 0?(A.boundingBox===null&&A.computeBoundingBox(),aI.copy(A.boundingBox)):(g.boundingBox===null&&g.computeBoundingBox(),aI.copy(g.boundingBox)),aI.applyMatrix4(A.matrixWorld),this.union(aI)}const Q=A.children;for(let C=0,t=Q.length;C<t;C++)this.expandByObject(Q[C],I);return this}containsPoint(A){return A.x>=this.min.x&&A.x<=this.max.x&&A.y>=this.min.y&&A.y<=this.max.y&&A.z>=this.min.z&&A.z<=this.max.z}containsBox(A){return this.min.x<=A.min.x&&A.max.x<=this.max.x&&this.min.y<=A.min.y&&A.max.y<=this.max.y&&this.min.z<=A.min.z&&A.max.z<=this.max.z}getParameter(A,I){return I.set((A.x-this.min.x)/(this.max.x-this.min.x),(A.y-this.min.y)/(this.max.y-this.min.y),(A.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(A){return A.max.x>=this.min.x&&A.min.x<=this.max.x&&A.max.y>=this.min.y&&A.min.y<=this.max.y&&A.max.z>=this.min.z&&A.min.z<=this.max.z}intersectsSphere(A){return this.clampPoint(A.center,yA),yA.distanceToSquared(A.center)<=A.radius*A.radius}intersectsPlane(A){let I,g;return A.normal.x>0?(I=A.normal.x*this.min.x,g=A.normal.x*this.max.x):(I=A.normal.x*this.max.x,g=A.normal.x*this.min.x),A.normal.y>0?(I+=A.normal.y*this.min.y,g+=A.normal.y*this.max.y):(I+=A.normal.y*this.max.y,g+=A.normal.y*this.min.y),A.normal.z>0?(I+=A.normal.z*this.min.z,g+=A.normal.z*this.max.z):(I+=A.normal.z*this.max.z,g+=A.normal.z*this.min.z),I<=-A.constant&&g>=-A.constant}intersectsTriangle(A){if(this.isEmpty())return!1;this.getCenter(II),rI.subVectors(this.max,II),ZA.subVectors(A.a,II),TA.subVectors(A.b,II),_A.subVectors(A.c,II),UA.subVectors(TA,ZA),JA.subVectors(_A,TA),dA.subVectors(ZA,_A);let I=[0,-UA.z,UA.y,0,-JA.z,JA.y,0,-dA.z,dA.y,UA.z,0,-UA.x,JA.z,0,-JA.x,dA.z,0,-dA.x,-UA.y,UA.x,0,-JA.y,JA.x,0,-dA.y,dA.x,0];return!qI(I,ZA,TA,_A,rI)||(I=[1,0,0,0,1,0,0,0,1],!qI(I,ZA,TA,_A,rI))?!1:(hI.crossVectors(UA,JA),I=[hI.x,hI.y,hI.z],qI(I,ZA,TA,_A,rI))}clampPoint(A,I){return I.copy(A).clamp(this.min,this.max)}distanceToPoint(A){return this.clampPoint(A,yA).distanceTo(A)}getBoundingSphere(A){return this.isEmpty()?A.makeEmpty():(this.getCenter(A.center),A.radius=this.getSize(yA).length()*.5),A}intersect(A){return this.min.max(A.min),this.max.min(A.max),this.isEmpty()&&this.makeEmpty(),this}union(A){return this.min.min(A.min),this.max.max(A.max),this}applyMatrix4(A){return this.isEmpty()?this:(GA[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(A),GA[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(A),GA[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(A),GA[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(A),GA[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(A),GA[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(A),GA[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(A),GA[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(A),this.setFromPoints(GA),this)}translate(A){return this.min.add(A),this.max.add(A),this}equals(A){return A.min.equals(this.min)&&A.max.equals(this.max)}}const GA=[new S,new S,new S,new S,new S,new S,new S,new S],yA=new S,aI=new Rg,ZA=new S,TA=new S,_A=new S,UA=new S,JA=new S,dA=new S,II=new S,rI=new S,hI=new S,pA=new S;function qI(B,A,I,g,Q){for(let C=0,t=B.length-3;C<=t;C+=3){pA.fromArray(B,C);const E=Q.x*Math.abs(pA.x)+Q.y*Math.abs(pA.y)+Q.z*Math.abs(pA.z),i=A.dot(pA),s=I.dot(pA),n=g.dot(pA);if(Math.max(-Math.max(i,s,n),Math.min(i,s,n))>E)return!1}return!0}const Ug={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},YA={h:0,s:0,l:0},cI={h:0,s:0,l:0};function zI(B,A,I){return I<0&&(I+=1),I>1&&(I-=1),I<1/6?B+(A-B)*6*I:I<1/2?A:I<2/3?B+(A-B)*6*(2/3-I):B}class ZI{constructor(A,I,g){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(A,I,g)}set(A,I,g){if(I===void 0&&g===void 0){const Q=A;Q&&Q.isColor?this.copy(Q):typeof Q=="number"?this.setHex(Q):typeof Q=="string"&&this.setStyle(Q)}else this.setRGB(A,I,g);return this}setScalar(A){return this.r=A,this.g=A,this.b=A,this}setHex(A,I=wA){return A=Math.floor(A),this.r=(A>>16&255)/255,this.g=(A>>8&255)/255,this.b=(A&255)/255,DA.toWorkingColorSpace(this,I),this}setRGB(A,I,g,Q=DA.workingColorSpace){return this.r=A,this.g=I,this.b=g,DA.toWorkingColorSpace(this,Q),this}setHSL(A,I,g,Q=DA.workingColorSpace){if(A=FB(A,1),I=tA(I,0,1),g=tA(g,0,1),I===0)this.r=this.g=this.b=g;else{const C=g<=.5?g*(1+I):g+I-g*I,t=2*g-C;this.r=zI(t,C,A+1/3),this.g=zI(t,C,A),this.b=zI(t,C,A-1/3)}return DA.toWorkingColorSpace(this,Q),this}setStyle(A,I=wA){function g(C){C!==void 0&&parseFloat(C)<1&&console.warn("THREE.Color: Alpha component of "+A+" will be ignored.")}let Q;if(Q=/^(\\w+)\\(([^\\)]*)\\)/.exec(A)){let C;const t=Q[1],E=Q[2];switch(t){case"rgb":case"rgba":if(C=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(E))return g(C[4]),this.setRGB(Math.min(255,parseInt(C[1],10))/255,Math.min(255,parseInt(C[2],10))/255,Math.min(255,parseInt(C[3],10))/255,I);if(C=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(E))return g(C[4]),this.setRGB(Math.min(100,parseInt(C[1],10))/100,Math.min(100,parseInt(C[2],10))/100,Math.min(100,parseInt(C[3],10))/100,I);break;case"hsl":case"hsla":if(C=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(E))return g(C[4]),this.setHSL(parseFloat(C[1])/360,parseFloat(C[2])/100,parseFloat(C[3])/100,I);break;default:console.warn("THREE.Color: Unknown color model "+A)}}else if(Q=/^\\#([A-Fa-f\\d]+)$/.exec(A)){const C=Q[1],t=C.length;if(t===3)return this.setRGB(parseInt(C.charAt(0),16)/15,parseInt(C.charAt(1),16)/15,parseInt(C.charAt(2),16)/15,I);if(t===6)return this.setHex(parseInt(C,16),I);console.warn("THREE.Color: Invalid hex color "+A)}else if(A&&A.length>0)return this.setColorName(A,I);return this}setColorName(A,I=wA){const g=Ug[A.toLowerCase()];return g!==void 0?this.setHex(g,I):console.warn("THREE.Color: Unknown color "+A),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(A){return this.r=A.r,this.g=A.g,this.b=A.b,this}copySRGBToLinear(A){return this.r=qA(A.r),this.g=qA(A.g),this.b=qA(A.b),this}copyLinearToSRGB(A){return this.r=zA(A.r),this.g=zA(A.g),this.b=zA(A.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(A=wA){return DA.fromWorkingColorSpace(BA.copy(this),A),Math.round(tA(BA.r*255,0,255))*65536+Math.round(tA(BA.g*255,0,255))*256+Math.round(tA(BA.b*255,0,255))}getHexString(A=wA){return("000000"+this.getHex(A).toString(16)).slice(-6)}getHSL(A,I=DA.workingColorSpace){DA.fromWorkingColorSpace(BA.copy(this),I);const g=BA.r,Q=BA.g,C=BA.b,t=Math.max(g,Q,C),E=Math.min(g,Q,C);let i,s;const n=(E+t)/2;if(E===t)i=0,s=0;else{const e=t-E;switch(s=n<=.5?e/(t+E):e/(2-t-E),t){case g:i=(Q-C)/e+(Q<C?6:0);break;case Q:i=(C-g)/e+2;break;case C:i=(g-Q)/e+4;break}i/=6}return A.h=i,A.s=s,A.l=n,A}getRGB(A,I=DA.workingColorSpace){return DA.fromWorkingColorSpace(BA.copy(this),I),A.r=BA.r,A.g=BA.g,A.b=BA.b,A}getStyle(A=wA){DA.fromWorkingColorSpace(BA.copy(this),A);const I=BA.r,g=BA.g,Q=BA.b;return A!==wA?`color(${A} ${I.toFixed(3)} ${g.toFixed(3)} ${Q.toFixed(3)})`:`rgb(${Math.round(I*255)},${Math.round(g*255)},${Math.round(Q*255)})`}offsetHSL(A,I,g){return this.getHSL(YA),this.setHSL(YA.h+A,YA.s+I,YA.l+g)}add(A){return this.r+=A.r,this.g+=A.g,this.b+=A.b,this}addColors(A,I){return this.r=A.r+I.r,this.g=A.g+I.g,this.b=A.b+I.b,this}addScalar(A){return this.r+=A,this.g+=A,this.b+=A,this}sub(A){return this.r=Math.max(0,this.r-A.r),this.g=Math.max(0,this.g-A.g),this.b=Math.max(0,this.b-A.b),this}multiply(A){return this.r*=A.r,this.g*=A.g,this.b*=A.b,this}multiplyScalar(A){return this.r*=A,this.g*=A,this.b*=A,this}lerp(A,I){return this.r+=(A.r-this.r)*I,this.g+=(A.g-this.g)*I,this.b+=(A.b-this.b)*I,this}lerpColors(A,I,g){return this.r=A.r+(I.r-A.r)*g,this.g=A.g+(I.g-A.g)*g,this.b=A.b+(I.b-A.b)*g,this}lerpHSL(A,I){this.getHSL(YA),A.getHSL(cI);const g=HI(YA.h,cI.h,I),Q=HI(YA.s,cI.s,I),C=HI(YA.l,cI.l,I);return this.setHSL(g,Q,C),this}setFromVector3(A){return this.r=A.x,this.g=A.y,this.b=A.z,this}applyMatrix3(A){const I=this.r,g=this.g,Q=this.b,C=A.elements;return this.r=C[0]*I+C[3]*g+C[6]*Q,this.g=C[1]*I+C[4]*g+C[7]*Q,this.b=C[2]*I+C[5]*g+C[8]*Q,this}equals(A){return A.r===this.r&&A.g===this.g&&A.b===this.b}fromArray(A,I=0){return this.r=A[I],this.g=A[I+1],this.b=A[I+2],this}toArray(A=[],I=0){return A[I]=this.r,A[I+1]=this.g,A[I+2]=this.b,A}fromBufferAttribute(A,I){return this.r=A.getX(I),this.g=A.getY(I),this.b=A.getZ(I),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const BA=new ZI;ZI.NAMES=Ug,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ng}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ng);const HA=-12,vA=(9-HA)/254,XA=Math.exp(-30),MB=11,NB=11,Jg=1<<MB,Yg=1<<NB,Lg=1;function uB(B){var C;let A=!1;const I=B.split(`\n`).map(t=>{const E=t.trimEnd();return A?E:E.length>0?(A=!0,E):null}).filter(t=>t!=null);for(;I.length>0&&I[I.length-1].length===0;)I.pop();if(I.length===0)return[];const g=(C=I[0].match(/^\\s*/))==null?void 0:C[0];if(!g)return I;const Q=new RegExp(`^${g}`);return I.map(t=>t.replace(Q,""))}function GB(B){return uB(B).join(`\n`)}const TI=new Float32Array(1),xg=new Uint32Array(TI.buffer);function jA(B){TI[0]=B;const A=xg[0],I=A>>31&1,g=A>>23&255,Q=A&8388607,C=I<<15;if(g===255)return Q!==0?C|32767:C|31744;const t=g-127+15;if(t>=31)return C|31744;if(t<=0){if(t<-10)return C;const i=(Q|8388608)>>1-t+13;return C|i}const E=Q>>13;return C|t<<10|E}function $(B){const A=B>>15&1,I=B>>10&31,g=B&1023;let Q;if(I===0)if(g===0)Q=A<<31;else{let C=g,t=-14;for(;(C&1024)===0;)C<<=1,t--;C&=1023;const E=t+127,i=C<<13;Q=A<<31|E<<23|i}else if(I===31)g===0?Q=A<<31|2139095040:Q=A<<31|2143289344;else{const C=I-15+127,t=g<<13;Q=A<<31|C<<23|t}return xg[0]=Q,TI[0]}function aA(B){return Math.max(0,Math.min(255,Math.round(B*255)))}function fB(B){const A=[],I=new Set;function g(Q){Q&&typeof Q=="object"&&!I.has(Q)&&(I.add(Q),Q instanceof ArrayBuffer?A.push(Q):ArrayBuffer.isView(Q)?A.push(Q.buffer):Array.isArray(Q)?Q.forEach(g):Object.values(Q).forEach(g))}return g(B),A}function _I(B,A,I,g,Q,C,t,E,i,s,n,e,a,o,r,c){const l=aA(o),h=aA(r),D=aA(c),w=aA(a),M=Hg(new RA(i,s,n,e)),G=M&255,R=M>>>8&255,d=M>>>16&255,u=C<XA?0:Math.min(255,Math.max(1,Math.round((Math.log(C)-HA)/vA)+1)),F=t<XA?0:Math.min(255,Math.max(1,Math.round((Math.log(t)-HA)/vA)+1)),k=E<XA?0:Math.min(255,Math.max(1,Math.round((Math.log(E)-HA)/vA)+1)),N=jA(I),y=jA(g),U=jA(Q),H=A*4;B[H]=l|h<<8|D<<16|w<<24,B[H+1]=N|y<<16,B[H+2]=U|G<<16|R<<24,B[H+3]=u|F<<8|k<<16|d<<24}function mg(B,A,I,g,Q){const C=jA(I),t=jA(g),E=jA(Q),i=A*4;B[i+1]=C|t<<16,B[i+2]=E|B[i+2]&4294901760}function dg(B,A,I,g,Q){const C=I<XA?0:Math.min(255,Math.max(1,Math.round((Math.log(I)-HA)/vA)+1)),t=g<XA?0:Math.min(255,Math.max(1,Math.round((Math.log(g)-HA)/vA)+1)),E=Q<XA?0:Math.min(255,Math.max(1,Math.round((Math.log(Q)-HA)/vA)+1)),i=A*4;B[i+3]=C|t<<8|E<<16|B[i+3]&4278190080}function pg(B,A,I,g,Q,C){const t=Hg(new RA(I,g,Q,C)),E=t&255,i=t>>>8&255,s=t>>>16&255,n=A*4;B[n+2]=B[n+2]&65535|E<<16|i<<24,B[n+3]=B[n+3]&16777215|s<<24}function SB(B,A,I,g,Q,C){const t=aA(I),E=aA(g),i=aA(Q),s=aA(C),n=A*4;B[n]=t|E<<8|i<<16|s<<24}function kB(B,A,I,g,Q){const C=aA(I),t=aA(g),E=aA(Q),i=A*4;B[i]=C|t<<8|E<<16|B[i]&4278190080}function RB(B,A,I){const g=aA(I),Q=A*4;B[Q]=B[Q]&16777215|g<<24}new S,new S,new ZI;function UB(B){const A=Jg,I=Math.max(Lg,Math.min(Yg,Math.ceil(B/A))),g=Math.ceil(B/(A*I)),Q=A*I*g;return{width:A,height:I,depth:g,maxSplats:Q}}function wI(B){const A=Jg,I=Math.max(Lg,Math.min(Yg,Math.ceil(B/A))),g=Math.ceil(B/(A*I));return A*I*g}GB(`\n  precision highp float;\n\n  in vec3 position;\n\n  void main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n  }\n`);function Hg(B){const A=B.clone().normalize();A.w<0&&A.set(-A.x,-A.y,-A.z,-A.w);const I=2*Math.acos(A.w),g=Math.sqrt(A.x*A.x+A.y*A.y+A.z*A.z),Q=g<1e-6?new S(1,0,0):new S(A.x,A.y,A.z).divideScalar(g),C=Math.abs(Q.x)+Math.abs(Q.y)+Math.abs(Q.z);let t=Q.x/C,E=Q.y/C;if(Q.z<0){const o=t;t=(1-Math.abs(E))*(t>=0?1:-1),E=(1-Math.abs(o))*(E>=0?1:-1)}const i=t*.5+.5,s=E*.5+.5,n=Math.round(i*255),e=Math.round(s*255);return Math.round(I*(255/Math.PI))<<16|e<<8|n}function DI(B,A,I,g){const Q=Math.max(-127,Math.min(127,B*127)),C=Math.max(-127,Math.min(127,A*127)),t=Math.max(-127,Math.min(127,I*127)),E=Math.max(-127,Math.min(127,g*127));return Q&255|(C&255)<<8|(t&255)<<16|(E&255)<<24}function yI(B,A,I){const g=A*2;for(let Q=0;Q<9;++Q){const C=Math.max(-63,Math.min(63,I[Q]*63))&127,t=Q*7,E=t+7,i=Math.floor(t/32),s=t-i*32,n=C<<s&4294967295;if(B[g+i]|=n,E>i*32+32){const e=C>>>32-s&4294967295;B[g+i+1]|=e}}}function FI(B,A,I){B[A*4+0]=DI(I[0],I[1],I[2],I[3]),B[A*4+1]=DI(I[4],I[5],I[6],I[7]),B[A*4+2]=DI(I[8],I[9],I[10],I[11]),B[A*4+3]=DI(I[12],I[13],I[14],0)}function lI(B,A,I){const g=A*4;for(let Q=0;Q<21;++Q){const C=Math.max(-31,Math.min(31,I[Q]*31))&63,t=Q*6,E=t+6,i=Math.floor(t/32),s=t-i*32,n=C<<s&4294967295;if(B[g+i]|=n,E>i*32+32){const e=C>>>32-s&4294967295;B[g+i+1]|=e}}}function JB(B,A){const I=[];let g=0,Q=null;const C=new yg((i,s)=>{if(I.push(i),g+=i.length,s||g>=A){const n=new Uint8Array(g);let e=0;for(const a of I)n.set(a,e),e+=a.length;Q=n.slice(0,A)}}),t=1024;let E=0;for(;Q==null&&E<B.length;){const i=B.slice(E,E+t);C.push(i,!1),E+=t}if(Q==null&&(C.push(new Uint8Array,!0),Q==null))throw new Error("Failed to decompress partial gzip");return Q}class YB{constructor({fileBytes:A,chunkBytes:I=64*1024}){this.fileBytes=A,this.chunkBytes=I,this.offset=0,this.chunks=[],this.totalBytes=0,this.gunzip=new yg((g,Q)=>{this.chunks.push(g),this.totalBytes+=g.length})}read(A){for(;this.totalBytes<A&&this.offset<this.fileBytes.length;){const C=Math.min(this.offset+this.chunkBytes,this.fileBytes.length);this.gunzip.push(this.fileBytes.subarray(this.offset,C),!1),this.offset=C}if(this.totalBytes<A&&this.offset>=this.fileBytes.length&&this.gunzip.push(new Uint8Array(0),!0),this.totalBytes<A)throw new Error(`Unexpected EOF: needed ${A}, got ${this.totalBytes}`);const I=new Uint8Array(this.totalBytes);let g=0;for(const C of this.chunks)I.set(C,g),g+=C.length;const Q=I.subarray(0,A);return this.chunks=[I.subarray(A)],this.totalBytes-=A,Q}}function Kg(B,A,I){const g=Math.floor(B.length/32);if(g*32!==B.length)throw new Error("Invalid .splat file size");A(g);const Q=new Float32Array(B.buffer);for(let C=0;C<g;++C){const t=C*32,E=C*8,i=Q[E+0],s=Q[E+1],n=Q[E+2],e=Q[E+3],a=Q[E+4],o=Q[E+5],r=B[t+24]/255,c=B[t+25]/255,l=B[t+26]/255,h=B[t+27]/255,D=(B[t+28]-128)/128,w=(B[t+29]-128)/128,M=(B[t+30]-128)/128,G=(B[t+31]-128)/128;I(C,i,s,n,e,a,o,w,M,G,D,h,r,c,l)}}function LB(B){let A=0,I=0,g=new Uint32Array(0);return Kg(B,Q=>{A=Q,I=wI(A),g=new Uint32Array(I*4)},(Q,C,t,E,i,s,n,e,a,o,r,c,l,h,D)=>{_I(g,Q,C,t,E,i,s,n,e,a,o,r,c,l,h,D)}),{packedArray:g,numSplats:A}}const MI={0:{bytesPerCenter:12,bytesPerScale:12,bytesPerRotation:16,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:4,scaleOffsetBytes:12,rotationOffsetBytes:24,colorOffsetBytes:40,sphericalHarmonicsOffsetBytes:44,scaleRange:1},1:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:2,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767},2:{bytesPerCenter:6,bytesPerScale:6,bytesPerRotation:8,bytesPerColor:4,bytesPerSphericalHarmonicsComponent:1,scaleOffsetBytes:6,rotationOffsetBytes:12,colorOffsetBytes:20,sphericalHarmonicsOffsetBytes:24,scaleRange:32767}},bg={0:0,1:9,2:24,3:45};function xB(B,A,I,g){var c;let t=0;const E=new DataView(B.buffer,t,4096);t+=4096;const i=E.getUint8(0),s=E.getUint8(1);if(i!==0||s<1)throw new Error(`Unsupported .ksplat version: ${i}.${s}`);const n=E.getUint32(4,!0);E.getUint32(16,!0);const e=E.getUint16(20,!0);if(e<0||e>2)throw new Error(`Invalid .ksplat compression level: ${e}`);const a=E.getFloat32(36,!0)||-1.5,o=E.getFloat32(40,!0)||1.5;let r=4096+n*1024;for(let l=0;l<n;++l){let h=function(IA,m){if(e===0)return x.getFloat32(IA+J+m*4,!0);if(e===1)return $(x.getUint16(IA+J+m*2,!0));const X=x.getUint8(IA+J+m)/255;return a+X*(o-a)};const D=new DataView(B.buffer,t,1024);t+=1024;const w=D.getUint32(0,!0),M=D.getUint32(4,!0),G=D.getUint32(8,!0),R=D.getUint32(12,!0),d=D.getFloat32(16,!0),u=D.getUint16(20,!0),F=(D.getUint32(24,!0)||((c=MI[e])==null?void 0:c.scaleRange))??1,k=D.getUint32(32,!0),N=k*G,y=D.getUint32(36,!0),U=y*4,H=u*R+U,K=D.getUint16(40,!0),L=bg[K],{bytesPerCenter:z,bytesPerScale:W,bytesPerRotation:T,bytesPerColor:O,bytesPerSphericalHarmonicsComponent:V,scaleOffsetBytes:v,rotationOffsetBytes:q,colorOffsetBytes:b,sphericalHarmonicsOffsetBytes:J}=MI[e],Z=z+W+T+O+L*V,f=Z*M,CA=f+H,QA=[0,3,6,1,4,7,2,5,8],nA=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],EA=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],iA=K>=1?new Float32Array(3*3):void 0,sA=K>=2?new Float32Array(5*3):void 0,FA=K>=3?new Float32Array(7*3):void 0,eA=d/2/F,rA=r+U,hA=r+H,x=new DataView(B.buffer,hA,f),AA=new Float32Array(B.buffer,rA,R*3),Y=new Uint32Array(B.buffer,r,y);let fA=k,PA=N;for(let IA=0;IA<w;++IA){const m=IA*Z;let X;if(IA<N)X=Math.floor(IA/G);else{const uA=Y[fA-k];IA>=PA+uA&&(fA+=1,PA+=uA),X=fA}const p=e===0?x.getFloat32(m+0,!0):(x.getUint16(m+0,!0)-F)*eA+AA[3*X+0],lA=e===0?x.getFloat32(m+4,!0):(x.getUint16(m+2,!0)-F)*eA+AA[3*X+1],QI=e===0?x.getFloat32(m+8,!0):(x.getUint16(m+4,!0)-F)*eA+AA[3*X+2],CI=e===0?x.getFloat32(m+v+0,!0):$(x.getUint16(m+v+0,!0)),EI=e===0?x.getFloat32(m+v+4,!0):$(x.getUint16(m+v+2,!0)),WI=e===0?x.getFloat32(m+v+8,!0):$(x.getUint16(m+v+4,!0)),VI=e===0?x.getFloat32(m+q+0,!0):$(x.getUint16(m+q+0,!0)),PI=e===0?x.getFloat32(m+q+4,!0):$(x.getUint16(m+q+2,!0)),OI=e===0?x.getFloat32(m+q+8,!0):$(x.getUint16(m+q+4,!0)),$I=e===0?x.getFloat32(m+q+12,!0):$(x.getUint16(m+q+6,!0)),Ag=x.getUint8(m+b+0)/255,Ig=x.getUint8(m+b+1)/255,gg=x.getUint8(m+b+2)/255,Bg=x.getUint8(m+b+3)/255;if(I(IA,p,lA,QI,CI,EI,WI,PI,OI,$I,VI,Bg,Ag,Ig,gg),K>=1&&iA){for(const[uA,KA]of QA.entries())iA[uA]=h(m,KA);if(sA)for(const[uA,KA]of nA.entries())sA[uA]=h(m,KA);if(FA)for(const[uA,KA]of EA.entries())FA[uA]=h(m,KA);g==null||g(IA,iA,sA,FA)}}r+=CA}}function mB(B){var h;let g=0;const Q=new DataView(B.buffer,g,4096);g+=4096;const C=Q.getUint8(0),t=Q.getUint8(1);if(C!==0||t<1)throw new Error(`Unsupported .ksplat version: ${C}.${t}`);const E=Q.getUint32(4,!0),i=Q.getUint32(16,!0),s=Q.getUint16(20,!0);if(s<0||s>2)throw new Error(`Invalid .ksplat compression level: ${s}`);const n=Q.getFloat32(36,!0)||-1.5,e=Q.getFloat32(40,!0)||1.5,a=i,o=wI(a),r=new Uint32Array(o*4),c={};let l=4096+E*1024;for(let D=0;D<E;++D){let w=function(X,p){if(s===0)return Y.getFloat32(X+f+p*4,!0);if(s===1)return $(Y.getUint16(X+f+p*2,!0));const lA=Y.getUint8(X+f+p)/255;return n+lA*(e-n)};const M=new DataView(B.buffer,g,1024);g+=1024;const G=M.getUint32(0,!0),R=M.getUint32(4,!0),d=M.getUint32(8,!0),u=M.getUint32(12,!0),F=M.getFloat32(16,!0),k=M.getUint16(20,!0),N=(M.getUint32(24,!0)||((h=MI[s])==null?void 0:h.scaleRange))??1,y=M.getUint32(32,!0),U=y*d,H=M.getUint32(36,!0),K=H*4,L=k*u+K,z=M.getUint16(40,!0),W=bg[z],{bytesPerCenter:T,bytesPerScale:O,bytesPerRotation:V,bytesPerColor:v,bytesPerSphericalHarmonicsComponent:q,scaleOffsetBytes:b,rotationOffsetBytes:J,colorOffsetBytes:Z,sphericalHarmonicsOffsetBytes:f}=MI[s],CA=T+O+V+v+W*q,QA=CA*R,nA=QA+L,EA=[0,3,6,1,4,7,2,5,8],iA=[9,14,19,10,15,20,11,16,21,12,17,22,13,18,23],sA=[24,31,38,25,32,39,26,33,40,27,34,41,28,35,42,29,36,43,30,37,44],FA=z>=1?new Float32Array(3*3):void 0,eA=z>=2?new Float32Array(5*3):void 0,rA=z>=3?new Float32Array(7*3):void 0,hA=F/2/N,x=l+K,AA=l+L,Y=new DataView(B.buffer,AA,QA),fA=new Float32Array(B.buffer,x,u*3),PA=new Uint32Array(B.buffer,l,H);let IA=y,m=U;for(let X=0;X<G;++X){const p=X*CA;let lA;if(X<U)lA=Math.floor(X/d);else{const xA=PA[IA-y];X>=m+xA&&(IA+=1,m+=xA),lA=IA}const QI=s===0?Y.getFloat32(p+0,!0):(Y.getUint16(p+0,!0)-N)*hA+fA[3*lA+0],CI=s===0?Y.getFloat32(p+4,!0):(Y.getUint16(p+2,!0)-N)*hA+fA[3*lA+1],EI=s===0?Y.getFloat32(p+8,!0):(Y.getUint16(p+4,!0)-N)*hA+fA[3*lA+2],WI=s===0?Y.getFloat32(p+b+0,!0):$(Y.getUint16(p+b+0,!0)),VI=s===0?Y.getFloat32(p+b+4,!0):$(Y.getUint16(p+b+2,!0)),PI=s===0?Y.getFloat32(p+b+8,!0):$(Y.getUint16(p+b+4,!0)),OI=s===0?Y.getFloat32(p+J+0,!0):$(Y.getUint16(p+J+0,!0)),$I=s===0?Y.getFloat32(p+J+4,!0):$(Y.getUint16(p+J+2,!0)),Ag=s===0?Y.getFloat32(p+J+8,!0):$(Y.getUint16(p+J+4,!0)),Ig=s===0?Y.getFloat32(p+J+12,!0):$(Y.getUint16(p+J+6,!0)),gg=Y.getUint8(p+Z+0)/255,Bg=Y.getUint8(p+Z+1)/255,uA=Y.getUint8(p+Z+2)/255,KA=Y.getUint8(p+Z+3)/255;if(_I(r,X,QI,CI,EI,WI,VI,PI,$I,Ag,Ig,OI,KA,gg,Bg,uA),z>=1){if(FA){c.sh1||(c.sh1=new Uint32Array(a*2));for(const[xA,tI]of EA.entries())FA[xA]=w(p,tI);yI(c.sh1,X,FA)}if(eA){c.sh2||(c.sh2=new Uint32Array(a*4));for(const[xA,tI]of iA.entries())eA[xA]=w(p,tI);FI(c.sh2,X,eA)}if(rA){c.sh3||(c.sh3=new Uint32Array(a*4));for(const[xA,tI]of sA.entries())rA[xA]=w(p,tI);lI(c.sh3,X,rA)}}}l+=nA}return{packedArray:r,numSplats:a,extra:c}}const VA=class VA{constructor({fileBytes:A}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=A instanceof ArrayBuffer?new Uint8Array(A):A}async parseHeader(){const I=new ReadableStream({start:t=>{t.enqueue(this.fileBytes.slice(0,65536)),t.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";const g=`end_header\n`;for(;;){const{value:t,done:E}=await I.read();if(E)throw new Error("Failed to read header");this.header+=t;const i=this.header.indexOf(g);if(i>=0){this.header=this.header.slice(0,i+g.length);break}}const Q=new TextEncoder().encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,Q),this.elements={};let C=null;this.comments=[],this.header.trim().split(`\n`).forEach((t,E)=>{const i=t.trim();if(E===0){if(i!=="ply")throw new Error("Invalid PLY header");return}if(i.length===0)return;const s=i.split(" ");switch(s[0]){case"format":if(s[1]==="binary_little_endian")this.littleEndian=!0;else if(s[1]==="binary_big_endian")this.littleEndian=!1;else throw new Error(`Unsupported PLY format: ${s[1]}`);if(s[2]!=="1.0")throw new Error(`Unsupported PLY version: ${s[2]}`);break;case"end_header":break;case"comment":this.comments.push(i.slice(8));break;case"element":{const n=s[1];C={name:n,count:Number.parseInt(s[2]),properties:{}},this.elements[n]=C;break}case"property":if(C==null)throw new Error("Property must be inside an element");s[1]==="list"?C.properties[s[4]]={isList:!0,type:s[3],countType:s[2]}:C.properties[s[2]]={isList:!1,type:s[1]};break}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(A){let I=0;const g=this.data;if(g==null)throw new Error("No data to parse");for(const Q in this.elements){const C=this.elements[Q],{count:t,properties:E}=C,i={},s=[];for(const[e,a]of Object.entries(E))a.isList?(i[e]=[],s.push(()=>{const o=i[e];o.length=GI[a.countType](g,I,this.littleEndian),I+=WA[a.countType];for(let r=0;r<o.length;r++)o[r]=GI[a.type](g,I,this.littleEndian),I+=WA[a.type]})):(i[e]=0,s.push(()=>{i[e]=GI[a.type](g,I,this.littleEndian),I+=WA[a.type]}));const n=A(C)??(()=>{});for(let e=0;e<t;e++){for(const a of s)a();n(e,i)}}}parseSplats(A,I){if(this.elements.vertex==null)throw new Error("No vertex element found");let g=!1;const Q=[];let C=0,t=[],E=[],i=[],s,n,e;function a(){const h=pB[C];t=new Array(3).fill(null).flatMap((D,w)=>[0,1,2].map((M,G)=>`f_rest_${w+G*h/3}`)),E=new Array(5).fill(null).flatMap((D,w)=>[0,1,2].map((M,G)=>`f_rest_${3+w+G*h/3}`)),i=new Array(7).fill(null).flatMap((D,w)=>[0,1,2].map((M,G)=>`f_rest_${8+w+G*h/3}`)),s=C>=1?new Float32Array(3*3):void 0,n=C>=2?new Float32Array(5*3):void 0,e=C>=3?new Float32Array(7*3):void 0}function o(h,D){if(!s)throw new Error("Missing sh1");for(const[w,M]of t.entries())s[w]=D[M]*8/255-4;if(n)for(const[w,M]of E.entries())n[w]=D[M]*8/255-4;if(e)for(const[w,M]of i.entries())e[w]=D[M]*8/255-4;I==null||I(h,s,n,e)}function r(h){const{min_x:D,min_y:w,min_z:M,max_x:G,max_y:R,max_z:d,min_scale_x:u,min_scale_y:F,min_scale_z:k,max_scale_x:N,max_scale_y:y,max_scale_z:U}=h.properties;if(!D||!w||!M||!G||!R||!d||!u||!F||!k||!N||!y||!U)throw new Error("Missing PLY chunk properties");return g=!0,(H,K)=>{const{min_x:L,min_y:z,min_z:W,max_x:T,max_y:O,max_z:V,min_scale_x:v,min_scale_y:q,min_scale_z:b,max_scale_x:J,max_scale_y:Z,max_scale_z:f,min_r:CA,min_g:QA,min_b:nA,max_r:EA,max_g:iA,max_b:sA}=K;Q.push({min_x:L,min_y:z,min_z:W,max_x:T,max_y:O,max_z:V,min_scale_x:v,min_scale_y:q,min_scale_z:b,max_scale_x:J,max_scale_y:Z,max_scale_z:f,min_r:CA,min_g:QA,min_b:nA,max_r:EA,max_g:iA,max_b:sA})}}function c(h){if(I&&h.name==="sh")return C=zg(h.properties),a(),o;if(h.name!=="vertex")return null;const{packed_position:D,packed_rotation:w,packed_scale:M,packed_color:G}=h.properties;if(!D||!w||!M||!G)throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const R=Math.sqrt(2);return(d,u)=>{const F=Q[d>>>8];if(F==null)throw new Error("Missing PLY chunk");const{min_x:k,min_y:N,min_z:y,max_x:U,max_y:H,max_z:K,min_scale_x:L,min_scale_y:z,min_scale_z:W,max_scale_x:T,max_scale_y:O,max_scale_z:V,min_r:v,min_g:q,min_b:b,max_r:J,max_g:Z,max_b:f}=F,{packed_position:CA,packed_rotation:QA,packed_scale:nA,packed_color:EA}=u,iA=(CA>>>21&2047)/2047*(U-k)+k,sA=(CA>>>11&1023)/1023*(H-N)+N,FA=(CA&2047)/2047*(K-y)+y,eA=((QA>>>20&1023)/1023-.5)*R,rA=((QA>>>10&1023)/1023-.5)*R,hA=((QA&1023)/1023-.5)*R,x=Math.sqrt(Math.max(0,1-eA*eA-rA*rA-hA*hA)),AA=QA>>>30,Y=AA===0?eA:AA===1?x:rA,fA=AA<=1?rA:AA===2?x:hA,PA=AA<=2?hA:x,IA=AA===0?x:eA,m=Math.exp((nA>>>21&2047)/2047*(T-L)+L),X=Math.exp((nA>>>11&1023)/1023*(O-z)+z),p=Math.exp((nA&2047)/2047*(V-W)+W),lA=(EA>>>24&255)/255*((J??1)-(v??0))+(v??0),QI=(EA>>>16&255)/255*((Z??1)-(q??0))+(q??0),CI=(EA>>>8&255)/255*((f??1)-(b??0))+(b??0),EI=(EA&255)/255;A(d,iA,sA,FA,m,X,p,Y,fA,PA,IA,EI,lA,QI,CI)}}const l=h=>{if(h.name==="chunk")return r(h);if(g)return c(h);if(h.name!=="vertex")return null;const{x:D,y:w,z:M,scale_0:G,scale_1:R,scale_2:d,rot_0:u,rot_1:F,rot_2:k,rot_3:N,opacity:y,f_dc_0:U,f_dc_1:H,f_dc_2:K,red:L,green:z,blue:W,alpha:T}=h.properties;if(!D||!w||!M)throw new Error("Missing PLY properties: x, y, z");const O=G&&R&&d,V=u&&F&&k&&N,v=T!=null?fI[T.type]:1,q=L!=null?fI[L.type]:1,b=z!=null?fI[z.type]:1,J=W!=null?fI[W.type]:1;return C=zg(h.properties),a(),(Z,f)=>{const CA=O?Math.exp(f.scale_0):VA.defaultPointScale,QA=O?Math.exp(f.scale_1):VA.defaultPointScale,nA=O?Math.exp(f.scale_2):VA.defaultPointScale,EA=V?f.rot_1:0,iA=V?f.rot_2:0,sA=V?f.rot_3:0,FA=V?f.rot_0:1,eA=y!=null?1/(1+Math.exp(-f.opacity)):T!=null?f.alpha/v:1,rA=U!=null?f.f_dc_0*uI+.5:L!=null?f.red/q:1,hA=H!=null?f.f_dc_1*uI+.5:z!=null?f.green/b:1,x=K!=null?f.f_dc_2*uI+.5:W!=null?f.blue/J:1;if(A(Z,f.x,f.y,f.z,CA,QA,nA,EA,iA,sA,FA,eA,rA,hA,x),I&&s){if(s)for(const[AA,Y]of t.entries())s[AA]=f[Y];if(n)for(const[AA,Y]of E.entries())n[AA]=f[Y];if(e)for(const[AA,Y]of i.entries())e[AA]=f[Y];I(Z,s,n,e)}}};this.parseData(l)}injectRgba(A){let I=0;const g=this.data;if(g==null)throw new Error("No parsed data");if(A.length!==this.numSplats*4)throw new Error("Invalid RGBA array length");for(const Q in this.elements){const C=this.elements[Q],{count:t,properties:E}=C,i=[];let s=0;const n=Q==="vertex";if(n){for(const e of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!E[e]||E[e].type!=="float")throw new Error(`Can\'t injectRgba due to property: ${e}`)}for(const[e,a]of Object.entries(E))if(a.isList)i.push(()=>{const o=GI[a.countType](g,I,this.littleEndian);I+=WA[a.countType],I+=o*WA[a.type]});else{if(n)if(e==="f_dc_0"||e==="f_dc_1"||e==="f_dc_2"){const o=Number.parseInt(e.slice(5));i.push(()=>{const r=(A[s+o]/255-.5)/uI;qg[a.type](g,I,this.littleEndian,r)})}else e==="opacity"&&i.push(()=>{const o=Math.max(-100,Math.min(100,-Math.log(1/(A[s+3]/255)-1)));qg[a.type](g,I,this.littleEndian,o)});i.push(()=>{I+=WA[a.type]})}for(let e=0;e<t;e++){for(const a of i)a();n&&(s+=4)}}}};VA.defaultPointScale=.001;let NI=VA;const uI=.28209479177387814,GI={char:(B,A,I)=>B.getInt8(A),uchar:(B,A,I)=>B.getUint8(A),short:(B,A,I)=>B.getInt16(A,I),ushort:(B,A,I)=>B.getUint16(A,I),int:(B,A,I)=>B.getInt32(A,I),uint:(B,A,I)=>B.getUint32(A,I),float:(B,A,I)=>B.getFloat32(A,I),double:(B,A,I)=>B.getFloat64(A,I)},qg={char:(B,A,I,g)=>{B.setInt8(A,g)},uchar:(B,A,I,g)=>{B.setUint8(A,g)},short:(B,A,I,g)=>{B.setInt16(A,g,I)},ushort:(B,A,I,g)=>{B.setUint16(A,g,I)},int:(B,A,I,g)=>{B.setInt32(A,g,I)},uint:(B,A,I,g)=>{B.setUint32(A,g,I)},float:(B,A,I,g)=>{B.setFloat32(A,g,I)},double:(B,A,I,g)=>{B.setFloat64(A,g,I)}},WA={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},fI={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},dB={0:0,9:1,24:2,45:3},pB={0:0,1:9,2:24,3:45};function zg(B){let A=0;for(;B[`f_rest_${A}`];)A+=1;const I=dB[A];if(I==null)throw new Error(`Unsupported number of SH coefficients: ${A}`);return I}var gI=(B=>(B.PLY="ply",B.SPZ="spz",B.SPLAT="splat",B.KSPLAT="ksplat",B.PCSOGS="pcsogs",B.PCSOGSZIP="pcsogszip",B))(gI||{});function HB(B){const A=new DataView(B.buffer);if((A.getUint32(0,!0)&16777215)===7957616)return"ply";if((A.getUint32(0,!0)&16777215)===559903){const I=JB(B,4);return new DataView(I.buffer).getUint32(0,!0)===1347635022?"spz":void 0}if(A.getUint32(0,!0)===67324752)return Zg(B)?"pcsogszip":void 0}function KB(B){const A=B.split(/[?#]/,1)[0],I=Math.max(A.lastIndexOf("/"),A.lastIndexOf("\\\\")),g=A.slice(I+1),Q=g.lastIndexOf(".");return Q<=0||Q===g.length-1?"":g.slice(Q+1).toLowerCase()}function bB(B){const A=KB(B);if(A==="ply")return"ply";if(A==="spz")return"spz";if(A==="splat")return"splat";if(A==="ksplat")return"ksplat"}function qB(B){try{let A;if(typeof B=="string")A=B;else{const g=B instanceof ArrayBuffer?new Uint8Array(B):B;if(g.length>65536)return;A=new TextDecoder().decode(g)}const I=JSON.parse(A);if(!I||typeof I!="object"||Array.isArray(I))return;for(const g of["means","scales","quats","sh0"])if(!I[g]||typeof I[g]!="object"||Array.isArray(I[g])||!I[g].shape||!I[g].files||g!=="quats"&&(!I[g].mins||!I[g].maxs))return;return I}catch{return}}function Zg(B){try{const A=B instanceof ArrayBuffer?new Uint8Array(B):B;let I=null;const g=DB(A,{filter:({name:C})=>C.split(/[\\\\/]/).pop()==="meta.json"?(I=C,!0):!1});if(!I)return;const Q=qB(g[I]);return Q?{name:I,json:Q}:void 0}catch{return}}class zB{constructor({maxSplats:A=1}={}){this.numSplats=0,this.maxSplats=UB(A).maxSplats,this.centers=new Float32Array(this.maxSplats*3),this.scales=new Float32Array(this.maxSplats*3),this.quaternions=new Float32Array(this.maxSplats*4),this.opacities=new Float32Array(this.maxSplats),this.colors=new Float32Array(this.maxSplats*3)}pushSplat(){const A=this.numSplats;return this.ensureIndex(A),this.numSplats+=1,A}unpushSplat(A){if(A===this.numSplats-1)this.numSplats-=1;else throw new Error("Cannot unpush splat from non-last position")}ensureCapacity(A){if(A>this.maxSplats){const I=Math.max(A,this.maxSplats*2),g=new Float32Array(I*3),Q=new Float32Array(I*3),C=new Float32Array(I*4),t=new Float32Array(I),E=new Float32Array(I*3);if(g.set(this.centers),Q.set(this.scales),C.set(this.quaternions),t.set(this.opacities),E.set(this.colors),this.centers=g,this.scales=Q,this.quaternions=C,this.opacities=t,this.colors=E,this.sh1){const i=new Float32Array(I*9);i.set(this.sh1),this.sh1=i}if(this.sh2){const i=new Float32Array(I*15);i.set(this.sh2),this.sh2=i}if(this.sh3){const i=new Float32Array(I*21);i.set(this.sh3),this.sh3=i}this.maxSplats=I}}ensureIndex(A){this.ensureCapacity(A+1)}setCenter(A,I,g,Q){this.centers[A*3]=I,this.centers[A*3+1]=g,this.centers[A*3+2]=Q}setScale(A,I,g,Q){this.scales[A*3]=I,this.scales[A*3+1]=g,this.scales[A*3+2]=Q}setQuaternion(A,I,g,Q,C){this.quaternions[A*4]=I,this.quaternions[A*4+1]=g,this.quaternions[A*4+2]=Q,this.quaternions[A*4+3]=C}setOpacity(A,I){this.opacities[A]=I}setColor(A,I,g,Q){this.colors[A*3]=I,this.colors[A*3+1]=g,this.colors[A*3+2]=Q}setSh1(A,I){this.sh1||(this.sh1=new Float32Array(this.maxSplats*9));for(let g=0;g<9;++g)this.sh1[A*9+g]=I[g]}setSh2(A,I){this.sh2||(this.sh2=new Float32Array(this.maxSplats*15));for(let g=0;g<15;++g)this.sh2[A*15+g]=I[g]}setSh3(A,I){this.sh3||(this.sh3=new Float32Array(this.maxSplats*21));for(let g=0;g<21;++g)this.sh3[A*21+g]=I[g]}}async function Tg(B,A){if(B.quats.encoding!=="quaternion_packed")throw new Error("Unsupported quaternion encoding");const I=B.means.shape[0],g=wI(I),Q=new Uint32Array(g*4),C={},t=Promise.all([BI(A[B.means.files[0]]),BI(A[B.means.files[1]])]).then(e=>{for(let a=0;a<I;++a){const o=a*4,r=(e[0][o+0]+(e[1][o+0]<<8))/65535,c=(e[0][o+1]+(e[1][o+1]<<8))/65535,l=(e[0][o+2]+(e[1][o+2]<<8))/65535;let h=B.means.mins[0]+(B.means.maxs[0]-B.means.mins[0])*r,D=B.means.mins[1]+(B.means.maxs[1]-B.means.mins[1])*c,w=B.means.mins[2]+(B.means.maxs[2]-B.means.mins[2])*l;h=Math.sign(h)*(Math.exp(Math.abs(h))-1),D=Math.sign(D)*(Math.exp(Math.abs(D))-1),w=Math.sign(w)*(Math.exp(Math.abs(w))-1),mg(Q,a,h,D,w)}}),E=BI(A[B.scales.files[0]]).then(e=>{for(let a=0;a<I;++a){const o=a*4,r=e[o+0]/255,c=e[o+1]/255,l=e[o+2]/255,h=B.scales.mins[0]+(B.scales.maxs[0]-B.scales.mins[0])*r,D=B.scales.mins[1]+(B.scales.maxs[1]-B.scales.mins[1])*c,w=B.scales.mins[2]+(B.scales.maxs[2]-B.scales.mins[2])*l;dg(Q,a,Math.exp(h),Math.exp(D),Math.exp(w))}}),i=BI(A[B.quats.files[0]]).then(e=>{const a=Math.sqrt(2);for(let o=0;o<I;++o){const r=o*4,c=(e[r+0]/255-.5)*a,l=(e[r+1]/255-.5)*a,h=(e[r+2]/255-.5)*a,D=Math.sqrt(Math.max(0,1-c*c-l*l-h*h)),w=e[r+3]-252,M=w===0?c:w===1?D:l,G=w<=1?l:w===2?D:h,R=w<=2?h:D;pg(Q,o,M,G,R,w===0?D:c)}}),s=BI(A[B.sh0.files[0]]).then(e=>{const a=.28209479177387814;for(let o=0;o<I;++o){const r=o*4,c=e[r+0]/255,l=e[r+1]/255,h=e[r+2]/255,D=e[r+3]/255,w=B.sh0.mins[0]+(B.sh0.maxs[0]-B.sh0.mins[0])*c,M=B.sh0.mins[1]+(B.sh0.maxs[1]-B.sh0.mins[1])*l,G=B.sh0.mins[2]+(B.sh0.maxs[2]-B.sh0.mins[2])*h,R=B.sh0.mins[3]+(B.sh0.maxs[3]-B.sh0.mins[3])*D,d=a*w+.5,u=a*M+.5,F=a*G+.5,k=1/(1+Math.exp(-R));SB(Q,o,d,u,F,k)}}),n=[t,E,i,s];if(B.shN){const e=B.shN.shape[1]>=45,a=B.shN.shape[1]>=24,o=B.shN.shape[1]>=9;o&&(C.sh1=new Uint32Array(I*2)),a&&(C.sh2=new Uint32Array(I*4)),e&&(C.sh3=new Uint32Array(I*4));const r=new Float32Array(9),c=new Float32Array(15),l=new Float32Array(21),h=B.shN,D=Promise.all([vI(A[B.shN.files[0]]),vI(A[B.shN.files[1]])]).then(([w,M])=>{for(let G=0;G<I;++G){const R=G*4,d=M.rgba[R+0]+(M.rgba[R+1]<<8),u=(d&63)*15,k=(d>>>6)*w.width+u;for(let N=0;N<3;++N){if(o)for(let y=0;y<3;++y)r[y*3+N]=h.mins+(h.maxs-h.mins)*w.rgba[(k+y)*4+N]/255;if(a)for(let y=0;y<5;++y)c[y*3+N]=h.mins+(h.maxs-h.mins)*w.rgba[(k+3+y)*4+N]/255;if(e)for(let y=0;y<7;++y)l[y*3+N]=h.mins+(h.maxs-h.mins)*w.rgba[(k+8+y)*4+N]/255}o&&yI(C.sh1,G,r),a&&FI(C.sh2,G,c),e&&lI(C.sh3,G,l)}});n.push(D)}return await Promise.all(n),{packedArray:Q,numSplats:I,extra:C}}let SI=null;async function vI(B){if(!SI&&(SI=new OffscreenCanvas(1,1).getContext("webgl2"),!SI))throw new Error("Failed to create WebGL2 context");const A=new Blob([B]),I=await createImageBitmap(A,{premultiplyAlpha:"none"}),g=SI,Q=g.createTexture();g.bindTexture(g.TEXTURE_2D,Q),g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,!0),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,I),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_MAG_FILTER,g.NEAREST),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_MIN_FILTER,g.NEAREST);const C=g.createFramebuffer();g.bindFramebuffer(g.FRAMEBUFFER,C),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,Q,0);const t=new Uint8Array(I.width*I.height*4);return g.readPixels(0,0,I.width,I.height,g.RGBA,g.UNSIGNED_BYTE,t),g.deleteTexture(Q),g.deleteFramebuffer(C),{rgba:t,width:I.width,height:I.height}}async function BI(B){const{rgba:A}=await vI(B);return A}async function ZB(B){var e;const A=Zg(B);if(!A)throw new Error("Invalid PC SOGS zip file");const{name:I,json:g}=A,Q=I.lastIndexOf("/"),C=I.lastIndexOf("\\\\"),t=I.slice(0,Math.max(Q,C)+1),E=new Map,i=[...g.means.files,...g.scales.files,...g.quats.files,...g.sh0.files,...((e=g.shN)==null?void 0:e.files)??[]];for(const a of i)E.set(t+a,a);const s=await new Promise((a,o)=>{wB(B,{filter:({name:r})=>E.has(r)},(r,c)=>{r?o(r):a(c)})}),n={};for(const[a,o]of E.entries())n[o]=s[a];return await Tg(g,n)}class _g{constructor({fileBytes:A}){this.fileBytes=A instanceof ArrayBuffer?new Uint8Array(A):A,this.reader=new YB({fileBytes:this.fileBytes});const I=new DataView(this.reader.read(16).buffer);if(I.getUint32(0,!0)!==1347635022)throw new Error("Invalid SPZ file");if(this.version=I.getUint32(4,!0),this.version<1||this.version>2)throw new Error(`Unsupported SPZ version: ${this.version}`);this.numSplats=I.getUint32(8,!0),this.shDegree=I.getUint8(12),this.fractionalBits=I.getUint8(13),this.flags=I.getUint8(14),this.flagAntiAlias=(this.flags&1)!==0,this.reserved=I.getUint8(15),this.parsed=!1}parseSplats(A,I,g,Q,C,t){if(this.parsed)throw new Error("SPZ file already parsed");if(this.parsed=!0,this.version===1){const E=this.reader.read(this.numSplats*3*2),i=new Uint16Array(E.buffer);for(let s=0;s<this.numSplats;s++){const n=s*3,e=$(i[n]),a=$(i[n+1]),o=$(i[n+2]);A==null||A(s,e,a,o)}}else if(this.version===2){const E=1<<this.fractionalBits,i=this.reader.read(this.numSplats*3*3);for(let s=0;s<this.numSplats;s++){const n=s*9,e=((i[n+2]<<24|i[n+1]<<16|i[n]<<8)>>8)/E,a=((i[n+5]<<24|i[n+4]<<16|i[n+3]<<8)>>8)/E,o=((i[n+8]<<24|i[n+7]<<16|i[n+6]<<8)>>8)/E;A==null||A(s,e,a,o)}}else throw new Error("Unreachable");{const E=this.reader.read(this.numSplats);for(let i=0;i<this.numSplats;i++)I==null||I(i,E[i]/255)}{const E=this.reader.read(this.numSplats*3),i=Xg/.15;for(let s=0;s<this.numSplats;s++){const n=s*3,e=(E[n]/255-.5)*i+.5,a=(E[n+1]/255-.5)*i+.5,o=(E[n+2]/255-.5)*i+.5;g==null||g(s,e,a,o)}}{const E=this.reader.read(this.numSplats*3);for(let i=0;i<this.numSplats;i++){const s=i*3,n=Math.exp(E[s]/16-10),e=Math.exp(E[s+1]/16-10),a=Math.exp(E[s+2]/16-10);Q==null||Q(i,n,e,a)}}{const E=this.reader.read(this.numSplats*3);for(let i=0;i<this.numSplats;i++){const s=i*3,n=E[s]/127.5-1,e=E[s+1]/127.5-1,a=E[s+2]/127.5-1,o=Math.sqrt(Math.max(0,1-n*n-e*e-a*a));C==null||C(i,n,e,a,o)}}if(t&&this.shDegree>=1){const E=new Float32Array(9),i=this.shDegree>=2?new Float32Array(5*3):void 0,s=this.shDegree>=3?new Float32Array(7*3):void 0,n=this.reader.read(this.numSplats*vg[this.shDegree]*3);let e=0;for(let a=0;a<this.numSplats;a++){for(let o=0;o<9;++o)E[o]=(n[e+o]-128)/128;if(e+=9,i){for(let o=0;o<15;++o)i[o]=(n[e+o]-128)/128;e+=15}if(s){for(let o=0;o<21;++o)s[o]=(n[e+o]-128)/128;e+=21}t==null||t(a,E,i,s)}}}}const vg={1:3,2:8,3:15},Xg=.28209479177387814,TB=1347635022,_B=2,vB=1;class LA{constructor({numSplats:A,shDegree:I,fractionalBits:g=12,flagAntiAlias:Q=!0}){this.clippedCount=0;const C=19+(I>=1?9:0)+(I>=2?15:0)+(I>=3?21:0),t=16+A*C;this.buffer=new ArrayBuffer(t),this.view=new DataView(this.buffer),this.view.setUint32(0,TB,!0),this.view.setUint32(4,_B,!0),this.view.setUint32(8,A,!0),this.view.setUint8(12,I),this.view.setUint8(13,g),this.view.setUint8(14,Q?vB:0),this.view.setUint8(15,0),this.numSplats=A,this.shDegree=I,this.fractionalBits=g,this.fraction=1<<g,this.flagAntiAlias=Q}setCenter(A,I,g,Q){const C=Math.round(I*this.fraction),t=Math.max(-8388607,Math.min(8388607,C)),E=Math.round(g*this.fraction),i=Math.max(-8388607,Math.min(8388607,E)),s=Math.round(Q*this.fraction),n=Math.max(-8388607,Math.min(8388607,s));(C!==t||E!==i||s!==n)&&(this.clippedCount+=1);const o=16+A*9;this.view.setUint8(o,t&255),this.view.setUint8(o+1,t>>8&255),this.view.setUint8(o+2,t>>16&255),this.view.setUint8(o+3,i&255),this.view.setUint8(o+4,i>>8&255),this.view.setUint8(o+5,i>>16&255),this.view.setUint8(o+6,n&255),this.view.setUint8(o+7,n>>8&255),this.view.setUint8(o+8,n>>16&255)}setAlpha(A,I){const g=16+this.numSplats*9+A;this.view.setUint8(g,Math.max(0,Math.min(255,Math.round(I*255))))}static scaleRgb(A){const I=((A-.5)/(Xg/.15)+.5)*255;return Math.max(0,Math.min(255,Math.round(I)))}setRgb(A,I,g,Q){const C=16+this.numSplats*10+A*3;this.view.setUint8(C,LA.scaleRgb(I)),this.view.setUint8(C+1,LA.scaleRgb(g)),this.view.setUint8(C+2,LA.scaleRgb(Q))}setScale(A,I,g,Q){const C=16+this.numSplats*13+A*3;this.view.setUint8(C,Math.max(0,Math.min(255,Math.round((Math.log(I)+10)*16)))),this.view.setUint8(C+1,Math.max(0,Math.min(255,Math.round((Math.log(g)+10)*16)))),this.view.setUint8(C+2,Math.max(0,Math.min(255,Math.round((Math.log(Q)+10)*16))))}setQuat(A,I,g,Q,C){const t=16+this.numSplats*16+A*3,E=C<0;this.view.setUint8(t,Math.max(0,Math.min(255,Math.round(((E?-I:I)+1)*127.5)))),this.view.setUint8(t+1,Math.max(0,Math.min(255,Math.round(((E?-g:g)+1)*127.5)))),this.view.setUint8(t+2,Math.max(0,Math.min(255,Math.round(((E?-Q:Q)+1)*127.5))))}static quantizeSh(A,I){const g=Math.round(A*128)+128,Q=1<<8-I,C=Math.floor((g+Q/2)/Q)*Q;return Math.max(0,Math.min(255,C))}setSh(A,I,g,Q){const C=vg[this.shDegree]||0,t=16+this.numSplats*19+A*C*3;for(let E=0;E<9;++E)this.view.setUint8(t+E,LA.quantizeSh(I[E],5));if(g){const E=t+9;for(let i=0;i<15;++i)this.view.setUint8(E+i,LA.quantizeSh(g[i],4));if(Q){const i=E+15;for(let s=0;s<21;++s)this.view.setUint8(i+s,LA.quantizeSh(Q[s],4))}}}async finalize(){const A=new Uint8Array(this.buffer),g=new ReadableStream({async start(t){t.enqueue(A),t.close()}}).pipeThrough(new CompressionStream("gzip")),C=await new Response(g).arrayBuffer();return console.log("Compressed",A.length,"bytes to",C.byteLength,"bytes"),new Uint8Array(C)}}async function XB(B){var n,e,a;const A=new zB,{inputs:I,clipXyz:g,maxSh:Q,fractionalBits:C=12,opacityThreshold:t}=B;for(const o of I){let r=function(u){return u.multiplyScalar(w),u.applyQuaternion(M),u.add(G),u},c=function(u){return u.multiplyScalar(w),u},l=function(u){return u.premultiply(M),u},h=function(u){return!R||R.containsPoint(u)},D=function(u){return t!==void 0?u>=t:!0};const w=((n=o.transform)==null?void 0:n.scale)??1,M=new RA().fromArray(((e=o.transform)==null?void 0:e.quaternion)??[0,0,0,1]),G=new S().fromArray(((a=o.transform)==null?void 0:a.translate)??[0,0,0]),R=g?new Rg(new S().fromArray(g.min),new S().fromArray(g.max)):void 0;let d=o.fileType;switch(d||(d=HB(o.fileBytes),!d&&o.pathOrUrl&&(d=bB(o.pathOrUrl))),d){case gI.PLY:{const u=new NI({fileBytes:o.fileBytes});await u.parseHeader();let F=null;u.parseSplats((k,N,y,U,H,K,L,z,W,T,O,V,v,q,b)=>{const J=r(new S(N,y,U));if(h(J)&&D(V)){F=A.pushSplat(),A.setCenter(F,J.x,J.y,J.z);const Z=c(new S(H,K,L));A.setScale(F,Z.x,Z.y,Z.z);const f=l(new RA(z,W,T,O));A.setQuaternion(F,f.x,f.y,f.z,f.w),A.setOpacity(F,V),A.setColor(F,v,q,b)}else F=null},(k,N,y,U)=>{N&&F!==null&&A.setSh1(F,N),y&&F!==null&&A.setSh2(F,y),U&&F!==null&&A.setSh3(F,U)});break}case gI.SPZ:{const u=new _g({fileBytes:o.fileBytes}),F=new Int32Array(u.numSplats);F.fill(-1);const k=new Float32Array(u.numSplats*3),N=new S;u.parseSplats((y,U,H,K)=>{const L=r(new S(U,H,K));k[y*3]=L.x,k[y*3+1]=L.y,k[y*3+2]=L.z},(y,U)=>{N.fromArray(k,y*3),h(N)&&D(U)&&(F[y]=A.pushSplat(),A.setCenter(F[y],N.x,N.y,N.z),A.setOpacity(F[y],U))},(y,U,H,K)=>{F[y]>=0&&A.setColor(F[y],U,H,K)},(y,U,H,K)=>{if(F[y]>=0){const L=c(new S(U,H,K));A.setScale(F[y],L.x,L.y,L.z)}},(y,U,H,K,L)=>{if(F[y]>=0){const z=l(new RA(U,H,K,L));A.setQuaternion(F[y],z.x,z.y,z.z,z.w)}},(y,U,H,K)=>{F[y]>=0&&(A.setSh1(F[y],U),H&&A.setSh2(F[y],H),K&&A.setSh3(F[y],K))});break}case gI.SPLAT:Kg(o.fileBytes,u=>{},(u,F,k,N,y,U,H,K,L,z,W,T,O,V,v)=>{const q=r(new S(F,k,N));if(h(q)&&D(T)){const b=A.pushSplat();A.setCenter(b,q.x,q.y,q.z);const J=c(new S(y,U,H));A.setScale(b,J.x,J.y,J.z);const Z=l(new RA(K,L,z,W));A.setQuaternion(b,Z.x,Z.y,Z.z,Z.w),A.setOpacity(b,T),A.setColor(b,O,V,v)}});break;case gI.KSPLAT:{let u=null;xB(o.fileBytes,F=>{},(F,k,N,y,U,H,K,L,z,W,T,O,V,v,q)=>{const b=r(new S(k,N,y));if(h(b)&&D(O)){u=A.pushSplat(),A.setCenter(u,b.x,b.y,b.z);const J=c(new S(U,H,K));A.setScale(u,J.x,J.y,J.z);const Z=l(new RA(L,z,W,T));A.setQuaternion(u,Z.x,Z.y,Z.z,Z.w),A.setOpacity(u,O),A.setColor(u,V,v,q)}else u=null},(F,k,N,y)=>{u!==null&&(A.setSh1(u,k),N&&A.setSh2(u,N),y&&A.setSh3(u,y))});break}default:throw new Error(`transcodeSpz not implemented for ${d}`)}}const E=Math.min(Q??3,A.sh3?3:A.sh2?2:A.sh1?1:0),i=new LA({numSplats:A.numSplats,shDegree:E,fractionalBits:C,flagAntiAlias:!0});for(let o=0;o<A.numSplats;++o){const r=o*3,c=o*4;i.setCenter(o,A.centers[r],A.centers[r+1],A.centers[r+2]),i.setScale(o,A.scales[r],A.scales[r+1],A.scales[r+2]),i.setQuat(o,A.quaternions[c],A.quaternions[c+1],A.quaternions[c+2],A.quaternions[c+3]),i.setAlpha(o,A.opacities[o]),i.setRgb(o,A.colors[r],A.colors[r+1],A.colors[r+2]),A.sh1&&E>=1&&i.setSh(o,A.sh1.slice(o*9,(o+1)*9),E>=2&&A.sh2?A.sh2.slice(o*15,(o+1)*15):void 0,E>=3&&A.sh3?A.sh3.slice(o*21,(o+1)*21):void 0)}return{fileBytes:await i.finalize(),clippedCount:i.clippedCount}}async function jg(B){const{name:A,args:I,id:g}=B.data;let Q,C;try{switch(A){case"unpackPly":{const{packedArray:t,fileBytes:E}=I,i=await jB({packedArray:t,fileBytes:E});Q={id:g,numSplats:i.numSplats,packedArray:i.packedArray,extra:i.extra};break}case"decodeSpz":{const{fileBytes:t}=I,E=WB(t);Q={id:g,numSplats:E.numSplats,packedArray:E.packedArray,extra:E.extra};break}case"decodeAntiSplat":{const{fileBytes:t}=I,E=LB(t);Q={id:g,numSplats:E.numSplats,packedArray:E.packedArray};break}case"decodeKsplat":{const{fileBytes:t}=I,E=mB(t);Q={id:g,numSplats:E.numSplats,packedArray:E.packedArray,extra:E.extra};break}case"decodePcSogs":{const{fileBytes:t,extraFiles:E}=I,i=JSON.parse(new TextDecoder().decode(t)),s=await Tg(i,E);Q={id:g,numSplats:s.numSplats,packedArray:s.packedArray,extra:s.extra};break}case"decodePcSogsZip":{const{fileBytes:t}=I,E=await ZB(t);Q={id:g,numSplats:E.numSplats,packedArray:E.packedArray,extra:E.extra};break}case"sortSplats":{const{totalSplats:t,readback:E,ordering:i}=I;Q={id:g,readback:E,...VB({totalSplats:t,readback:E,ordering:i})};break}case"sortDoubleSplats":{const{numSplats:t,readback:E,ordering:i}=I;Q={id:g,readback:E,ordering:i,activeSplats:Og(t,E,i)};break}case"sort32Splats":{const{numSplats:t,readback:E,ordering:i}=I;Q={id:g,readback:E,ordering:i,activeSplats:$g(t,E,i)};break}case"transcodeSpz":{const t=I,E=await XB(t);Q={id:g,fileBytes:E,input:t};break}default:throw new Error(`Unknown name: ${A}`)}}catch(t){C=t,console.error(C)}self.postMessage({id:g,result:Q,error:C},{transfer:fB(Q)})}async function jB({packedArray:B,fileBytes:A}){const I=new NI({fileBytes:A});await I.parseHeader();const g=I.numSplats,Q={};return I.parseSplats((C,t,E,i,s,n,e,a,o,r,c,l,h,D,w)=>{_I(B,C,t,E,i,s,n,e,a,o,r,c,l,h,D,w)},(C,t,E,i)=>{t&&(Q.sh1||(Q.sh1=new Uint32Array(g*2)),yI(Q.sh1,C,t)),E&&(Q.sh2||(Q.sh2=new Uint32Array(g*4)),FI(Q.sh2,C,E)),i&&(Q.sh3||(Q.sh3=new Uint32Array(g*4)),lI(Q.sh3,C,i))}),{packedArray:B,numSplats:g,extra:Q}}function WB(B){const A=new _g({fileBytes:B}),I=A.numSplats,g=wI(I),Q=new Uint32Array(g*4),C={};return A.parseSplats((t,E,i,s)=>{mg(Q,t,E,i,s)},(t,E)=>{RB(Q,t,E)},(t,E,i,s)=>{kB(Q,t,E,i,s)},(t,E,i,s)=>{dg(Q,t,E,i,s)},(t,E,i,s,n)=>{pg(Q,t,E,i,s,n)},(t,E,i,s)=>{E&&(C.sh1||(C.sh1=new Uint32Array(I*2)),yI(C.sh1,t,E)),i&&(C.sh2||(C.sh2=new Uint32Array(I*4)),FI(C.sh2,t,i)),s&&(C.sh3||(C.sh3=new Uint32Array(I*4)),lI(C.sh3,t,s))}),{packedArray:Q,numSplats:I,extra:C}}const XI=31744,kI=XI+1;let NA=null;function VB({totalSplats:B,readback:A,ordering:I}){NA||(NA=new Uint32Array(kI)),NA.fill(0);const g=A.map(i=>new Uint32Array(i.buffer)),Q=g[0].length,C=Math.ceil(B/Q);let t=0;for(let i=0;i<C;++i){const s=g[i],n=Math.min(s.length,B-t);for(let e=0;e<n;++e){const a=s[e]&32767;a<XI&&(NA[a]+=1)}t+=n}let E=0;for(let i=0;i<kI;++i){const s=E+NA[i];NA[i]=E,E=s}t=0;for(let i=0;i<C;++i){const s=g[i],n=Math.min(s.length,B-t);for(let e=0;e<n;++e){const a=s[e]&32767;a<XI&&(I[NA[a]]=t+e,NA[a]+=1)}t+=n}if(NA[kI-1]!==E)throw new Error(`Expected ${E} active splats but got ${NA[kI-1]}`);return{activeSplats:E,ordering:I}}const jI=[];function Wg(B){jI.push(B)}async function PB(){self.addEventListener("message",Wg),await Cg(),self.removeEventListener("message",Wg),self.addEventListener("message",jg);for(const B of jI)jg(B);jI.length=0}PB().catch(console.error)})();\n//# sourceMappingURL=worker-nBknguyA.js.map\n', aI = typeof self < "u" && self.Blob && new Blob([YQ], { type: "text/javascript;charset=utf-8" });
function oo(t) {
  let A;
  try {
    if (A = aI && (self.URL || self.webkitURL).createObjectURL(aI), !A) throw "";
    const e = new Worker(A, {
      name: t == null ? void 0 : t.name
    });
    return e.addEventListener("error", () => {
      (self.URL || self.webkitURL).revokeObjectURL(A);
    }), e;
  } catch {
    return new Worker(
      "data:text/javascript;charset=utf-8," + encodeURIComponent(YQ),
      {
        name: t == null ? void 0 : t.name
      }
    );
  } finally {
    A && (self.URL || self.webkitURL).revokeObjectURL(A);
  }
}
class ro {
  constructor() {
    this.messages = {}, this.messageIdNext = 0, this.worker = new oo(), this.worker.onmessage = (A) => this.onMessage(A);
  }
  makeMessageId() {
    return ++this.messageIdNext;
  }
  makeMessagePromiseId() {
    const A = this.makeMessageId(), e = new Promise((I, g) => {
      this.messages[A] = { resolve: I, reject: g };
    });
    return { id: A, promise: e };
  }
  onMessage(A) {
    const { id: e, result: I, error: g } = A.data, s = this.messages[e];
    s && (delete this.messages[e], g ? s.reject(g) : s.resolve(I));
  }
  // Invoke an RPC on the worker with the given name and arguments.
  // The normal usage of a worker is to run one activity at a time,
  // but this function allows for concurrent calls, tagging each request
  // with a unique message Id and awaiting a response to that same Id.
  // The method will automatically transfer any ArrayBuffers in the
  // arguments to the worker. If you'd like to transfer a copy of a
  // buffer then you must clone it before passing to this function.
  async call(A, e) {
    const { id: I, promise: g } = this.makeMessagePromiseId();
    return this.worker.postMessage(
      { name: A, args: e, id: I },
      { transfer: xg(e) }
    ), g;
  }
}
let JQ = 4, ae = 0;
const vQ = [], bQ = [];
async function co() {
  const t = vQ.shift();
  if (t)
    return t;
  if (ae < JQ) {
    const A = new ro();
    return ae += 1, A;
  }
  return new Promise((A) => {
    bQ.push(A);
  });
}
function ho(t) {
  if (ae > JQ) {
    ae -= 1;
    return;
  }
  const A = bQ.shift();
  if (A) {
    A(t);
    return;
  }
  vQ.push(t);
}
async function Et(t) {
  const A = await co();
  try {
    return await t(A);
  } finally {
    ho(A);
  }
}
class lo extends Ei {
  constructor(A) {
    super(A), this.fileLoader = new ai(A);
  }
  load(A, e, I, g) {
    const s = this.manager.resolveURL(
      (this.path ?? "") + (A ?? "")
    ), B = new Headers(this.requestHeader), Q = this.withCredentials ? "include" : "same-origin", i = new Request(s, { headers: B, credentials: Q });
    let C = this.fileType;
    this.manager.itemStart(s), oI(i, I).then(async (E) => {
      const n = [
        new ProgressEvent("progress", {
          lengthComputable: !0,
          loaded: E.byteLength,
          total: E.byteLength
        })
      ];
      function o() {
        if (I) {
          const h = n.every((w) => w.lengthComputable || w.loaded === 0 && w.total === 0), u = n.reduce((w, f) => w + f.loaded, 0), y = n.reduce((w, f) => w + f.total, 0);
          I(
            new ProgressEvent("progress", {
              lengthComputable: h,
              loaded: u,
              total: y
            })
          );
        }
      }
      const r = {}, l = [], c = eI(E);
      if (C === "pcsogs" && c === void 0)
        throw new Error("Invalid PC SOGS file");
      if (c !== void 0) {
        C = "pcsogs";
        for (const h of ["means", "scales", "quats", "sh0", "shN"]) {
          const u = c[h];
          if (u)
            for (const y of u.files) {
              const w = new URL(y, s).toString(), f = n.length;
              n.push(new ProgressEvent("progress")), this.manager.itemStart(w);
              const d = new Request(w, { headers: B, credentials: Q }), m = oI(d, (M) => {
                n[f] = M, o();
              }).then((M) => {
                r[y] = M;
              }).catch((M) => {
                throw this.manager.itemError(w), M;
              }).finally(() => {
                this.manager.itemEnd(w);
              });
              l.push(m);
            }
        }
      }
      if (await Promise.all(l), e) {
        const h = await KQ({
          input: E,
          extraFiles: r,
          fileType: C,
          pathOrUrl: s
        });
        this.packedSplats ? (this.packedSplats.initialize(h), e(this.packedSplats)) : e(new qA(h));
      }
    }).catch((E) => {
      this.manager.itemError(s), g == null || g(E);
    }).finally(() => {
      this.manager.itemEnd(s);
    });
  }
  async loadAsync(A, e) {
    return new Promise((I, g) => {
      this.load(
        A,
        (s) => {
          I(s);
        },
        e,
        g
      );
    });
  }
  parse(A) {
    return new _A({ packedSplats: A });
  }
}
async function oI(t, A) {
  const e = await fetch(t);
  if (!e.ok)
    throw new Error(
      `${e.status} "${e.statusText}" fetching URL: ${t.url}`
    );
  if (!e.body)
    throw new Error(`Response body is null for URL: ${t.url}`);
  const I = e.body.getReader(), g = Number.parseInt(
    e.headers.get("Content-Length") || "0"
  ), s = Number.isNaN(g) ? 0 : g;
  let B = 0;
  const Q = [];
  for (; ; ) {
    const { done: E, value: n } = await I.read();
    if (E)
      break;
    Q.push(n), B += n.length, A && A(
      new ProgressEvent("progress", {
        lengthComputable: s !== 0,
        loaded: B,
        total: s
      })
    );
  }
  const i = new Uint8Array(B);
  let C = 0;
  for (const E of Q)
    i.set(E, C), C += E.length;
  return i.buffer;
}
var vt = /* @__PURE__ */ ((t) => (t.PLY = "ply", t.SPZ = "spz", t.SPLAT = "splat", t.KSPLAT = "ksplat", t.PCSOGS = "pcsogs", t.PCSOGSZIP = "pcsogszip", t))(vt || {});
function TQ(t) {
  const A = new DataView(t.buffer);
  if ((A.getUint32(0, !0) & 16777215) === 7957616)
    return "ply";
  if ((A.getUint32(0, !0) & 16777215) === 559903) {
    const e = Hg(t, 4);
    return new DataView(e.buffer).getUint32(0, !0) === 1347635022 ? "spz" : void 0;
  }
  if (A.getUint32(0, !0) === 67324752)
    return wo(t) ? "pcsogszip" : void 0;
}
function uo(t) {
  const A = t.split(/[?#]/, 1)[0], e = Math.max(
    A.lastIndexOf("/"),
    A.lastIndexOf("\\")
  ), I = A.slice(e + 1), g = I.lastIndexOf(".");
  return g <= 0 || g === I.length - 1 ? "" : I.slice(g + 1).toLowerCase();
}
function HQ(t) {
  const A = uo(t);
  if (A === "ply")
    return "ply";
  if (A === "spz")
    return "spz";
  if (A === "splat")
    return "splat";
  if (A === "ksplat")
    return "ksplat";
}
function Dr(t) {
  return eI(t) !== void 0;
}
function eI(t) {
  try {
    let A;
    if (typeof t == "string")
      A = t;
    else {
      const I = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
      if (I.length > 65536)
        return;
      A = new TextDecoder().decode(I);
    }
    const e = JSON.parse(A);
    if (!e || typeof e != "object" || Array.isArray(e))
      return;
    for (const I of ["means", "scales", "quats", "sh0"])
      if (!e[I] || typeof e[I] != "object" || Array.isArray(e[I]) || !e[I].shape || !e[I].files || I !== "quats" && (!e[I].mins || !e[I].maxs))
        return;
    return e;
  } catch {
    return;
  }
}
function wo(t) {
  try {
    const A = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
    let e = null;
    const I = Ri(A, {
      filter: ({ name: s }) => s.split(/[\\/]/).pop() === "meta.json" ? (e = s, !0) : !1
    });
    if (!e)
      return;
    const g = eI(I[e]);
    return g ? { name: e, json: g } : void 0;
  } catch {
    return;
  }
}
async function KQ({
  input: t,
  extraFiles: A,
  fileType: e,
  pathOrUrl: I
}) {
  const g = t instanceof ArrayBuffer ? new Uint8Array(t) : t;
  let s = e;
  switch (e || (s = TQ(g), !s && I && (s = HQ(I))), s) {
    case "ply": {
      const B = new Ee({ fileBytes: g });
      await B.parseHeader();
      const Q = B.numSplats, i = pA(Q).maxSplats, C = { fileBytes: g, packedArray: new Uint32Array(i * 4) };
      return await Et(async (E) => {
        const { packedArray: n, numSplats: o, extra: r } = await E.call(
          "unpackPly",
          C
        );
        return { packedArray: n, numSplats: o, extra: r };
      });
    }
    case "spz":
      return await Et(async (B) => {
        const { packedArray: Q, numSplats: i, extra: C } = await B.call(
          "decodeSpz",
          {
            fileBytes: g
          }
        );
        return { packedArray: Q, numSplats: i, extra: C };
      });
    case "splat":
      return await Et(async (B) => {
        const { packedArray: Q, numSplats: i } = await B.call(
          "decodeAntiSplat",
          {
            fileBytes: g
          }
        );
        return { packedArray: Q, numSplats: i };
      });
    case "ksplat":
      return await Et(async (B) => {
        const { packedArray: Q, numSplats: i, extra: C } = await B.call(
          "decodeKsplat",
          { fileBytes: g }
        );
        return { packedArray: Q, numSplats: i, extra: C };
      });
    case "pcsogs":
      return await Et(async (B) => {
        const { packedArray: Q, numSplats: i, extra: C } = await B.call(
          "decodePcSogs",
          { fileBytes: g, extraFiles: A }
        );
        return { packedArray: Q, numSplats: i, extra: C };
      });
    case "pcsogszip":
      return await Et(async (B) => {
        const { packedArray: Q, numSplats: i, extra: C } = await B.call(
          "decodePcSogsZip",
          { fileBytes: g }
        );
        return { packedArray: Q, numSplats: i, extra: C };
      });
    default:
      throw new Error(`Unknown splat file type: ${s}`);
  }
}
class yo {
  constructor({ maxSplats: A = 1 } = {}) {
    this.numSplats = 0, this.maxSplats = pA(A).maxSplats, this.centers = new Float32Array(this.maxSplats * 3), this.scales = new Float32Array(this.maxSplats * 3), this.quaternions = new Float32Array(this.maxSplats * 4), this.opacities = new Float32Array(this.maxSplats), this.colors = new Float32Array(this.maxSplats * 3);
  }
  pushSplat() {
    const A = this.numSplats;
    return this.ensureIndex(A), this.numSplats += 1, A;
  }
  unpushSplat(A) {
    if (A === this.numSplats - 1)
      this.numSplats -= 1;
    else
      throw new Error("Cannot unpush splat from non-last position");
  }
  ensureCapacity(A) {
    if (A > this.maxSplats) {
      const e = Math.max(A, this.maxSplats * 2), I = new Float32Array(e * 3), g = new Float32Array(e * 3), s = new Float32Array(e * 4), B = new Float32Array(e), Q = new Float32Array(e * 3);
      if (I.set(this.centers), g.set(this.scales), s.set(this.quaternions), B.set(this.opacities), Q.set(this.colors), this.centers = I, this.scales = g, this.quaternions = s, this.opacities = B, this.colors = Q, this.sh1) {
        const i = new Float32Array(e * 9);
        i.set(this.sh1), this.sh1 = i;
      }
      if (this.sh2) {
        const i = new Float32Array(e * 15);
        i.set(this.sh2), this.sh2 = i;
      }
      if (this.sh3) {
        const i = new Float32Array(e * 21);
        i.set(this.sh3), this.sh3 = i;
      }
      this.maxSplats = e;
    }
  }
  ensureIndex(A) {
    this.ensureCapacity(A + 1);
  }
  setCenter(A, e, I, g) {
    this.centers[A * 3] = e, this.centers[A * 3 + 1] = I, this.centers[A * 3 + 2] = g;
  }
  setScale(A, e, I, g) {
    this.scales[A * 3] = e, this.scales[A * 3 + 1] = I, this.scales[A * 3 + 2] = g;
  }
  setQuaternion(A, e, I, g, s) {
    this.quaternions[A * 4] = e, this.quaternions[A * 4 + 1] = I, this.quaternions[A * 4 + 2] = g, this.quaternions[A * 4 + 3] = s;
  }
  setOpacity(A, e) {
    this.opacities[A] = e;
  }
  setColor(A, e, I, g) {
    this.colors[A * 3] = e, this.colors[A * 3 + 1] = I, this.colors[A * 3 + 2] = g;
  }
  setSh1(A, e) {
    this.sh1 || (this.sh1 = new Float32Array(this.maxSplats * 9));
    for (let I = 0; I < 9; ++I)
      this.sh1[A * 9 + I] = e[I];
  }
  setSh2(A, e) {
    this.sh2 || (this.sh2 = new Float32Array(this.maxSplats * 15));
    for (let I = 0; I < 15; ++I)
      this.sh2[A * 15 + I] = e[I];
  }
  setSh3(A, e) {
    this.sh3 || (this.sh3 = new Float32Array(this.maxSplats * 21));
    for (let I = 0; I < 21; ++I)
      this.sh3[A * 21 + I] = e[I];
  }
}
var Do = `precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out uvec4 target;

{{ GLOBALS }}

void produceSplat(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        produceSplat(index);
    } else {
        target = uvec4(0u, 0u, 0u, 0u);
    }
}`;
const gA = class gA {
  constructor(A = {}) {
    this.maxSplats = 0, this.numSplats = 0, this.packedArray = null, this.isInitialized = !1, this.target = null, this.source = null, this.needsUpdate = !0, this.extra = {}, this.dyno = new II({ packedSplats: this }), this.initialized = Promise.resolve(this), this.reinitialize(A);
  }
  reinitialize(A) {
    this.isInitialized = !1, A.url || A.fileBytes || A.construct ? this.initialized = this.asyncInitialize(A).then(() => (this.isInitialized = !0, this)) : (this.initialize(A), this.isInitialized = !0, this.initialized = Promise.resolve(this));
  }
  initialize(A) {
    A.packedArray ? (this.packedArray = A.packedArray, this.maxSplats = Math.floor(this.packedArray.length / 4), this.maxSplats = Math.floor(this.maxSplats / O) * O, this.numSplats = Math.min(
      this.maxSplats,
      A.numSplats ?? Number.POSITIVE_INFINITY
    )) : (this.maxSplats = A.maxSplats ?? 0, this.numSplats = 0), this.extra = A.extra ?? {};
  }
  async asyncInitialize(A) {
    const { url: e, fileBytes: I, construct: g } = A;
    if (e) {
      const s = new lo();
      s.packedSplats = this, await s.loadAsync(e);
    } else if (I) {
      const s = await KQ({
        input: I,
        fileType: A.fileType,
        pathOrUrl: A.fileName ?? e
      });
      this.initialize(s);
    }
    if (g) {
      const s = g(this);
      s instanceof Promise && await s;
    }
  }
  // Call this when you are finished with the PackedSplats and want to free
  // any buffers it holds.
  dispose() {
    this.target && (this.target.dispose(), this.target = null), this.source && (this.source.dispose(), this.source = null);
  }
  // Ensures that this.packedArray can fit numSplats Gsplats. If it's too small,
  // resize exponentially and copy over the original data.
  //
  // Typically you don't need to call this, because calling this.setSplat(index, ...)
  // and this.pushSplat(...) will automatically call ensureSplats() so we have
  // enough splats.
  ensureSplats(A) {
    const e = A <= this.maxSplats ? this.maxSplats : (
      // Grow exponentially to avoid frequent reallocations
      Math.max(A, 2 * this.maxSplats)
    ), I = this.packedArray ? this.packedArray.length / 4 : 0;
    if (!this.packedArray || e > I) {
      this.maxSplats = pA(e).maxSplats;
      const g = new Uint32Array(this.maxSplats * 4);
      this.packedArray && g.set(this.packedArray), this.packedArray = g;
    }
    return this.packedArray;
  }
  // Ensure the extra array for the given level is large enough to hold numSplats
  ensureSplatsSh(A, e) {
    let I, g;
    if (A === 0)
      return this.ensureSplats(e);
    if (A === 1)
      I = 2, g = "sh1";
    else if (A === 2)
      I = 4, g = "sh2";
    else if (A === 3)
      I = 4, g = "sh3";
    else
      throw new Error(`Invalid level: ${A}`);
    let s = this.extra[g] ? this.extra[g].length / I : 0;
    const B = e <= s ? s : Math.max(e, 2 * s);
    if (!this.extra[g] || B > s) {
      s = pA(B).maxSplats;
      const Q = new Uint32Array(s * I);
      this.extra[g] && Q.set(this.extra[g]), this.extra[g] = Q;
    }
    return this.extra[g];
  }
  // Unpack the 16-byte Gsplat data at index into the Three.js components
  // center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion,
  // opacity: number 0..1, color: THREE.Color 0..1.
  getSplat(A) {
    if (!this.packedArray || A >= this.numSplats)
      throw new Error("Invalid index");
    return Ye(this.packedArray, A);
  }
  // Set all PackedSplat components at index with the provided Gsplat attributes
  // (can be the same objects returned by getSplat). Ensures there is capacity
  // for at least index+1 Gsplats.
  setSplat(A, e, I, g, s, B) {
    const Q = this.ensureSplats(A + 1);
    Le(
      Q,
      A,
      e.x,
      e.y,
      e.z,
      I.x,
      I.y,
      I.z,
      g.x,
      g.y,
      g.z,
      g.w,
      s,
      B.r,
      B.g,
      B.b
    ), this.numSplats = Math.max(this.numSplats, A + 1);
  }
  // Effectively calls this.setSplat(this.numSplats++, center, ...), useful on
  // construction where you just want to iterate and create a collection of Gsplats.
  pushSplat(A, e, I, g, s) {
    const B = this.ensureSplats(this.numSplats + 1);
    Le(
      B,
      this.numSplats,
      A.x,
      A.y,
      A.z,
      e.x,
      e.y,
      e.z,
      I.x,
      I.y,
      I.z,
      I.w,
      g,
      s.r,
      s.g,
      s.b
    ), ++this.numSplats;
  }
  // Iterate over Gsplats index 0..=(this.numSplats-1), unpack each Gsplat
  // and invoke the callback function with the Gsplat attributes.
  forEachSplat(A) {
    if (!(!this.packedArray || !this.numSplats))
      for (let e = 0; e < this.numSplats; ++e) {
        const I = Ye(this.packedArray, e);
        A(
          e,
          I.center,
          I.scales,
          I.quaternion,
          I.opacity,
          I.color
        );
      }
  }
  // Ensures our PackedSplats.target render target has enough space to generate
  // maxSplats total Gsplats, and reallocate if not large enough.
  ensureGenerate(A) {
    if (this.target && (A ?? 1) <= this.maxSplats)
      return !1;
    this.dispose();
    const e = pA(A ?? 1), { width: I, height: g, depth: s } = e;
    return this.maxSplats = e.maxSplats, this.target = new a.WebGLArrayRenderTarget(I, g, s, {
      depthBuffer: !1,
      stencilBuffer: !1,
      generateMipmaps: !1,
      magFilter: a.NearestFilter,
      minFilter: a.NearestFilter
    }), this.target.texture.format = a.RGBAIntegerFormat, this.target.texture.type = a.UnsignedIntType, this.target.texture.internalFormat = "RGBA32UI", this.target.scissorTest = !0, !0;
  }
  // Given an array of splatCounts (.numSplats for each
  // SplatGenerator/SplatMesh in the scene), compute a
  // "mapping layout" in the composite array of generated outputs.
  generateMapping(A) {
    let e = 0;
    const I = A.map((g) => {
      const s = e, B = Math.ceil(g / O) * O;
      return e += B, { base: s, count: g };
    });
    return { maxSplats: e, mapping: I };
  }
  // Returns a THREE.DataArrayTexture representing the PackedSplats content as
  // a Uint32x4 data array texture (2048 x 2048 x depth in size)
  getTexture() {
    return this.target ? this.target.texture : this.source || this.packedArray ? this.maybeUpdateSource() : gA.getEmpty();
  }
  // Check if source texture needs to be created/updated
  maybeUpdateSource() {
    if (!this.packedArray)
      throw new Error("No packed splats");
    if (this.needsUpdate || !this.source) {
      if (this.needsUpdate = !1, this.source) {
        const { width: A, height: e, depth: I } = this.source.image;
        this.maxSplats !== A * e * I && (this.source.dispose(), this.source = null);
      }
      if (this.source)
        this.packedArray.buffer !== this.source.image.data.buffer && (this.source.image.data = new Uint8Array(this.packedArray.buffer));
      else {
        const { width: A, height: e, depth: I } = pA(this.maxSplats);
        this.source = new a.DataArrayTexture(
          this.packedArray,
          A,
          e,
          I
        ), this.source.format = a.RGBAIntegerFormat, this.source.type = a.UnsignedIntType, this.source.internalFormat = "RGBA32UI", this.source.needsUpdate = !0;
      }
      this.source.needsUpdate = !0;
    }
    return this.source;
  }
  // Can be used where you need an uninitialized THREE.DataArrayTexture like
  // a uniform you will update with the result of this.getTexture() later.
  static getEmpty() {
    if (!gA.emptySource) {
      const { width: A, height: e, depth: I, maxSplats: g } = pA(1), s = new Uint32Array(g * 4);
      gA.emptySource = new a.DataArrayTexture(
        s,
        A,
        e,
        I
      ), gA.emptySource.format = a.RGBAIntegerFormat, gA.emptySource.type = a.UnsignedIntType, gA.emptySource.internalFormat = "RGBA32UI", gA.emptySource.needsUpdate = !0;
    }
    return gA.emptySource;
  }
  // Get a program and THREE.RawShaderMaterial for a given GsplatGenerator,
  // generating it if necessary and caching the result.
  prepareProgramMaterial(A) {
    let e = gA.generatorProgram.get(A);
    if (!e) {
      const g = NA(
        { index: "int" },
        { output: "uvec4" },
        ({ index: s }) => {
          A.inputs.index = s;
          const B = A.outputs.gsplat;
          return { output: jI(B) };
        }
      );
      gA.programTemplate || (gA.programTemplate = new We(
        Do
      )), e = new Oe({
        graph: g,
        inputs: { index: "index" },
        outputs: { output: "target" },
        template: gA.programTemplate
      }), Object.assign(e.uniforms, {
        targetLayer: { value: 0 },
        targetBase: { value: 0 },
        targetCount: { value: 0 }
      }), gA.generatorProgram.set(A, e);
    }
    const I = e.prepareMaterial();
    return gA.fullScreenQuad.material = I, { program: e, material: I };
  }
  saveRenderState(A) {
    return {
      xrEnabled: A.xr.enabled,
      autoClear: A.autoClear
    };
  }
  resetRenderState(A, e) {
    A.setRenderTarget(null), A.xr.enabled = e.xrEnabled, A.autoClear = e.autoClear;
  }
  // Executes a dyno program specified by generator which is any DynoBlock that
  // maps { index: "int" } to { gsplat: Gsplat }. This is called in
  // SparkRenderer.updateInternal() to re-generate Gsplats in the scene for
  // SplatGenerator instances whose version is newer than what was generated
  // for it last time.
  generate({
    generator: A,
    base: e,
    count: I,
    renderer: g
  }) {
    if (!this.target)
      throw new Error("Target must be initialized with ensureSplats");
    if (e + I > this.maxSplats)
      throw new Error("Base + count exceeds maxSplats");
    const { program: s, material: B } = this.prepareProgramMaterial(A);
    s.update();
    const Q = this.saveRenderState(g), i = Math.ceil((e + I) / O) * O, C = O * gt;
    for (B.uniforms.targetBase.value = e, B.uniforms.targetCount.value = I; e < i; ) {
      const E = Math.floor(e / C);
      B.uniforms.targetLayer.value = E;
      const n = E * C, o = Math.floor((e - n) / O), r = Math.min(
        gt,
        Math.ceil((i - n) / O)
      );
      this.target.scissor.set(
        0,
        o,
        O,
        r - o
      ), g.setRenderTarget(this.target, E), g.xr.enabled = !1, g.autoClear = !1, gA.fullScreenQuad.render(g), e += O * (r - o);
    }
    return this.resetRenderState(g, Q), { nextBase: i };
  }
};
gA.emptySource = null, gA.programTemplate = null, gA.generatorProgram = /* @__PURE__ */ new Map(), gA.fullScreenQuad = new lI(
  new a.RawShaderMaterial({ visible: !1 })
);
let qA = gA;
class II extends x {
  constructor({ packedSplats: A } = {}) {
    super({
      key: "packedSplats",
      type: Xt,
      globals: () => [he],
      value: {
        texture: qA.getEmpty(),
        numSplats: 0
      },
      update: (e) => {
        var I, g;
        return e.texture = ((I = this.packedSplats) == null ? void 0 : I.getTexture()) ?? qA.getEmpty(), e.numSplats = ((g = this.packedSplats) == null ? void 0 : g.numSplats) ?? 0, e;
      }
    }), this.packedSplats = A;
  }
}
class Ke extends a.InstancedBufferGeometry {
  constructor(A, e) {
    super(), this.ordering = A, this.setAttribute("position", new a.BufferAttribute(fo, 3)), this.setIndex(new a.BufferAttribute(po, 1)), this._maxInstanceCount = A.length, this.instanceCount = e, this.attribute = new a.InstancedBufferAttribute(A, 1, !1, 1), this.attribute.setUsage(a.DynamicDrawUsage), this.setAttribute("splatIndex", this.attribute);
  }
  update(A, e) {
    this.ordering = A, this.attribute.array = A, this.instanceCount = e, this.attribute.addUpdateRange(0, e), this.attribute.needsUpdate = !0;
  }
}
const fo = new Float32Array([
  -1,
  -1,
  0,
  1,
  -1,
  0,
  1,
  1,
  0,
  -1,
  1,
  0
]), po = new Uint16Array([0, 1, 2, 0, 2, 3]), It = class It {
  constructor(A) {
    if (this.lastTime = null, this.encodeLinear = !1, this.superXY = 1, this.display = null, this.sorting = null, this.pending = null, this.sortingCheck = !1, this.readback16 = new Uint16Array(0), this.readback32 = new Uint32Array(0), this.spark = A.spark, this.camera = A.camera, this.viewToWorld = A.viewToWorld ?? new a.Matrix4(), A.target) {
      const { width: e, height: I, doubleBuffer: g } = A.target, s = Math.max(1, Math.min(4, A.target.superXY ?? 1));
      if (this.superXY = s, e * s > 8192 || I * s > 8192)
        throw new Error("Target size too large");
      this.target = new a.WebGLRenderTarget(
        e * s,
        I * s,
        {
          format: a.RGBAFormat,
          type: a.UnsignedByteType,
          colorSpace: a.SRGBColorSpace
        }
      ), g && (this.back = new a.WebGLRenderTarget(
        e * s,
        I * s,
        {
          format: a.RGBAFormat,
          type: a.UnsignedByteType,
          colorSpace: a.SRGBColorSpace
        }
      )), this.encodeLinear = !0;
    }
    this.onTextureUpdated = A.onTextureUpdated, this.sortRadial = A.sortRadial ?? !0, this.sortDistance = A.sortDistance, this.sortCoorient = A.sortCoorient, this.depthBias = A.depthBias, this.sort360 = A.sort360, this.sort32 = A.sort32, this.orderingFreelist = new Rg({
      allocate: (e) => new Uint32Array(e),
      valid: (e, I) => e.length === I
    }), this.autoUpdate = !1, this.setAutoUpdate(A.autoUpdate ?? !1);
  }
  // Call this when you are done with the SparkViewpoint and want to
  // free up its resources (GPU targets, pixel buffers, etc.)
  dispose() {
    var A;
    this.setAutoUpdate(!1), this.target && (this.target.dispose(), this.target = void 0), this.back && (this.back.dispose(), this.back = void 0), this.display && (this.spark.releaseAccumulator(this.display.accumulator), this.display.geometry.dispose(), this.display = null), (A = this.pending) != null && A.accumulator && (this.spark.releaseAccumulator(this.pending.accumulator), this.pending = null);
  }
  // Use this function to change whether this viewpoint will auto-update
  // its sort order whenever the attached SparkRenderer updates the Gsplats.
  // Turn this on or off depending on whether you expect to do renders from
  // this viewpoint most frames.
  setAutoUpdate(A) {
    !this.autoUpdate && A ? this.spark.autoViewpoints.push(this) : this.autoUpdate && !A && (this.spark.autoViewpoints = this.spark.autoViewpoints.filter(
      (e) => e !== this
    )), this.autoUpdate = A;
  }
  // See below async prepareRenderPixels() for explanation of parameters.
  // Awaiting this method updates the Gsplats in the scene and performs a sort of the
  // Gsplats from this viewpoint, preparing it for a subsequent this.renderTarget()
  // call in the same tick.
  async prepare({
    scene: A,
    camera: e,
    viewToWorld: I,
    update: g,
    forceOrigin: s
  }) {
    var Q;
    for (I ? this.viewToWorld = I : (this.camera = e ?? this.camera, this.camera && (this.camera.updateMatrixWorld(), this.viewToWorld = this.camera.matrixWorld.clone())); g ?? !0; ) {
      const i = s ? this.viewToWorld : void 0;
      if (this.spark.updateInternal({ scene: A, originToWorld: i }))
        break;
      await new Promise((E) => setTimeout(E, 10));
    }
    const B = this.spark.active;
    B !== ((Q = this.display) == null ? void 0 : Q.accumulator) && (this.spark.active.refCount += 1), await this.sortUpdate({ accumulator: B, viewToWorld: this.viewToWorld });
  }
  // Render out the viewpoint to the view target RGBA buffer.
  // Swaps buffers if doubleBuffer: true was set.
  // Calls onTextureUpdated(texture) with the resulting texture.
  renderTarget({
    scene: A,
    camera: e
  }) {
    var g;
    const I = this.back ?? this.target;
    if (!I)
      throw new Error("Must initialize SparkViewpoint with target");
    if (e = e ?? this.camera, !e)
      throw new Error("Must provide camera");
    if (e instanceof a.PerspectiveCamera) {
      const s = new a.PerspectiveCamera().copy(e, !1);
      s.aspect = I.width / I.height, s.updateProjectionMatrix(), e = s;
    }
    this.viewToWorld = e.matrixWorld.clone();
    try {
      this.spark.renderer.setRenderTarget(I), this.spark.prepareViewpoint(this), this.spark.renderer.render(A, e);
    } finally {
      this.spark.prepareViewpoint(this.spark.defaultView), this.spark.renderer.setRenderTarget(null);
    }
    I !== this.target && ([this.target, this.back] = [this.back, this.target]), (g = this.onTextureUpdated) == null || g.call(this, I.texture);
  }
  // Read back the previously rendered target image as a Uint8Array of packed
  // RGBA values (in that order). If superXY was set greater than 1 then
  // downsampling is performed in the target pixel array with simple averaging
  // to derive the returned pixel values. Subsequent calls to this.readTarget()
  // will reuse the same buffers to minimize memory allocations.
  async readTarget() {
    if (!this.target)
      throw new Error("Must initialize SparkViewpoint with target");
    const { width: A, height: e } = this.target, I = A * e * 4;
    (!this.superPixels || this.superPixels.length < I) && (this.superPixels = new Uint8Array(I)), await this.spark.renderer.readRenderTargetPixelsAsync(
      this.target,
      0,
      0,
      A,
      e,
      this.superPixels
    );
    const { superXY: g } = this;
    if (g === 1)
      return this.superPixels;
    const s = A / g, B = e / g, Q = s * B * 4;
    (!this.pixels || this.pixels.length < Q) && (this.pixels = new Uint8Array(Q));
    const { superPixels: i, pixels: C } = this, E = g * g;
    for (let n = 0; n < B; n++) {
      const o = n * s;
      for (let r = 0; r < s; r++) {
        const l = r * g;
        let c = 0, h = 0, u = 0, y = 0;
        for (let f = 0; f < g; f++) {
          const d = (n * g + f) * this.target.width;
          for (let m = 0; m < g; m++) {
            const M = (d + l + m) * 4;
            c += i[M], h += i[M + 1], u += i[M + 2], y += i[M + 3];
          }
        }
        const w = (o + r) * 4;
        C[w] = c / E, C[w + 1] = h / E, C[w + 2] = u / E, C[w + 3] = y / E;
      }
    }
    return C;
  }
  // Render out a viewpoint as a Uint8Array of RGBA values for the provided scene
  // and any camera/viewToWorld viewpoint overrides. By default update is true,
  // which triggers its SparkRenderer to check and potentially update the Gsplats.
  // Setting update to false disables this and sorts the Gsplats as they are.
  // Setting forceOrigin (default: false) to true forces the view update to
  // recalculate the splats with this view origin, potentially altering any
  // view-dependent effects. If you expect view-dependent effects to play a role
  // in the rendering quality, enable this.
  //
  // Underneath, prepareRenderPixels() simply calls await this.prepare(...),
  // this.renderTarget(...), and finally returns the result this.readTarget(),
  // a Promise to a Uint8Array with RGBA values for all the pixels (potentially
  // downsampled if the superXY parameter was used). These steps can also be called
  // manually, for example if you need to alter the scene before and after
  // this.renderTarget(...) to hide UI elements from being rendered.
  async prepareRenderPixels({
    scene: A,
    camera: e,
    viewToWorld: I,
    update: g,
    forceOrigin: s
  }) {
    return await this.prepare({ scene: A, camera: e, viewToWorld: I, update: g, forceOrigin: s }), this.renderTarget({ scene: A, camera: e }), this.readTarget();
  }
  // This is called automatically by SparkRenderer, there is no need to call it!
  // The method cannot be private because then SparkRenderer would
  // not be able to call it.
  autoPoll({ accumulator: A }) {
    var s, B, Q, i;
    this.camera && (this.camera.updateMatrixWorld(), this.viewToWorld = this.camera.matrixWorld.clone());
    let e = !1, I = !1;
    if (!this.display)
      e = !0;
    else if (A) {
      e = !0;
      const { mappingVersion: C } = this.display.accumulator;
      A.mappingVersion === C && (this.spark.releaseAccumulator(this.display.accumulator), this.display.accumulator = A, I = !0);
    }
    const g = ((s = this.sorting) == null ? void 0 : s.viewToWorld) ?? ((B = this.display) == null ? void 0 : B.viewToWorld);
    g && !ie({
      matrix1: this.viewToWorld,
      matrix2: g,
      // By default update sort each 1 cm
      maxDistance: this.sortDistance ?? 0.01,
      // By default for radial sort, update for intermittent movement so that
      // we bring back splats culled by being behind the camera.
      // For depth sort, small rotations can change sort order a lot, so
      // update sort for even small rotations.
      minCoorient: this.sortCoorient ?? this.sortRadial ? 0.99 : 0.999
    }) && (e = !0), e && (A && (A.refCount += 1), A && ((Q = this.pending) != null && Q.accumulator) && this.pending.accumulator !== ((i = this.display) == null ? void 0 : i.accumulator) && this.spark.releaseAccumulator(this.pending.accumulator), this.pending = { accumulator: A, viewToWorld: this.viewToWorld, displayed: I }, this.driveSort());
  }
  async driveSort() {
    var A;
    for (; ; ) {
      if (this.sorting || !this.pending)
        return;
      const { viewToWorld: e, displayed: I } = this.pending;
      let g = this.pending.accumulator ?? ((A = this.display) == null ? void 0 : A.accumulator);
      if (g || (g = this.spark.active, g.refCount += 1), this.pending = null, !g)
        throw new Error("No accumulator to sort");
      this.sorting = { viewToWorld: e }, await this.sortUpdate({ accumulator: g, viewToWorld: e, displayed: I }), this.sorting = null;
    }
  }
  async sortUpdate({
    accumulator: A,
    viewToWorld: e,
    displayed: I = !1
  }) {
    if (this.sortingCheck)
      throw new Error("Only one sort at a time");
    this.sortingCheck = !0, A = A ?? this.spark.active;
    const { numSplats: g, maxSplats: s } = A.splats;
    let B = 0, Q = this.orderingFreelist.alloc(s);
    if (g > 0) {
      const {
        reader: i,
        doubleSortReader: C,
        sort32Reader: E,
        dynoSortRadial: n,
        dynoOrigin: o,
        dynoDirection: r,
        dynoDepthBias: l,
        dynoSort360: c,
        dynoSplats: h
      } = It.makeSorter(), u = this.sort32 ?? !1;
      let y;
      if (u)
        this.readback32 = i.ensureBuffer(s, this.readback32), y = this.readback32;
      else {
        const p = Math.ceil(s / 2);
        this.readback16 = i.ensureBuffer(p, this.readback16), y = this.readback16;
      }
      const w = A.toWorld.clone().invert(), f = e.clone().premultiply(w);
      n.value = this.sort360 ? !0 : this.sortRadial, o.value.set(0, 0, 0).applyMatrix4(f), r.value.set(0, 0, -1).applyMatrix4(f).sub(o.value).normalize(), l.value = this.depthBias ?? 1, c.value = this.sort360 ?? !1, h.packedSplats = A.splats;
      const d = u ? E : C, m = u ? g : Math.ceil(g / 2);
      await i.renderReadback({
        renderer: this.spark.renderer,
        reader: d,
        count: m,
        readback: y
      });
      const M = await Et(async (p) => {
        const D = u ? "sort32Splats" : "sortDoubleSplats";
        return p.call(D, {
          maxSplats: s,
          numSplats: g,
          readback: y,
          ordering: Q
        });
      });
      u ? this.readback32 = M.readback : this.readback16 = M.readback, Q = M.ordering, B = M.activeSplats;
    }
    this.updateDisplay({
      accumulator: A,
      viewToWorld: e,
      ordering: Q,
      activeSplats: B,
      displayed: I
    }), this.sortingCheck = !1;
  }
  updateDisplay({
    accumulator: A,
    viewToWorld: e,
    ordering: I,
    activeSplats: g,
    displayed: s = !1
  }) {
    if (!this.display)
      this.display = {
        accumulator: A,
        viewToWorld: e,
        geometry: new Ke(I, g)
      };
    else {
      !s && A !== this.display.accumulator && (this.spark.releaseAccumulator(this.display.accumulator), this.display.accumulator = A), this.display.viewToWorld = e;
      const B = this.display.geometry.ordering;
      B.length === I.length ? this.display.geometry.update(I, g) : (this.display.geometry.dispose(), this.display.geometry = new Ke(I, g)), this.orderingFreelist.free(B);
    }
    this.spark.viewpoint === this && this.spark.prepareViewpoint(this);
  }
  static makeSorter() {
    if (!It.dynos) {
      const A = new Qe({ value: !0 }), e = new St({ value: new a.Vector3() }), I = new St({ value: new a.Vector3() }), g = new ot({ value: 1 }), s = new Qe({ value: !1 }), B = new II(), Q = new ne(), i = NA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: E }) => {
          if (!E)
            throw new Error("No index");
          const n = {
            sortRadial: A,
            sortOrigin: e,
            sortDirection: I,
            sortDepthBias: g,
            sort360: s
          }, o = EA(E, K("int", 2)), r = mt(B, o), l = Se({ gsplat: r, ...n }), c = mt(
            B,
            dA(o, K("int", 1))
          ), h = Se({ gsplat: c, ...n }), u = KA({
            vectorType: "vec2",
            x: l,
            y: h
          });
          return { rgba8: ve(Vs(u)) };
        }
      ), C = NA(
        { index: "int" },
        { rgba8: "vec4" },
        ({ index: E }) => {
          if (!E)
            throw new Error("No index");
          const n = {
            sortRadial: A,
            sortOrigin: e,
            sortDirection: I,
            sortDepthBias: g,
            sort360: s
          }, o = mt(B, E), r = Se({ gsplat: o, ...n });
          return { rgba8: ve(Zs(r)) };
        }
      );
      It.dynos = {
        dynoSortRadial: A,
        dynoOrigin: e,
        dynoDirection: I,
        dynoDepthBias: g,
        dynoSort360: s,
        dynoSplats: B,
        reader: Q,
        doubleSortReader: i,
        sort32Reader: C
      };
    }
    return It.dynos;
  }
};
It.EMPTY_TEXTURE = new a.Texture(), It.dynos = null;
let oe = It;
const Mo = oA(`
  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {
    if (!isGsplatActive(gsplat.flags)) {
      return INFINITY;
    }

    vec3 center = gsplat.center - sortOrigin;
    float biasedDepth = dot(center, sortDirection) + sortDepthBias;
    if (!sort360 && (biasedDepth <= 0.0)) {
      return INFINITY;
    }

    return sortRadial ? length(center) : biasedDepth;
  }
`);
function Se({
  gsplat: t,
  sortRadial: A,
  sortOrigin: e,
  sortDirection: I,
  sortDepthBias: g,
  sort360: s
}) {
  return jt({
    inTypes: {
      gsplat: W,
      sortRadial: "bool",
      sortOrigin: "vec3",
      sortDirection: "vec3",
      sortDepthBias: "float",
      sort360: "bool"
    },
    outTypes: { metric: "float" },
    globals: () => [SA, Mo],
    inputs: {
      gsplat: t,
      sortRadial: A,
      sortOrigin: e,
      sortDirection: I,
      sortDepthBias: g,
      sort360: s
    },
    statements: ({ inputs: B, outputs: Q }) => {
      const {
        gsplat: i,
        sortRadial: C,
        sortOrigin: E,
        sortDirection: n,
        sortDepthBias: o,
        sort360: r
      } = B;
      return UA(`
        ${Q.metric} = computeSort(${i}, ${C}, ${E}, ${n}, ${o}, ${r});
      `);
    }
  }).outputs.metric;
}
class Ge {
  constructor() {
    this.splats = new qA(), this.toWorld = new a.Matrix4(), this.mapping = [], this.refCount = 0, this.splatsVersion = -1, this.mappingVersion = -1;
  }
  ensureGenerate(A) {
    this.splats.ensureGenerate(A) && (this.mapping = []);
  }
  // Generate all Gsplats from an array of generators
  generateSplats({
    renderer: A,
    modifier: e,
    generators: I,
    forceUpdate: g,
    originToWorld: s
  }) {
    const B = this.mapping.reduce((C, E) => (C.set(E.node, E), C), /* @__PURE__ */ new Map());
    let Q = 0, i = 0;
    for (const { node: C, generator: E, version: n, base: o, count: r } of I) {
      const l = B.get(C);
      if ((g || E !== (l == null ? void 0 : l.generator) || n !== (l == null ? void 0 : l.version) || o !== (l == null ? void 0 : l.base) || r !== (l == null ? void 0 : l.count)) && E && r > 0) {
        const c = e.apply(E);
        try {
          this.splats.generate({
            generator: c,
            base: o,
            count: r,
            renderer: A
          });
        } catch (h) {
          C.generator = void 0, C.generatorError = h;
        }
        Q += 1;
      }
      i = Math.max(i, o + r);
    }
    return this.splats.numSplats = i, this.toWorld = s, this.mapping = I, Q !== 0;
  }
  // Check if this accumulator has exactly the same generator mapping as
  // the previous one. If so, we can reuse the Gsplat sort order.
  hasCorrespondence(A) {
    return this.mapping.length !== A.mapping.length ? !1 : this.mapping.every(({ node: e, base: I, count: g }, s) => {
      const {
        node: B,
        base: Q,
        count: i
      } = A.mapping[s];
      return e === B && I === Q && g === i;
    });
  }
}
var Fo = `const float LN_SCALE_MIN = -12.0;
const float LN_SCALE_MAX = 9.0;
const float LN_RESCALE = (LN_SCALE_MAX - LN_SCALE_MIN) / 254.0; 

const uint SPLAT_TEX_WIDTH_BITS = 11u;
const uint SPLAT_TEX_HEIGHT_BITS = 11u;
const uint SPLAT_TEX_DEPTH_BITS = 11u;
const uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;

const uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;
const uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;
const uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;

const uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;
const uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;
const uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;

const uint F16_INF = 0x7c00u;
const float PI = 3.1415926535897932384626433832795;

const float INFINITY = 1.0 / 0.0;
const float NEG_INFINITY = -INFINITY;

float sqr(float x) {
    return x * x;
}

float pow4(float x) {
    float x2 = x * x;
    return x2 * x2;
}

float pow8(float x) {
    float x4 = pow4(x);
    return x4 * x4;
}

vec3 srgbToLinear(vec3 rgb) {
    return pow(rgb, vec3(2.2));
}

vec3 linearToSrgb(vec3 rgb) {
    return pow(rgb, vec3(1.0 / 2.2));
}

uint encodeQuatOctXy88R8(vec4 q) {
    
    if (q.w < 0.0) {
        q = -q;
    }
    
    float theta = 2.0 * acos(q.w);
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    
    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;
    
    
    
    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);
    vec2 p = vec2(axis.x, axis.y) / sum;
    
    if (axis.z < 0.0) {
        float oldPx = p.x;
        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);
        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);
    }
    
    float u_f = p.x * 0.5 + 0.5;
    float v_f = p.y * 0.5 + 0.5;
    
    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));
    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));
    
    
    
    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));
    
    
    return (angleInt << 16u) | (quantV << 8u) | quantU;
}

vec4 decodeQuatOctXy88R8(uint encoded) {
    
    uint quantU = encoded & uint(0xFFu);               
    uint quantV = (encoded >> 8u) & uint(0xFFu);         
    uint angleInt = encoded >> 16u;                      

    
    float u_f = float(quantU) / 255.0;
    float v_f = float(quantV) / 255.0;
    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);

    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));
    float t = max(-axis.z, 0.0);
    axis.x += (axis.x >= 0.0) ? -t : t;
    axis.y += (axis.y >= 0.0) ? -t : t;
    axis = normalize(axis);
    
    
    float theta = (float(angleInt) / 255.0) * 3.14159265359;
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    float w = cos(halfTheta);
    
    return vec4(axis * s, w);
}

    

    

    

    

    

    

    

    

    

    

uvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {
    uvec4 uRgba = uvec4(round(clamp(rgba * 255.0, 0.0, 255.0)));

    uint uQuat = encodeQuatOctXy88R8(quaternion);
    
    
    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);

    
    uvec3 uScales = uvec3(
        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u,
        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u,
        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - LN_SCALE_MIN) / LN_RESCALE, 0.0, 254.0))) + 1u
    );

    
    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);
    uint word1 = packHalf2x16(center.xy);
    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);
    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);
    return uvec4(word0, word1, word2, word3);
}

void unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {
    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;

    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);
    rgba = vec4(uRgba) / 255.0;

    center = vec4(
        unpackHalf2x16(word1),
        unpackHalf2x16(word2 & 0xffffu)
    ).xyz;

    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);
    scales = vec3(
        (uScales.x == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.x - 1u) * LN_RESCALE),
        (uScales.y == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.y - 1u) * LN_RESCALE),
        (uScales.z == 0u) ? 0.0 : exp(LN_SCALE_MIN + float(uScales.z - 1u) * LN_RESCALE)
    );

    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);
    quaternion = decodeQuatOctXy88R8(uQuat);
    
    
}

vec3 quatVec(vec4 q, vec3 v) {
    
    vec3 t = 2.0 * cross(q.xyz, v);
    return v + q.w * t + cross(q.xyz, t);
}

vec4 quatQuat(vec4 q1, vec4 q2) {
    return vec4(
        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,
        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,
        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,
        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z
    );
}

mat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {
    
    return mat3(
        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),
        s.x * (2.0 * (q.x * q.y + q.w * q.z)),
        s.x * (2.0 * (q.x * q.z - q.w * q.y)),
        s.y * (2.0 * (q.x * q.y - q.w * q.z)),
        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),
        s.y * (2.0 * (q.y * q.z + q.w * q.x)),
        s.z * (2.0 * (q.x * q.z + q.w * q.y)),
        s.z * (2.0 * (q.y * q.z - q.w * q.x)),
        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))
    );
}

vec4 slerp(vec4 q1, vec4 q2, float t) {
    
    float cosHalfTheta = dot(q1, q2);

    
    if (abs(cosHalfTheta) >= 0.999) {
        return q1;
    }
    
    
    
    if (cosHalfTheta < 0.0) {
        q2 = -q2;
        cosHalfTheta = -cosHalfTheta;
    }

    
    float halfTheta = acos(cosHalfTheta);
    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);

    
    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;
    float ratioB = sin(t * halfTheta) / sinHalfTheta;

    
    return q1 * ratioA + q2 * ratioB;
}

ivec3 splatTexCoord(int index) {
    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;
    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;
    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;
    return ivec3(x, y, z);
}`, mo = `precision highp float;
precision highp int;

#include <splatDefines>

uniform float near;
uniform float far;
uniform bool encodeLinear;
uniform float maxStdDev;
uniform float minAlpha;
uniform bool disableFalloff;
uniform float falloff;

uniform bool splatTexEnable;
uniform sampler3D splatTexture;
uniform mat2 splatTexMul;
uniform vec2 splatTexAdd;
uniform float splatTexNear;
uniform float splatTexFar;
uniform float splatTexMid;

out vec4 fragColor;

in vec4 vRgba;
in vec2 vSplatUv;
in vec3 vNdc;

void main() {
    vec4 rgba = vRgba;

    float z = dot(vSplatUv, vSplatUv);
    if (!splatTexEnable) {
        if (z > (maxStdDev * maxStdDev)) {
            discard;
        }
    } else {
        vec2 uv = splatTexMul * vSplatUv + splatTexAdd;
        float ndcZ = vNdc.z;
        float depth = (2.0 * near * far) / (far + near - ndcZ * (far - near));
        float clampedFar = max(splatTexFar, splatTexNear);
        float clampedDepth = clamp(depth, splatTexNear, clampedFar);
        float logDepth = log2(clampedDepth + 1.0);
        float logNear = log2(splatTexNear + 1.0);
        float logFar = log2(clampedFar + 1.0);

        float texZ;
        if (splatTexMid > 0.0) {
            float clampedMid = clamp(splatTexMid, splatTexNear, clampedFar);
            float logMid = log2(clampedMid + 1.0);
            texZ = (clampedDepth <= clampedMid) ?
                (0.5 * ((logDepth - logNear) / (logMid - logNear))) :
                (0.5 * ((logDepth - logMid) / (logFar - logMid)) + 0.5);
        } else {
            texZ = (logDepth - logNear) / (logFar - logNear);
        }

        vec4 modulate = texture(splatTexture, vec3(uv, 1.0 - texZ));
        rgba *= modulate;
    }

    rgba.a *= mix(1.0, exp(-0.5 * z), falloff);

    if (rgba.a < minAlpha) {
        discard;
    }
    if (encodeLinear) {
        rgba.rgb = srgbToLinear(rgba.rgb);
    }
    fragColor = rgba;
}`, No = `precision highp float;
precision highp int;
precision highp usampler2DArray;

#include <splatDefines>

attribute uint splatIndex;

out vec4 vRgba;
out vec2 vSplatUv;
out vec3 vNdc;

uniform vec2 renderSize;
uniform uint numSplats;
uniform vec4 renderToViewQuat;
uniform vec3 renderToViewPos;
uniform float maxStdDev;
uniform float maxPixelRadius;
uniform float time;
uniform float deltaTime;
uniform bool debugFlag;
uniform float minAlpha;
uniform bool enable2DGS;
uniform float blurAmount;
uniform float preBlurAmount;
uniform float focalDistance;
uniform float apertureAngle;
uniform float clipXY;
uniform float focalAdjustment;

uniform usampler2DArray packedSplats;

void main() {
    
    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);

    if (uint(gl_InstanceID) >= numSplats) {
        return;
    }
    if (splatIndex == 0xffffffffu) {
        
        return;
    }

    ivec3 texCoord = ivec3(
        splatIndex & SPLAT_TEX_WIDTH_MASK,
        (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
        splatIndex >> SPLAT_TEX_LAYER_BITS
    );
    uvec4 packed = texelFetch(packedSplats, texCoord, 0);

    vec3 center, scales;
    vec4 quaternion, rgba;
    unpackSplat(packed, center, scales, quaternion, rgba);

    if (rgba.a < minAlpha) {
        return;
    }
    bvec3 zeroScales = equal(scales, vec3(0.0));
    if (all(zeroScales)) {
        return;
    }

    
    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;

    
    if (viewCenter.z >= 0.0) {
        return;
    }

    
    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);

    
    if (abs(clipCenter.z) >= clipCenter.w) {
        return;
    }

    
    float clip = clipXY * clipCenter.w;
    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {
        return;
    }

    
    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);

    if (enable2DGS && any(zeroScales)) {
        vRgba = rgba;
        vSplatUv = position.xy * maxStdDev;

        vec3 offset;
        if (zeroScales.z) {
            offset = vec3(vSplatUv.xy * scales.xy, 0.0);
        } else if (zeroScales.y) {
            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);
        } else {
            offset = vec3(0.0, vSplatUv.xy * scales.yz);
        }

        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);
        gl_Position = projectionMatrix * vec4(viewPos, 1.0);
        vNdc = gl_Position.xyz / gl_Position.w;
        return;
    }

    
    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

    
    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);
    mat3 cov3D = RS * transpose(RS);

    
    vec2 scaledRenderSize = renderSize * focalAdjustment;
    vec2 focal = 0.5 * scaledRenderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);
    float invZ = 1.0 / viewCenter.z;
    vec2 J1 = focal * invZ;
    vec2 J2 = -(J1 * viewCenter.xy) * invZ;
    mat3 J = mat3(
        J1.x, 0.0, J2.x,
        0.0, J1.y, J2.y,
        0.0, 0.0, 0.0
    );

    
    
    
    
    
    
    
    mat3 cov2D = transpose(J) * cov3D * J;
    float a = cov2D[0][0];
    float d = cov2D[1][1];
    float b = cov2D[0][1];

    
    a += preBlurAmount;
    d += preBlurAmount;

    float fullBlurAmount = blurAmount;
    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {
        float focusRadius = maxPixelRadius;
        if (viewCenter.z < 0.0) {
            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);
            float apertureRadius = focal.x * tan(0.5 * apertureAngle);
            focusRadius = focusBlur * apertureRadius;
        }
        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(maxPixelRadius));
    }

    
    float detOrig = a * d - b * b;
    a += fullBlurAmount;
    d += fullBlurAmount;
    float det = a * d - b * b;

    
    float blurAdjust = sqrt(max(0.0, detOrig / det));
    rgba.a *= blurAdjust;
    if (rgba.a < minAlpha) {
        return;
    }

    
    float eigenAvg = 0.5 * (a + d);
    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));
    float eigen1 = eigenAvg + eigenDelta;
    float eigen2 = eigenAvg - eigenDelta;

    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));
    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);

    float scale1 = position.x * min(maxPixelRadius, maxStdDev * sqrt(eigen1));
    float scale2 = position.y * min(maxPixelRadius, maxStdDev * sqrt(eigen2));

    
    vec2 pixelOffset = eigenVec1 * scale1 + eigenVec2 * scale2;
    vec2 ndcOffset = (2.0 / scaledRenderSize) * pixelOffset;
    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);

    vRgba = rgba;
    vSplatUv = position.xy * maxStdDev;
    vNdc = ndc;
    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);
}`;
let ke = null;
function So() {
  return ke || (a.ShaderChunk.splatDefines = Fo, ke = {
    splatVertex: No,
    splatFragment: mo
  }), ke;
}
const rI = 5;
let qe = !1, ze = !1, qQ;
function Go(t) {
  let A = !1;
  return t instanceof _A ? !0 : (t.traverse((e) => {
    A = A || e instanceof _A;
  }), A);
}
const zQ = a.Scene.prototype.add;
a.Scene.prototype.add = function(t) {
  return qe = qe || Go(t), ze = ze || t instanceof re, zQ.call(this, t), this;
};
const ko = a.Scene.prototype.onBeforeRender;
a.Scene.prototype.onBeforeRender = function(t) {
  if (qe) {
    if (!ze) {
      const A = qQ || new re({ renderer: t });
      this.add(A);
    }
    a.Scene.prototype.onBeforeRender = ko, a.Scene.prototype.add = zQ;
  }
};
const QA = class QA extends a.Mesh {
  constructor(A) {
    const e = QA.makeUniforms(), I = So(), g = new a.ShaderMaterial({
      glslVersion: a.GLSL3,
      vertexShader: I.splatVertex,
      fragmentShader: I.splatFragment,
      uniforms: e,
      transparent: !0,
      blending: a.NormalBlending,
      depthTest: !0,
      depthWrite: !1,
      side: a.DoubleSide
    });
    super(cI, g), this.splatTexture = null, this.autoViewpoints = [], this.rotateToAccumulator = new _t({ value: new a.Quaternion() }), this.translateToAccumulator = new St({ value: new a.Vector3() }), this.lastFrame = -1, this.lastUpdateTime = null, this.defaultCameras = [], this.pendingUpdate = null, this.envViewpoint = null, this.frustumCulled = !1, this.renderer = A.renderer, this.material = g, this.uniforms = e;
    const s = NA(
      { gsplat: W },
      { gsplat: W },
      ({ gsplat: B }) => {
        if (!B)
          throw new Error("gsplat not defined");
        return B = Xe(B, {
          rotate: this.rotateToAccumulator,
          translate: this.translateToAccumulator
        }), { gsplat: B };
      }
    );
    this.modifier = new go(s), this.autoUpdate = A.autoUpdate ?? !0, this.preUpdate = A.preUpdate ?? !1, this.originDistance = A.originDistance ?? 1, this.maxStdDev = A.maxStdDev ?? Math.sqrt(8), this.maxPixelRadius = A.maxPixelRadius ?? 512, this.minAlpha = A.minAlpha ?? 0.5 * (1 / 255), this.enable2DGS = A.enable2DGS ?? !1, this.preBlurAmount = A.preBlurAmount ?? 0, this.blurAmount = A.blurAmount ?? 0.3, this.focalDistance = A.focalDistance ?? 0, this.apertureAngle = A.apertureAngle ?? 0, this.falloff = A.falloff ?? 1, this.clipXY = A.clipXY ?? 1.4, this.focalAdjustment = A.focalAdjustment ?? 1, this.active = new Ge(), this.accumulatorCount = 1, this.freeAccumulators = [];
    for (let B = 0; B < 1; ++B)
      this.freeAccumulators.push(new Ge()), this.accumulatorCount += 1;
    this.defaultView = new oe({
      ...A.view,
      autoUpdate: !0,
      spark: this
    }), this.viewpoint = this.defaultView, this.prepareViewpoint(this.viewpoint), this.clock = A.clock ? Ug(A.clock) : new a.Clock(), qQ = this;
  }
  static makeUniforms() {
    return {
      // Size of render viewport in pixels
      renderSize: { value: new a.Vector2() },
      // Near and far plane distances
      near: { value: 0.1 },
      far: { value: 1e3 },
      // Total number of Gsplats in packedSplats to render
      numSplats: { value: 0 },
      // SplatAccumulator to view transformation quaternion
      renderToViewQuat: { value: new a.Quaternion() },
      // SplatAccumulator to view transformation translation
      renderToViewPos: { value: new a.Vector3() },
      // Maximum distance (in stddevs) from Gsplat center to render
      maxStdDev: { value: 1 },
      // Maximum pixel radius for splat rendering
      maxPixelRadius: { value: 512 },
      // Minimum alpha value for splat rendering
      minAlpha: { value: 0.00196078431372549 },
      // Enable interpreting 0-thickness Gsplats as 2DGS
      enable2DGS: { value: !1 },
      // Add to projected 2D splat covariance diagonal (thickens and brightens)
      preBlurAmount: { value: 0 },
      // Add to 2D splat covariance diagonal and adjust opacity (anti-aliasing)
      blurAmount: { value: 0.3 },
      // Depth-of-field distance to focal plane
      focalDistance: { value: 0 },
      // Full-width angle of aperture opening (in radians)
      apertureAngle: { value: 0 },
      // Modulate Gaussian kernal falloff. 0 means "no falloff, flat shading",
      // 1 is normal e^-x^2 falloff.
      falloff: { value: 1 },
      // Clip Gsplats that are clipXY times beyond the +-1 frustum bounds
      clipXY: { value: 1.4 },
      // Debug renderSize scale factor
      focalAdjustment: { value: 1 },
      // Enable splat texture rendering
      splatTexEnable: { value: !1 },
      // Splat texture to render
      splatTexture: { type: "t", value: QA.EMPTY_SPLAT_TEXTURE },
      // Splat texture UV transform (multiply)
      splatTexMul: { value: new a.Matrix2() },
      // Splat texture UV transform (add)
      splatTexAdd: { value: new a.Vector2() },
      // Splat texture near plane distance
      splatTexNear: { value: 0.1 },
      // Splat texture far plane distance
      splatTexFar: { value: 1e3 },
      // Splat texture mid plane distance, or 0.0 to disable
      splatTexMid: { value: 0 },
      // Gsplat collection to render
      packedSplats: { type: "t", value: qA.getEmpty() },
      // Time in seconds for time-based effects
      time: { value: 0 },
      // Delta time in seconds since last frame
      deltaTime: { value: 0 },
      // Whether to encode Gsplat with linear RGB (for environment mapping)
      encodeLinear: { value: !1 },
      // Debug flag that alternates each frame
      debugFlag: { value: !1 }
    };
  }
  canAllocAccumulator() {
    return this.freeAccumulators.length > 0 || this.accumulatorCount < rI;
  }
  maybeAllocAccumulator() {
    let A = this.freeAccumulators.pop();
    if (A === void 0) {
      if (this.accumulatorCount >= rI)
        return null;
      A = new Ge(), this.accumulatorCount += 1;
    }
    return A.refCount = 1, A;
  }
  releaseAccumulator(A) {
    A.refCount -= 1, A.refCount === 0 && this.freeAccumulators.push(A);
  }
  newViewpoint(A) {
    return new oe({ ...A, spark: this });
  }
  onBeforeRender(A, e, I) {
    var r, l;
    const g = this.time ?? this.clock.getElapsedTime(), s = g - (this.viewpoint.lastTime ?? g);
    this.viewpoint.lastTime = g;
    const B = A.info.render.frame, Q = B !== this.lastFrame;
    this.lastFrame = B;
    const i = this.viewpoint;
    if (i === this.defaultView) {
      if (Q)
        if (!A.xr.isPresenting)
          this.defaultView.viewToWorld = I.matrixWorld.clone(), this.defaultCameras = [this.defaultView.viewToWorld];
        else {
          const c = A.xr.getCamera().cameras;
          this.defaultCameras = c.map((h) => h.matrixWorld), this.defaultView.viewToWorld = xo(this.defaultCameras) ?? new a.Matrix4();
        }
      this.autoUpdate && this.update({ scene: e, viewToWorld: this.defaultView.viewToWorld });
    }
    if (Q && (this.uniforms.time.value = g, this.uniforms.deltaTime.value = s, this.uniforms.debugFlag.value = performance.now() / 1e3 % 2 < 1), i.target)
      this.uniforms.renderSize.value.set(
        i.target.width,
        i.target.height
      );
    else {
      const c = A.getDrawingBufferSize(
        this.uniforms.renderSize.value
      );
      if (c.x === 1 && c.y === 1) {
        const h = (r = A.xr.getSession()) == null ? void 0 : r.renderState.baseLayer;
        h && (c.x = h.framebufferWidth, c.y = h.framebufferHeight);
      }
    }
    const C = I;
    if (this.uniforms.near.value = C.near, this.uniforms.far.value = C.far, this.uniforms.encodeLinear.value = i.encodeLinear, this.uniforms.maxStdDev.value = this.maxStdDev, this.uniforms.maxPixelRadius.value = this.maxPixelRadius, this.uniforms.minAlpha.value = this.minAlpha, this.uniforms.enable2DGS.value = this.enable2DGS, this.uniforms.preBlurAmount.value = this.preBlurAmount, this.uniforms.blurAmount.value = this.blurAmount, this.uniforms.focalDistance.value = this.focalDistance, this.uniforms.apertureAngle.value = this.apertureAngle, this.uniforms.falloff.value = this.falloff, this.uniforms.clipXY.value = this.clipXY, this.uniforms.focalAdjustment.value = this.focalAdjustment, this.splatTexture) {
      const { enable: c, texture: h, multiply: u, add: y, near: w, far: f, mid: d } = this.splatTexture;
      c && h ? (this.uniforms.splatTexEnable.value = !0, this.uniforms.splatTexture.value = h, u ? this.uniforms.splatTexMul.value.fromArray(u.elements) : this.uniforms.splatTexMul.value.set(
        0.5 / this.maxStdDev,
        0,
        0,
        0.5 / this.maxStdDev
      ), this.uniforms.splatTexAdd.value.set((y == null ? void 0 : y.x) ?? 0.5, (y == null ? void 0 : y.y) ?? 0.5), this.uniforms.splatTexNear.value = w ?? this.uniforms.near.value, this.uniforms.splatTexFar.value = f ?? this.uniforms.far.value, this.uniforms.splatTexMid.value = d ?? 0) : (this.uniforms.splatTexEnable.value = !1, this.uniforms.splatTexture.value = QA.EMPTY_SPLAT_TEXTURE);
    } else
      this.uniforms.splatTexEnable.value = !1, this.uniforms.splatTexture.value = QA.EMPTY_SPLAT_TEXTURE;
    const E = ((l = i.display) == null ? void 0 : l.accumulator.toWorld) ?? new a.Matrix4(), n = I.matrixWorld.clone().invert();
    E.clone().premultiply(n).decompose(
      this.uniforms.renderToViewPos.value,
      this.uniforms.renderToViewQuat.value,
      new a.Vector3()
    );
  }
  // Update the uniforms for the given viewpoint.
  // Note that the client expects to be able to call render() at any point
  // to update the canvas, so we must switch the viewpoint back to
  // defaultView when we're finished.
  prepareViewpoint(A) {
    if (this.viewpoint = A ?? this.viewpoint, this.viewpoint.display) {
      const { accumulator: e, geometry: I } = this.viewpoint.display;
      this.uniforms.numSplats.value = e.splats.numSplats, this.uniforms.packedSplats.value = e.splats.getTexture(), this.geometry = I;
    } else
      this.uniforms.numSplats.value = 0, this.uniforms.packedSplats.value = qA.getEmpty(), this.geometry = cI;
  }
  // If spark.autoUpdate is false then you must manually call
  // spark.update({ scene }) to have the scene Gsplats be re-generated.
  update({
    scene: A,
    viewToWorld: e
  }) {
    const I = this.matrixWorld.clone();
    this.preUpdate ? this.updateInternal({ scene: A, originToWorld: I, viewToWorld: e }) : (this.pendingUpdate = {
      scene: A,
      originToWorld: I
    }, setTimeout(() => {
      if (this.pendingUpdate) {
        const { scene: g, originToWorld: s } = this.pendingUpdate;
        this.pendingUpdate = null, this.updateInternal({ scene: g, originToWorld: s, viewToWorld: e });
      }
    }, 1));
  }
  updateInternal({
    scene: A,
    originToWorld: e,
    viewToWorld: I
  }) {
    var l;
    if (!this.canAllocAccumulator())
      return !1;
    e || (e = this.active.toWorld), I = I ?? e.clone();
    const g = this.time ?? this.clock.getElapsedTime(), s = g - (this.lastUpdateTime ?? g);
    this.lastUpdateTime = g;
    const B = this.active.mapping.reduce((c, h) => (c.set(h.node, h), c), /* @__PURE__ */ new Map()), { generators: Q, visibleGenerators: i, globalEdits: C } = this.compileScene(A);
    for (const c of Q)
      (l = c.frameUpdate) == null || l.call(c, {
        object: c,
        time: g,
        deltaTime: s,
        viewToWorld: I,
        globalEdits: C
      });
    const E = new Set(i.map((c) => c.uuid));
    for (const c of Q) {
      const h = B.get(c), y = c.generator && E.has(c.uuid) ? c.numSplats : 0;
      (c.generator !== (h == null ? void 0 : h.generator) || y !== (h == null ? void 0 : h.count)) && c.updateVersion();
    }
    const o = !ie({
      matrix1: e,
      matrix2: this.active.toWorld,
      maxDistance: this.originDistance
    }) || Q.length !== B.size || Q.some((c) => {
      var h;
      return c.version !== ((h = B.get(c)) == null ? void 0 : h.version);
    });
    let r = null;
    if (o) {
      if (r = this.maybeAllocAccumulator(), !r)
        throw new Error("Unreachable");
      const c = !ie({
        matrix1: e,
        matrix2: this.active.toWorld,
        maxDistance: 1e-5,
        minCoorient: 0.99999
      }), u = i.map((M, p) => {
        const D = B.get(M);
        return D ? (
          // Sort by version deltas then by previous ordering in the mapping,
          // attempting to keep unchanging generators near the front
          // to improve our chances of avoiding a re-generation.
          [M.version - D.version, D.base, M]
        ) : [Number.POSITIVE_INFINITY, M.version, M];
      }).sort((M, p) => M[0] !== p[0] ? M[0] - p[0] : M[1] - p[1]).map(([M, p, D]) => D), y = u.map((M) => M.numSplats), { maxSplats: w, mapping: f } = r.splats.generateMapping(y), d = u.map((M, p) => {
        const { base: D, count: R } = f[p];
        return {
          node: M,
          generator: M.generator,
          version: M.version,
          base: D,
          count: R
        };
      });
      e.clone().invert().decompose(
        this.translateToAccumulator.value,
        this.rotateToAccumulator.value,
        new a.Vector3()
      ), r.ensureGenerate(w), r.generateSplats({
        renderer: this.renderer,
        modifier: this.modifier,
        generators: d,
        forceUpdate: c,
        originToWorld: e
      }), r.splatsVersion = this.active.splatsVersion + 1;
      const m = r.hasCorrespondence(this.active);
      r.mappingVersion = this.active.mappingVersion + (m ? 0 : 1), this.releaseAccumulator(this.active), this.active = r, this.prepareViewpoint();
    }
    return setTimeout(() => {
      for (const c of this.autoViewpoints)
        c.autoPoll({ accumulator: r ?? void 0 });
    }, 1), !0;
  }
  compileScene(A) {
    const e = [];
    A.traverse((s) => {
      s instanceof qt && e.push(s);
    });
    const I = [];
    A.traverseVisible((s) => {
      s instanceof qt && I.push(s);
    });
    const g = /* @__PURE__ */ new Set();
    return A.traverseVisible((s) => {
      if (s instanceof Ce) {
        let B = s.parent;
        for (; B != null && !(B instanceof _A); )
          B = B.parent;
        B == null && g.add(s);
      }
    }), {
      generators: e,
      visibleGenerators: I,
      globalEdits: Array.from(g)
    };
  }
  // Renders out the scene to an environment map that can be used for
  // Image-based lighting or similar applications. First optionally updates Gsplats,
  // sorts them with respect to the provided worldCenter, renders 6 cube faces,
  // then pre-filters them using THREE.PMREMGenerator and returns a THREE.Texture
  // that can assigned directly to a THREE.MeshStandardMaterial.envMap property.
  async renderEnvMap({
    renderer: A,
    scene: e,
    worldCenter: I,
    size: g = 256,
    near: s = 0.1,
    far: B = 1e3,
    hideObjects: Q = [],
    update: i = !1
  }) {
    var r, l;
    if (this.envViewpoint || (this.envViewpoint = this.newViewpoint({ sort360: !0 })), !QA.cubeRender || QA.cubeRender.target.width !== g || QA.cubeRender.near !== s || QA.cubeRender.far !== B) {
      QA.cubeRender && QA.cubeRender.target.dispose();
      const c = new a.WebGLCubeRenderTarget(g, {
        format: a.RGBAFormat,
        generateMipmaps: !0,
        minFilter: a.LinearMipMapLinearFilter
      }), h = new a.CubeCamera(s, B, c);
      QA.cubeRender = { target: c, camera: h, near: s, far: B };
    }
    QA.pmrem || (QA.pmrem = new a.PMREMGenerator(A ?? this.renderer));
    const C = new a.Matrix4().setPosition(I);
    await ((r = this.envViewpoint) == null ? void 0 : r.prepare({ scene: e, viewToWorld: C, update: i }));
    const { target: E, camera: n } = QA.cubeRender;
    n.position.copy(I);
    const o = /* @__PURE__ */ new Map();
    for (const c of Q)
      o.set(c, c.visible), c.visible = !1;
    this.prepareViewpoint(this.envViewpoint), n.update(A ?? this.renderer, e), this.prepareViewpoint(this.defaultView);
    for (const [c, h] of o.entries())
      c.visible = h;
    return (l = QA.pmrem) == null ? void 0 : l.fromCubemap(E.texture).texture;
  }
  // Utility function to recursively set the envMap property for any
  // THREE.MeshStandardMaterial within the subtree of root.
  recurseSetEnvMap(A, e) {
    A.traverse((I) => {
      if (I instanceof a.Mesh)
        if (Array.isArray(I.material))
          for (const g of I.material)
            g instanceof a.MeshStandardMaterial && (g.envMap = e);
        else
          I.material instanceof a.MeshStandardMaterial && (I.material.envMap = e);
    });
  }
  // Utility function that helps extract the Gsplat RGBA values from a
  // SplatGenerator, including the result of any real-time RGBA SDF edits applied
  // to a SplatMesh. This effectively "bakes" any computed RGBA values, which can
  // now be used as a pipeline input via SplatMesh.splatRgba to inject these
  // baked values into the Gsplat data.
  getRgba({
    generator: A,
    rgba: e
  }) {
    const I = this.active.mapping.find(({ node: g }) => g === A);
    if (!I)
      throw new Error("Generator not found");
    return e = e ?? new He(), e.fromPackedSplats({
      packedSplats: this.active.splats,
      base: I.base,
      count: I.count,
      renderer: this.renderer
    }), e;
  }
  // Utility function that builds on getRgba({ generator }) and additionally
  // reads back the RGBA values to the CPU in a Uint8Array with packed RGBA
  // in that byte order.
  async readRgba({
    generator: A,
    rgba: e
  }) {
    return e = this.getRgba({ generator: A, rgba: e }), e.read();
  }
};
QA.cubeRender = null, QA.pmrem = null, QA.EMPTY_SPLAT_TEXTURE = new a.Data3DTexture();
let re = QA;
const cI = new Ke(new Uint32Array(1), 0);
NA(
  { packedSplats: Xt, index: "int" },
  { gsplat: W },
  ({ packedSplats: t, index: A }) => {
    if (!t || !A)
      throw new Error("Invalid input");
    return { gsplat: mt(t, A) };
  }
);
function xo(t) {
  if (t.length === 0)
    return null;
  const A = new a.Vector3(), e = new a.Quaternion(), I = new a.Vector3(), g = [], s = [];
  for (const B of t)
    B.decompose(A, e, I), g.push(A), s.push(e);
  return new a.Matrix4().compose(
    Yg(g),
    Jg(s),
    new a.Vector3(1, 1, 1)
  );
}
function Ro(t, A, e) {
  const I = Math.floor(t.length / 32);
  if (I * 32 !== t.length)
    throw new Error("Invalid .splat file size");
  const g = new Float32Array(t.buffer);
  for (let s = 0; s < I; ++s) {
    const B = s * 32, Q = s * 8, i = g[Q + 0], C = g[Q + 1], E = g[Q + 2], n = g[Q + 3], o = g[Q + 4], r = g[Q + 5], l = t[B + 24] / 255, c = t[B + 25] / 255, h = t[B + 26] / 255, u = t[B + 27] / 255, y = (t[B + 28] - 128) / 128, w = (t[B + 29] - 128) / 128, f = (t[B + 30] - 128) / 128, d = (t[B + 31] - 128) / 128;
    e(
      s,
      i,
      C,
      E,
      n,
      o,
      r,
      w,
      f,
      d,
      y,
      u,
      l,
      c,
      h
    );
  }
}
const hI = {
  0: {
    bytesPerCenter: 12,
    bytesPerScale: 12,
    bytesPerRotation: 16,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 4,
    scaleOffsetBytes: 12,
    rotationOffsetBytes: 24,
    colorOffsetBytes: 40,
    sphericalHarmonicsOffsetBytes: 44,
    scaleRange: 1
  },
  1: {
    bytesPerCenter: 6,
    bytesPerScale: 6,
    bytesPerRotation: 8,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 2,
    scaleOffsetBytes: 6,
    rotationOffsetBytes: 12,
    colorOffsetBytes: 20,
    sphericalHarmonicsOffsetBytes: 24,
    scaleRange: 32767
  },
  2: {
    bytesPerCenter: 6,
    bytesPerScale: 6,
    bytesPerRotation: 8,
    bytesPerColor: 4,
    bytesPerSphericalHarmonicsComponent: 1,
    scaleOffsetBytes: 6,
    rotationOffsetBytes: 12,
    colorOffsetBytes: 20,
    sphericalHarmonicsOffsetBytes: 24,
    scaleRange: 32767
  }
}, Uo = {
  0: 0,
  1: 9,
  2: 24,
  3: 45
};
function Lo(t, A, e, I) {
  var c;
  let B = 0;
  const Q = new DataView(t.buffer, B, 4096);
  B += 4096;
  const i = Q.getUint8(0), C = Q.getUint8(1);
  if (i !== 0 || C < 1)
    throw new Error(
      `Unsupported .ksplat version: ${i}.${C}`
    );
  const E = Q.getUint32(4, !0);
  Q.getUint32(16, !0);
  const n = Q.getUint16(20, !0);
  if (n < 0 || n > 2)
    throw new Error(`Invalid .ksplat compression level: ${n}`);
  const o = Q.getFloat32(36, !0) || -1.5, r = Q.getFloat32(40, !0) || 1.5;
  let l = 4096 + E * 1024;
  for (let h = 0; h < E; ++h) {
    let u = function(mA, T) {
      if (n === 0)
        return v.getFloat32(
          mA + j + T * 4,
          !0
        );
      if (n === 1)
        return fA(
          v.getUint16(
            mA + j + T * 2,
            !0
          )
        );
      const VA = v.getUint8(mA + j + T) / 255;
      return o + VA * (r - o);
    };
    const y = new DataView(t.buffer, B, 1024);
    B += 1024;
    const w = y.getUint32(0, !0), f = y.getUint32(4, !0), d = y.getUint32(8, !0), m = y.getUint32(12, !0), M = y.getFloat32(16, !0), p = y.getUint16(20, !0), D = (y.getUint32(24, !0) || ((c = hI[n]) == null ? void 0 : c.scaleRange)) ?? 1, R = y.getUint32(32, !0), N = R * d, F = y.getUint32(36, !0), L = F * 4, G = p * m + L, k = y.getUint16(40, !0), U = Uo[k], {
      bytesPerCenter: J,
      bytesPerScale: AA,
      bytesPerRotation: z,
      bytesPerColor: eA,
      bytesPerSphericalHarmonicsComponent: tA,
      scaleOffsetBytes: X,
      rotationOffsetBytes: b,
      colorOffsetBytes: _,
      sphericalHarmonicsOffsetBytes: j
    } = hI[n], P = J + AA + z + eA + U * tA, Y = P * f, uA = Y + G, nA = [0, 3, 6, 1, 4, 7, 2, 5, 8], wA = [
      9,
      14,
      19,
      10,
      15,
      20,
      11,
      16,
      21,
      12,
      17,
      22,
      13,
      18,
      23
    ], yA = [
      24,
      31,
      38,
      25,
      32,
      39,
      26,
      33,
      40,
      27,
      34,
      41,
      28,
      35,
      42,
      29,
      36,
      43,
      30,
      37,
      44
    ], MA = k >= 1 ? new Float32Array(3 * 3) : void 0, rA = k >= 2 ? new Float32Array(5 * 3) : void 0, LA = k >= 3 ? new Float32Array(7 * 3) : void 0, FA = M / 2 / D, PA = l + L, OA = l + G, v = new DataView(
      t.buffer,
      OA,
      Y
    ), lA = new Float32Array(
      t.buffer,
      PA,
      m * 3
    ), ZA = new Uint32Array(
      t.buffer,
      l,
      F
    );
    let Ut = R, Ot = N;
    for (let mA = 0; mA < w; ++mA) {
      const T = mA * P;
      let VA;
      if (mA < N)
        VA = Math.floor(mA / d);
      else {
        const WA = ZA[Ut - R];
        mA >= Ot + WA && (Ut += 1, Ot += WA), VA = Ut;
      }
      const we = n === 0 ? v.getFloat32(T + 0, !0) : (v.getUint16(T + 0, !0) - D) * FA + lA[3 * VA + 0], ye = n === 0 ? v.getFloat32(T + 4, !0) : (v.getUint16(T + 2, !0) - D) * FA + lA[3 * VA + 1], De = n === 0 ? v.getFloat32(T + 8, !0) : (v.getUint16(T + 4, !0) - D) * FA + lA[3 * VA + 2], fe = n === 0 ? v.getFloat32(T + X + 0, !0) : fA(v.getUint16(T + X + 0, !0)), de = n === 0 ? v.getFloat32(T + X + 4, !0) : fA(v.getUint16(T + X + 2, !0)), $Q = n === 0 ? v.getFloat32(T + X + 8, !0) : fA(v.getUint16(T + X + 4, !0)), Ai = n === 0 ? v.getFloat32(T + b + 0, !0) : fA(
        v.getUint16(T + b + 0, !0)
      ), ti = n === 0 ? v.getFloat32(T + b + 4, !0) : fA(
        v.getUint16(T + b + 2, !0)
      ), ei = n === 0 ? v.getFloat32(T + b + 8, !0) : fA(
        v.getUint16(T + b + 4, !0)
      ), Ii = n === 0 ? v.getFloat32(T + b + 12, !0) : fA(
        v.getUint16(T + b + 6, !0)
      ), gi = v.getUint8(T + _ + 0) / 255, si = v.getUint8(T + _ + 1) / 255, Bi = v.getUint8(T + _ + 2) / 255, Qi = v.getUint8(T + _ + 3) / 255;
      if (e(
        mA,
        we,
        ye,
        De,
        fe,
        de,
        $Q,
        ti,
        ei,
        Ii,
        Ai,
        Qi,
        gi,
        si,
        Bi
      ), k >= 1 && MA) {
        for (const [WA, Lt] of nA.entries())
          MA[WA] = u(T, Lt);
        if (rA)
          for (const [WA, Lt] of wA.entries())
            rA[WA] = u(T, Lt);
        if (LA)
          for (const [WA, Lt] of yA.entries())
            LA[WA] = u(T, Lt);
        I == null || I(mA, MA, rA, LA);
      }
    }
    l += uA;
  }
}
class Yo {
  constructor({ fileBytes: A }) {
    this.fileBytes = A instanceof ArrayBuffer ? new Uint8Array(A) : A, this.reader = new Kg({ fileBytes: this.fileBytes });
    const e = new DataView(this.reader.read(16).buffer);
    if (e.getUint32(0, !0) !== 1347635022)
      throw new Error("Invalid SPZ file");
    if (this.version = e.getUint32(4, !0), this.version < 1 || this.version > 2)
      throw new Error(`Unsupported SPZ version: ${this.version}`);
    this.numSplats = e.getUint32(8, !0), this.shDegree = e.getUint8(12), this.fractionalBits = e.getUint8(13), this.flags = e.getUint8(14), this.flagAntiAlias = (this.flags & 1) !== 0, this.reserved = e.getUint8(15), this.parsed = !1;
  }
  parseSplats(A, e, I, g, s, B) {
    if (this.parsed)
      throw new Error("SPZ file already parsed");
    if (this.parsed = !0, this.version === 1) {
      const Q = this.reader.read(this.numSplats * 3 * 2), i = new Uint16Array(Q.buffer);
      for (let C = 0; C < this.numSplats; C++) {
        const E = C * 3, n = fA(i[E]), o = fA(i[E + 1]), r = fA(i[E + 2]);
        A == null || A(C, n, o, r);
      }
    } else if (this.version === 2) {
      const Q = 1 << this.fractionalBits, i = this.reader.read(this.numSplats * 3 * 3);
      for (let C = 0; C < this.numSplats; C++) {
        const E = C * 9, n = ((i[E + 2] << 24 | i[E + 1] << 16 | i[E] << 8) >> 8) / Q, o = ((i[E + 5] << 24 | i[E + 4] << 16 | i[E + 3] << 8) >> 8) / Q, r = ((i[E + 8] << 24 | i[E + 7] << 16 | i[E + 6] << 8) >> 8) / Q;
        A == null || A(C, n, o, r);
      }
    } else
      throw new Error("Unreachable");
    {
      const Q = this.reader.read(this.numSplats);
      for (let i = 0; i < this.numSplats; i++)
        e == null || e(i, Q[i] / 255);
    }
    {
      const Q = this.reader.read(this.numSplats * 3), i = VQ / 0.15;
      for (let C = 0; C < this.numSplats; C++) {
        const E = C * 3, n = (Q[E] / 255 - 0.5) * i + 0.5, o = (Q[E + 1] / 255 - 0.5) * i + 0.5, r = (Q[E + 2] / 255 - 0.5) * i + 0.5;
        I == null || I(C, n, o, r);
      }
    }
    {
      const Q = this.reader.read(this.numSplats * 3);
      for (let i = 0; i < this.numSplats; i++) {
        const C = i * 3, E = Math.exp(Q[C] / 16 - 10), n = Math.exp(Q[C + 1] / 16 - 10), o = Math.exp(Q[C + 2] / 16 - 10);
        g == null || g(i, E, n, o);
      }
    }
    {
      const Q = this.reader.read(this.numSplats * 3);
      for (let i = 0; i < this.numSplats; i++) {
        const C = i * 3, E = Q[C] / 127.5 - 1, n = Q[C + 1] / 127.5 - 1, o = Q[C + 2] / 127.5 - 1, r = Math.sqrt(
          Math.max(0, 1 - E * E - n * n - o * o)
        );
        s == null || s(i, E, n, o, r);
      }
    }
    if (B && this.shDegree >= 1) {
      const Q = new Float32Array(9), i = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0, C = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0, E = this.reader.read(
        this.numSplats * ZQ[this.shDegree] * 3
      );
      let n = 0;
      for (let o = 0; o < this.numSplats; o++) {
        for (let r = 0; r < 9; ++r)
          Q[r] = (E[n + r] - 128) / 128;
        if (n += 9, i) {
          for (let r = 0; r < 15; ++r)
            i[r] = (E[n + r] - 128) / 128;
          n += 15;
        }
        if (C) {
          for (let r = 0; r < 21; ++r)
            C[r] = (E[n + r] - 128) / 128;
          n += 21;
        }
        B == null || B(o, Q, i, C);
      }
    }
  }
}
const ZQ = { 1: 3, 2: 8, 3: 15 }, VQ = 0.28209479177387814, Jo = 1347635022, vo = 2, bo = 1;
class tt {
  constructor({
    numSplats: A,
    shDegree: e,
    fractionalBits: I = 12,
    flagAntiAlias: g = !0
  }) {
    this.clippedCount = 0;
    const s = 19 + (e >= 1 ? 9 : 0) + (e >= 2 ? 15 : 0) + (e >= 3 ? 21 : 0), B = 16 + A * s;
    this.buffer = new ArrayBuffer(B), this.view = new DataView(this.buffer), this.view.setUint32(0, Jo, !0), this.view.setUint32(4, vo, !0), this.view.setUint32(8, A, !0), this.view.setUint8(12, e), this.view.setUint8(13, I), this.view.setUint8(14, g ? bo : 0), this.view.setUint8(15, 0), this.numSplats = A, this.shDegree = e, this.fractionalBits = I, this.fraction = 1 << I, this.flagAntiAlias = g;
  }
  setCenter(A, e, I, g) {
    const s = Math.round(e * this.fraction), B = Math.max(-8388607, Math.min(8388607, s)), Q = Math.round(I * this.fraction), i = Math.max(-8388607, Math.min(8388607, Q)), C = Math.round(g * this.fraction), E = Math.max(-8388607, Math.min(8388607, C));
    (s !== B || Q !== i || C !== E) && (this.clippedCount += 1);
    const r = 16 + A * 9;
    this.view.setUint8(r, B & 255), this.view.setUint8(r + 1, B >> 8 & 255), this.view.setUint8(r + 2, B >> 16 & 255), this.view.setUint8(r + 3, i & 255), this.view.setUint8(r + 4, i >> 8 & 255), this.view.setUint8(r + 5, i >> 16 & 255), this.view.setUint8(r + 6, E & 255), this.view.setUint8(r + 7, E >> 8 & 255), this.view.setUint8(r + 8, E >> 16 & 255);
  }
  setAlpha(A, e) {
    const I = 16 + this.numSplats * 9 + A;
    this.view.setUint8(
      I,
      Math.max(0, Math.min(255, Math.round(e * 255)))
    );
  }
  static scaleRgb(A) {
    const e = ((A - 0.5) / (VQ / 0.15) + 0.5) * 255;
    return Math.max(0, Math.min(255, Math.round(e)));
  }
  setRgb(A, e, I, g) {
    const s = 16 + this.numSplats * 10 + A * 3;
    this.view.setUint8(s, tt.scaleRgb(e)), this.view.setUint8(s + 1, tt.scaleRgb(I)), this.view.setUint8(s + 2, tt.scaleRgb(g));
  }
  setScale(A, e, I, g) {
    const s = 16 + this.numSplats * 13 + A * 3;
    this.view.setUint8(
      s,
      Math.max(0, Math.min(255, Math.round((Math.log(e) + 10) * 16)))
    ), this.view.setUint8(
      s + 1,
      Math.max(0, Math.min(255, Math.round((Math.log(I) + 10) * 16)))
    ), this.view.setUint8(
      s + 2,
      Math.max(0, Math.min(255, Math.round((Math.log(g) + 10) * 16)))
    );
  }
  setQuat(A, e, I, g, s) {
    const B = 16 + this.numSplats * 16 + A * 3, Q = s < 0;
    this.view.setUint8(
      B,
      Math.max(
        0,
        Math.min(255, Math.round(((Q ? -e : e) + 1) * 127.5))
      )
    ), this.view.setUint8(
      B + 1,
      Math.max(
        0,
        Math.min(255, Math.round(((Q ? -I : I) + 1) * 127.5))
      )
    ), this.view.setUint8(
      B + 2,
      Math.max(
        0,
        Math.min(255, Math.round(((Q ? -g : g) + 1) * 127.5))
      )
    );
  }
  static quantizeSh(A, e) {
    const I = Math.round(A * 128) + 128, g = 1 << 8 - e, s = Math.floor((I + g / 2) / g) * g;
    return Math.max(0, Math.min(255, s));
  }
  setSh(A, e, I, g) {
    const s = ZQ[this.shDegree] || 0, B = 16 + this.numSplats * 19 + A * s * 3;
    for (let Q = 0; Q < 9; ++Q)
      this.view.setUint8(B + Q, tt.quantizeSh(e[Q], 5));
    if (I) {
      const Q = B + 9;
      for (let i = 0; i < 15; ++i)
        this.view.setUint8(Q + i, tt.quantizeSh(I[i], 4));
      if (g) {
        const i = Q + 15;
        for (let C = 0; C < 21; ++C)
          this.view.setUint8(i + C, tt.quantizeSh(g[C], 4));
      }
    }
  }
  async finalize() {
    const A = new Uint8Array(this.buffer), I = new ReadableStream({
      async start(B) {
        B.enqueue(A), B.close();
      }
    }).pipeThrough(new CompressionStream("gzip")), s = await new Response(I).arrayBuffer();
    return console.log(
      "Compressed",
      A.length,
      "bytes to",
      s.byteLength,
      "bytes"
    ), new Uint8Array(s);
  }
}
async function fr(t) {
  var E, n, o;
  const A = new yo(), {
    inputs: e,
    clipXyz: I,
    maxSh: g,
    fractionalBits: s = 12,
    opacityThreshold: B
  } = t;
  for (const r of e) {
    let l = function(p) {
      return p.multiplyScalar(w), p.applyQuaternion(f), p.add(d), p;
    }, c = function(p) {
      return p.multiplyScalar(w), p;
    }, h = function(p) {
      return p.premultiply(f), p;
    }, u = function(p) {
      return !m || m.containsPoint(p);
    }, y = function(p) {
      return B !== void 0 ? p >= B : !0;
    };
    const w = ((E = r.transform) == null ? void 0 : E.scale) ?? 1, f = new a.Quaternion().fromArray(
      ((n = r.transform) == null ? void 0 : n.quaternion) ?? [0, 0, 0, 1]
    ), d = new a.Vector3().fromArray(
      ((o = r.transform) == null ? void 0 : o.translate) ?? [0, 0, 0]
    ), m = I ? new a.Box3(
      new a.Vector3().fromArray(I.min),
      new a.Vector3().fromArray(I.max)
    ) : void 0;
    let M = r.fileType;
    switch (M || (M = TQ(r.fileBytes), !M && r.pathOrUrl && (M = HQ(r.pathOrUrl))), M) {
      case vt.PLY: {
        const p = new Ee({ fileBytes: r.fileBytes });
        await p.parseHeader();
        let D = null;
        p.parseSplats(
          (R, N, F, L, G, k, U, J, AA, z, eA, tA, X, b, _) => {
            const j = l(new a.Vector3(N, F, L));
            if (u(j) && y(tA)) {
              D = A.pushSplat(), A.setCenter(D, j.x, j.y, j.z);
              const P = c(
                new a.Vector3(G, k, U)
              );
              A.setScale(D, P.x, P.y, P.z);
              const Y = h(
                new a.Quaternion(J, AA, z, eA)
              );
              A.setQuaternion(
                D,
                Y.x,
                Y.y,
                Y.z,
                Y.w
              ), A.setOpacity(D, tA), A.setColor(D, X, b, _);
            } else
              D = null;
          },
          (R, N, F, L) => {
            N && D !== null && A.setSh1(D, N), F && D !== null && A.setSh2(D, F), L && D !== null && A.setSh3(D, L);
          }
        );
        break;
      }
      case vt.SPZ: {
        const p = new Yo({ fileBytes: r.fileBytes }), D = new Int32Array(p.numSplats);
        D.fill(-1);
        const R = new Float32Array(p.numSplats * 3), N = new a.Vector3();
        p.parseSplats(
          (F, L, G, k) => {
            const U = l(new a.Vector3(L, G, k));
            R[F * 3] = U.x, R[F * 3 + 1] = U.y, R[F * 3 + 2] = U.z;
          },
          (F, L) => {
            N.fromArray(R, F * 3), u(N) && y(L) && (D[F] = A.pushSplat(), A.setCenter(D[F], N.x, N.y, N.z), A.setOpacity(D[F], L));
          },
          (F, L, G, k) => {
            D[F] >= 0 && A.setColor(D[F], L, G, k);
          },
          (F, L, G, k) => {
            if (D[F] >= 0) {
              const U = c(
                new a.Vector3(L, G, k)
              );
              A.setScale(D[F], U.x, U.y, U.z);
            }
          },
          (F, L, G, k, U) => {
            if (D[F] >= 0) {
              const J = h(
                new a.Quaternion(L, G, k, U)
              );
              A.setQuaternion(
                D[F],
                J.x,
                J.y,
                J.z,
                J.w
              );
            }
          },
          (F, L, G, k) => {
            D[F] >= 0 && (A.setSh1(D[F], L), G && A.setSh2(D[F], G), k && A.setSh3(D[F], k));
          }
        );
        break;
      }
      case vt.SPLAT:
        Ro(
          r.fileBytes,
          (p) => {
          },
          (p, D, R, N, F, L, G, k, U, J, AA, z, eA, tA, X) => {
            const b = l(new a.Vector3(D, R, N));
            if (u(b) && y(z)) {
              const _ = A.pushSplat();
              A.setCenter(_, b.x, b.y, b.z);
              const j = c(
                new a.Vector3(F, L, G)
              );
              A.setScale(_, j.x, j.y, j.z);
              const P = h(
                new a.Quaternion(k, U, J, AA)
              );
              A.setQuaternion(
                _,
                P.x,
                P.y,
                P.z,
                P.w
              ), A.setOpacity(_, z), A.setColor(_, eA, tA, X);
            }
          }
        );
        break;
      case vt.KSPLAT: {
        let p = null;
        Lo(
          r.fileBytes,
          (D) => {
          },
          (D, R, N, F, L, G, k, U, J, AA, z, eA, tA, X, b) => {
            const _ = l(new a.Vector3(R, N, F));
            if (u(_) && y(eA)) {
              p = A.pushSplat(), A.setCenter(p, _.x, _.y, _.z);
              const j = c(
                new a.Vector3(L, G, k)
              );
              A.setScale(p, j.x, j.y, j.z);
              const P = h(
                new a.Quaternion(U, J, AA, z)
              );
              A.setQuaternion(
                p,
                P.x,
                P.y,
                P.z,
                P.w
              ), A.setOpacity(p, eA), A.setColor(p, tA, X, b);
            } else
              p = null;
          },
          (D, R, N, F) => {
            p !== null && (A.setSh1(p, R), N && A.setSh2(p, N), F && A.setSh3(p, F));
          }
        );
        break;
      }
      default:
        throw new Error(`transcodeSpz not implemented for ${M}`);
    }
  }
  const Q = Math.min(
    g ?? 3,
    A.sh3 ? 3 : A.sh2 ? 2 : A.sh1 ? 1 : 0
  ), i = new tt({
    numSplats: A.numSplats,
    shDegree: Q,
    fractionalBits: s,
    flagAntiAlias: !0
  });
  for (let r = 0; r < A.numSplats; ++r) {
    const l = r * 3, c = r * 4;
    i.setCenter(
      r,
      A.centers[l],
      A.centers[l + 1],
      A.centers[l + 2]
    ), i.setScale(
      r,
      A.scales[l],
      A.scales[l + 1],
      A.scales[l + 2]
    ), i.setQuat(
      r,
      A.quaternions[c],
      A.quaternions[c + 1],
      A.quaternions[c + 2],
      A.quaternions[c + 3]
    ), i.setAlpha(r, A.opacities[r]), i.setRgb(
      r,
      A.colors[l],
      A.colors[l + 1],
      A.colors[l + 2]
    ), A.sh1 && Q >= 1 && i.setSh(
      r,
      A.sh1.slice(r * 9, (r + 1) * 9),
      Q >= 2 && A.sh2 ? A.sh2.slice(r * 15, (r + 1) * 15) : void 0,
      Q >= 3 && A.sh3 ? A.sh3.slice(r * 21, (r + 1) * 21) : void 0
    );
  }
  return { fileBytes: await i.finalize(), clippedCount: i.clippedCount };
}
class dr {
  constructor(A) {
    this.mesh = A.mesh, this.numSplats = A.numSplats ?? this.mesh.numSplats;
    const { width: e, height: I, depth: g, maxSplats: s } = pA(this.numSplats);
    this.skinData = new Uint16Array(s * 4), this.skinTexture = new a.DataArrayTexture(
      this.skinData,
      e,
      I,
      g
    ), this.skinTexture.format = a.RGBAIntegerFormat, this.skinTexture.type = a.UnsignedShortType, this.skinTexture.internalFormat = "RGBA16UI", this.skinTexture.needsUpdate = !0, this.numBones = A.numBones ?? 256, this.boneData = new Float32Array(this.numBones * 16), this.boneTexture = new a.DataTexture(
      this.boneData,
      4,
      this.numBones,
      a.RGBAFormat,
      a.FloatType
    ), this.boneTexture.internalFormat = "RGBA32F", this.boneTexture.needsUpdate = !0, this.uniform = new x({
      key: "skinning",
      type: jQ,
      globals: () => [XQ],
      value: {
        numSplats: this.numSplats,
        numBones: this.numBones,
        skinTexture: this.skinTexture,
        boneTexture: this.boneTexture
      }
    });
  }
  // Apply the skeletal animation to a Gsplat in a dyno program.
  modify(A) {
    return Ho(A, this.uniform);
  }
  // Set the "rest" pose for a bone with position and quaternion orientation.
  setRestQuatPos(A, e, I) {
    const g = A * 16;
    this.boneData[g + 0] = e.x, this.boneData[g + 1] = e.y, this.boneData[g + 2] = e.z, this.boneData[g + 3] = e.w, this.boneData[g + 4] = I.x, this.boneData[g + 5] = I.y, this.boneData[g + 6] = I.z, this.boneData[g + 7] = 0, this.boneData[g + 8] = 0, this.boneData[g + 9] = 0, this.boneData[g + 10] = 0, this.boneData[g + 11] = 1, this.boneData[g + 12] = 0, this.boneData[g + 13] = 0, this.boneData[g + 14] = 0, this.boneData[g + 15] = 0;
  }
  // Set the "current" position and orientation of a bone.
  setBoneQuatPos(A, e, I) {
    const g = A * 16, s = new a.Quaternion(
      this.boneData[g + 0],
      this.boneData[g + 1],
      this.boneData[g + 2],
      this.boneData[g + 3]
    ), B = new a.Vector3(
      this.boneData[g + 4],
      this.boneData[g + 5],
      this.boneData[g + 6]
    ), Q = s.clone().invert(), i = I.clone().sub(B);
    i.applyQuaternion(Q), Q.multiply(e);
    const C = new a.Quaternion(
      i.x,
      i.y,
      i.z,
      0
    ).multiply(s);
    this.boneData[g + 8] = Q.x, this.boneData[g + 9] = Q.y, this.boneData[g + 10] = Q.z, this.boneData[g + 11] = Q.w, this.boneData[g + 12] = 0.5 * C.x, this.boneData[g + 13] = 0.5 * C.y, this.boneData[g + 14] = 0.5 * C.z, this.boneData[g + 15] = 0.5 * C.w;
  }
  // Set up to 4 bone indices and weights for a Gsplat. For fewer than 4 bones,
  // you can set the remaining weights to 0 (and index=0).
  setSplatBones(A, e, I) {
    const g = A * 4;
    this.skinData[g + 0] = Math.min(255, Math.max(0, Math.round(I.x * 255))) + (e.x << 8), this.skinData[g + 1] = Math.min(255, Math.max(0, Math.round(I.y * 255))) + (e.y << 8), this.skinData[g + 2] = Math.min(255, Math.max(0, Math.round(I.z * 255))) + (e.z << 8), this.skinData[g + 3] = Math.min(255, Math.max(0, Math.round(I.w * 255))) + (e.w << 8);
  }
  // Call this to indicate that the bones have changed and the Gsplats need to be
  // re-generated with updated skinning.
  updateBones() {
    this.boneTexture.needsUpdate = !0, this.mesh.needsUpdate = !0;
  }
}
const jQ = { type: "GsplatSkinning" }, XQ = oA(`
  struct GsplatSkinning {
    int numSplats;
    int numBones;
    usampler2DArray skinTexture;
    sampler2D boneTexture;
  };
`), To = oA(`
  void applyGsplatSkinning(
    int numSplats, int numBones,
    usampler2DArray skinTexture, sampler2D boneTexture,
    int splatIndex, inout vec3 center, inout vec4 quaternion
  ) {
    if ((splatIndex < 0) || (splatIndex >= numSplats)) {
      return;
    }

    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);

    float weights[4];
    weights[0] = float(skinData.x & 0xffu) / 255.0;
    weights[1] = float(skinData.y & 0xffu) / 255.0;
    weights[2] = float(skinData.z & 0xffu) / 255.0;
    weights[3] = float(skinData.w & 0xffu) / 255.0;

    uint boneIndices[4];
    boneIndices[0] = (skinData.x >> 8u) & 0xffu;
    boneIndices[1] = (skinData.y >> 8u) & 0xffu;
    boneIndices[2] = (skinData.z >> 8u) & 0xffu;
    boneIndices[3] = (skinData.w >> 8u) & 0xffu;

    vec4 quat = vec4(0.0);
    vec4 dual = vec4(0.0);
    for (int i = 0; i < 4; i++) {
      if (weights[i] > 0.0) {
        int boneIndex = int(boneIndices[i]);
        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);
        vec4 boneDual = vec4(0.0);
        if (boneIndex < numBones) {
          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);
          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);
        }

        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {
          // Flip sign if next blend is pointing in the opposite direction
          boneQuat = -boneQuat;
          boneDual = -boneDual;
        }
        quat += weights[i] * boneQuat;
        dual += weights[i] * boneDual;
      }
    }

    // Normalize dual quaternion
    float norm = length(quat);
    quat /= norm;
    dual /= norm;
    vec3 translate = vec3(
      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),
      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),
      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)
    );

    center = quatVec(quat, center) + translate;
    quaternion = quatQuat(quat, quaternion);
  }
`);
function Ho(t, A) {
  return new V({
    inTypes: { gsplat: W, skinning: jQ },
    outTypes: { gsplat: W },
    globals: () => [XQ, To],
    inputs: { gsplat: t, skinning: A },
    statements: ({ inputs: I, outputs: g }) => {
      const { skinning: s } = I, { gsplat: B } = g;
      return UA(`
        ${B} = ${I.gsplat};
        if (isGsplatActive(${B}.flags)) {
          applyGsplatSkinning(
            ${s}.numSplats, ${s}.numBones,
            ${s}.skinTexture, ${s}.boneTexture,
            ${B}.index, ${B}.center, ${B}.quaternion
          );
        }
      `);
    }
  }).outputs.gsplat;
}
function pr({
  // PackedSplats object to add splats to
  splats: t,
  // min and max box extents of the grid
  extents: A,
  // step size along each grid axis
  stepSize: e = 1,
  // spherical radius of each Gsplat
  pointRadius: I = 0.01,
  // relative size of the "shadow copy" of each Gsplat placed behind it
  pointShadowScale: g = 2,
  // Gsplat opacity
  opacity: s = 1,
  // Gsplat color (THREE.Color) or function to set color for position:
  // ((THREE.Color, THREE.Vector3) => void) (default: RGB-modulated grid)
  color: B
}) {
  const i = new a.Vector3(), C = new a.Vector3(), E = new a.Quaternion(0, 0, 0, 1);
  B == null && (B = (o, r) => o.set(
    0.55 + 0.45 * Math.cos(r.x * 1),
    0.55 + 0.45 * Math.cos(r.y * 1),
    0.55 + 0.45 * Math.cos(r.z * 1)
  ));
  const n = new a.Color();
  for (let o = A.min.z; o < A.max.z + 1e-6; o += e)
    for (let r = A.min.y; r < A.max.y + 1e-6; r += e)
      for (let l = A.min.x; l < A.max.x + 1e-6; l += e) {
        i.set(l, r, o);
        for (let c = 0; c < 2; ++c)
          C.setScalar(I * (c ? 1 : g)), c ? typeof B == "function" ? B(n, i) : n.copy(B) : n.setScalar(0), t.pushSplat(i, C, E, s, n);
      }
}
function Mr({
  // PackedSplats object to add splats to
  splats: t,
  // scale (Gsplat scale along axis)
  scale: A = 0.25,
  // radius of the axes (Gsplat scale orthogonal to axis)
  axisRadius: e = 75e-4,
  // relative size of the "shadow copy" of each Gsplat placed behind it
  axisShadowScale: I = 2,
  // origins of the axes (default single axis at origin)
  origins: g = [new a.Vector3()]
}) {
  const s = new a.Vector3(), B = new a.Vector3(), Q = new a.Quaternion(0, 0, 0, 1), i = new a.Color(), C = 1;
  for (const E of g)
    for (let n = 0; n < 3; ++n) {
      s.set(
        E.x + (n === 0 ? A : 0),
        E.y + (n === 1 ? A : 0),
        E.z + (n === 2 ? A : 0)
      );
      for (let o = 0; o < 2; ++o)
        B.set(
          (n === 0 ? A : e) * (o ? 1 : I),
          (n === 1 ? A : e) * (o ? 1 : I),
          (n === 2 ? A : e) * (o ? 1 : I)
        ), i.setRGB(
          o === 0 ? 0 : n === 0 ? 1 : 0,
          o === 0 ? 0 : n === 1 ? 1 : 0,
          o === 0 ? 0 : n === 2 ? 1 : 0
        ), t.pushSplat(s, B, Q, C, i);
    }
}
function Fr({
  // PackedSplats object to add splats to
  splats: t,
  // center of the sphere (default: origin)
  origin: A = new a.Vector3(),
  // radius of the sphere
  radius: e = 1,
  // maximum depth of recursion for subdividing the sphere
  // Warning: Gsplat count grows exponentially with depth
  maxDepth: I = 3,
  // filter function to apply to each point, for example to select
  // points in a certain direction or other function ((THREE.Vector3) => boolean)
  // (default: null)
  filter: g = null,
  // radius of each oriented Gsplat
  pointRadius: s = 0.02,
  // flatness of each oriented Gsplat
  pointThickness: B = 1e-3,
  // color of each Gsplat (THREE.Color) or function to set color for point:
  // ((THREE.Color, THREE.Vector3) => void) (default: white)
  color: Q = new a.Color(1, 1, 1)
}) {
  const i = {};
  function C(c) {
    if (g && !g(c))
      return;
    const h = `${c.x},${c.y},${c.z}`;
    i[h] || (i[h] = c);
  }
  function E(c, h, u, y) {
    if (C(h), C(u), C(y), c >= I)
      return;
    const w = new a.Vector3().addVectors(h, u).normalize(), f = new a.Vector3().addVectors(u, y).normalize(), d = new a.Vector3().addVectors(y, h).normalize();
    E(c + 1, h, w, d), E(c + 1, w, u, f), E(c + 1, d, f, y), E(c + 1, w, f, d);
  }
  for (const c of [-1, 1])
    for (const h of [-1, 1])
      for (const u of [-1, 1]) {
        const y = new a.Vector3(c, 0, 0), w = new a.Vector3(0, h, 0), f = new a.Vector3(0, 0, u);
        E(0, y, w, f);
      }
  const n = Object.values(i), o = new a.Vector3(s, s, B), r = new a.Quaternion(), l = typeof Q == "function" ? new a.Color() : Q;
  for (const c of n)
    r.setFromUnitVectors(new a.Vector3(0, 0, -1), c), typeof Q == "function" && Q(l, c), c.multiplyScalar(e), c.add(A), t.pushSplat(c, o, r, 1, l);
}
function mr({
  // text string to display
  text: t,
  // browser font to render text with (default: "Arial")
  font: A,
  // font size in pixels/Gsplats (default: 32)
  fontSize: e,
  // SplatMesh.recolor tint assuming white Gsplats (default: white)
  color: I,
  // Individual Gsplat color (default: white)
  rgb: g,
  // Gsplat radius (default: 0.8 covers 1-unit spacing well)
  dotRadius: s,
  // text alignment: "left", "center", "right", "start", "end" (default: "start")
  textAlign: B,
  // line spacing multiplier, lines delimited by "\n" (default: 1.0)
  lineHeight: Q,
  // Coordinate scale in object-space (default: 1.0)
  objectScale: i
}) {
  A = A ?? "Arial", e = e ?? 32, I = I ?? new a.Color(1, 1, 1), s = s ?? 0.8, B = B ?? "start", Q = Q ?? 1, i = i ?? 1;
  const C = t.split(`
`), E = document.createElement("canvas"), n = E.getContext("2d");
  if (!n)
    throw new Error("Failed to create canvas context");
  n.font = `${e}px ${A}`, n.textAlign = B;
  const o = n.measureText(""), r = o.fontBoundingBoxAscent + o.fontBoundingBoxDescent;
  let l = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, h = Number.POSITIVE_INFINITY, u = Number.NEGATIVE_INFINITY;
  for (let G = 0; G < C.length; ++G) {
    const k = n.measureText(C[G]), U = r * Q * G;
    l = Math.min(l, -k.actualBoundingBoxLeft), c = Math.max(c, k.actualBoundingBoxRight), h = Math.min(h, U - k.actualBoundingBoxAscent), u = Math.max(u, U + k.actualBoundingBoxDescent);
  }
  const y = Math.floor(l), w = Math.floor(h), f = Math.ceil(c) - y, d = Math.ceil(u) - w;
  E.width = f, E.height = d, n.font = `${e}px ${A}`, n.textAlign = B, n.textBaseline = "alphabetic", n.fillStyle = "#FFFFFF";
  for (let G = 0; G < C.length; ++G) {
    const k = r * Q * G - w;
    n.fillText(C[G], -y, k);
  }
  const m = n.getImageData(0, 0, f, d), M = new Uint8Array(m.data.buffer), p = new qA(), D = new a.Vector3(), R = new a.Vector3().setScalar(s * i), N = new a.Quaternion(0, 0, 0, 1);
  g = g ?? new a.Color(1, 1, 1);
  let F = 0;
  for (let G = 0; G < d; ++G)
    for (let k = 0; k < f; ++k) {
      const U = M[F + 3];
      if (U > 0) {
        const J = U / 255;
        D.set(k - 0.5 * (f - 1), 0.5 * (d - 1) - G, 0), D.multiplyScalar(i), p.pushSplat(D, R, N, J, g);
      }
      F += 4;
    }
  const L = new _A({ packedSplats: p });
  return L.recolor = I, L;
}
function Nr({
  // URL of the image to convert to splats (example: `url: "./image.png"`)
  url: t,
  // Radius of each Gsplat, default covers 1-unit spacing well (default: 0.8)
  dotRadius: A,
  // Subsampling factor for the image. Higher values reduce resolution,
  // for example 2 will halve the width and height by averaging (default: 1)
  subXY: e,
  // Optional callback function to modify each Gsplat before it's added.
  // Return null to skip adding the Gsplat, or a number to set the opacity
  // and add the Gsplat with parameter values in the objects center, rgba etc. were
  // passed into the forEachSplat callback. Ending the callback in `return opacity;`
  // will retain the original opacity.
  // ((width: number, height: number, index: number, center: THREE.Vector3, scales: THREE.Vector3, quaternion: THREE.Quaternion, opacity: number, color: THREE.Color) => number | null)
  forEachSplat: I
}) {
  return A = A ?? 0.8, e = Math.max(1, Math.floor(e ?? 1)), new _A({
    constructSplats: async (g) => new Promise((s, B) => {
      const Q = new Image();
      Q.crossOrigin = "anonymous", Q.onerror = B, Q.onload = () => {
        const { width: i, height: C } = Q, E = document.createElement("canvas");
        E.width = i, E.height = C;
        const n = E.getContext("2d");
        if (!n) {
          B(new Error("Failed to create canvas context"));
          return;
        }
        n.imageSmoothingEnabled = !0, n.imageSmoothingQuality = "high";
        const o = Math.round(i / e), r = Math.round(C / e);
        n.drawImage(Q, 0, 0, o, r);
        try {
          const l = n.getImageData(0, 0, o, r), c = new Uint8Array(l.data.buffer), h = new a.Vector3(), u = new a.Vector3().setScalar(A), y = new a.Quaternion(0, 0, 0, 1), w = new a.Color();
          let f = 0;
          for (let d = 0; d < r; ++d)
            for (let m = 0; m < o; ++m) {
              const M = f * 4, p = c[M + 3];
              if (p > 0) {
                let D = p / 255;
                w.set(
                  c[M + 0] / 255,
                  c[M + 1] / 255,
                  c[M + 2] / 255
                ), h.set(
                  m - 0.5 * (o - 1),
                  0.5 * (r - 1) - d,
                  0
                ), u.setScalar(A), y.set(0, 0, 0, 1);
                let R = !0;
                if (I) {
                  const N = I(
                    o,
                    r,
                    f,
                    h,
                    u,
                    y,
                    D,
                    w
                  );
                  D = N ?? D, R = N !== null;
                }
                R && g.pushSplat(h, u, y, D, w);
              }
              f += 1;
            }
          s();
        } catch (l) {
          B(l);
        }
      }, Q.src = t;
    })
  });
}
function Ko({
  box: t,
  cells: A,
  dotScale: e,
  color: I,
  opacity: g
}) {
  A.x = Math.max(1, Math.round(A.x)), A.y = Math.max(1, Math.round(A.y)), A.z = Math.max(1, Math.round(A.z)), g = g ?? 1;
  const s = A.x * A.y * A.z, B = K("int", A.x), Q = K("int", A.y);
  K("int", A.z);
  const i = bA(0), C = new qt({
    numSplats: s,
    generator: NA(
      { index: "int" },
      { gsplat: W },
      ({ index: n }) => {
        if (!n)
          throw new Error("index is undefined");
        const o = Je(n, B), r = ge(n, B), l = Je(r, Q), c = ge(r, Q), h = KA({
          vectorType: "ivec3",
          x: o,
          y: l,
          z: c
        }), u = zs(i), y = KA({ vectorType: "ivec2", x: n, y: u }), w = XB(y), f = K("vec3", t.min), d = K("vec3", t.max), m = Gt(d, f), M = ge(dA(ct(h), w), K("vec3", A));
        let p, D, R;
        I ? (p = K("float", I.r), D = K("float", I.g), R = K("float", I.b)) : { r: p, g: D, b: R } = Nt(M).outputs;
        const N = KA({
          vectorType: "vec4",
          r: p,
          g: D,
          b: R,
          a: K("float", g)
        }), F = dA(f, EA(m, M)), L = ct(K("float", e)), G = K("vec4", new a.Quaternion(0, 0, 0, 1));
        let k = Bt({
          flags: Be("uint", "GSPLAT_FLAG_ACTIVE"),
          index: n,
          center: F,
          scales: L,
          quaternion: G,
          rgba: N
        });
        return k = E.applyGsplat(k), { gsplat: k };
      },
      {
        globals: () => [SA]
      }
    ),
    update: ({ time: n }) => {
      i.value = n, E.update(C), C.updateVersion();
    }
  }), E = new ft();
  return C;
}
const qo = {
  box: new a.Box3(
    new a.Vector3(-1, -1, -1),
    new a.Vector3(1, 1, 1)
  ),
  density: 100,
  fallDirection: new a.Vector3(-1, -3, 1).normalize(),
  fallVelocity: 0.02,
  wanderScale: 0.04,
  wanderVariance: 2,
  color1: new a.Color(1, 1, 1),
  color2: new a.Color(0.5, 0.5, 1),
  minScale: 1e-3,
  maxScale: 5e-3,
  anisoScale: new a.Vector3(1, 1, 1)
}, zo = {
  box: new a.Box3(
    new a.Vector3(-2, -1, -2),
    new a.Vector3(2, 5, 2)
  ),
  density: 10,
  fallDirection: new a.Vector3(0, -1, 0),
  fallVelocity: 2,
  wanderScale: 0.1,
  wanderVariance: 1,
  color1: new a.Color(1, 1, 1),
  color2: new a.Color(0.25, 0.25, 0.5),
  minScale: 5e-3,
  maxScale: 0.01,
  anisoScale: new a.Vector3(0.1, 1, 0.1)
};
function Zo({
  // min and max box extents of the snowBox
  box: t,
  // minimum y-coordinate to clamp particle position, which can be used to
  // fake hitting a ground plane and lingering there for a bit
  minY: A,
  // number of Gsplats to generate (default: calculated from box and density)
  numSplats: e,
  // density of Gsplats per unit volume (default: 100)
  density: I,
  // The xyz anisotropic scale of the Gsplat, which can be used for example
  // to elongate rain particles (default: (1, 1, 1))
  anisoScale: g,
  // Minimum Gsplat particle scale (default: 0.001)
  minScale: s,
  // Maximum Gsplat particle scale (default: 0.005)
  maxScale: B,
  // The average direction of fall (default: (0, -1, 0))
  fallDirection: Q,
  // The average speed of the fall (multiplied with fallDirection) (default: 0.02)
  fallVelocity: i,
  // The world scale of wandering overlay motion (default: 0.01)
  wanderScale: C,
  // Controls how uniformly the particles wander in sync, more variance mean
  // more randomness in the motion (default: 2)
  wanderVariance: E,
  // Color 1 of the two colors interpolated between (default: (1, 1, 1))
  color1: n,
  // Color 2 of the two colors interpolated between (default: (0.5, 0.5, 1))
  color2: o,
  // The base opacity of the Gsplats (default: 1)
  opacity: r,
  // Optional callback function to call each frame.
  onFrame: l
}) {
  t = t ?? new a.Box3(new a.Vector3(-1, -1, -1), new a.Vector3(1, 1, 1));
  const c = (t.max.x - t.min.x) * (t.max.y - t.min.y) * (t.max.z - t.min.z);
  I = I ?? 100, e = e ?? Math.max(1, Math.min(1e6, Math.round(c * I)));
  const h = bA(s ?? 1e-3), u = bA(B ?? 5e-3), y = At(
    ((g == null ? void 0 : g.clone()) ?? new a.Vector3(1, 1, 1)).normalize()
  ), w = At(
    (Q ?? new a.Vector3(0, -1, 0)).normalize()
  ), f = bA(i ?? 0.02), d = bA(C ?? 0.01), m = bA(E ?? 2), M = At(n ?? new a.Color(1, 1, 1)), p = At(o ?? new a.Color(0.5, 0.5, 1)), D = bA(r ?? 1), R = bA(0), N = At(new a.Vector3(0, 0, 0)), F = At(t.min), L = At(t.max), G = bA(A ?? Number.NEGATIVE_INFINITY), k = Gt(L, F), U = new qt({
    numSplats: e,
    generator: NA(
      { index: "int" },
      { gsplat: W },
      ({ index: AA }) => {
        if (!AA)
          throw new Error("index not defined");
        const z = be(AA), eA = Nt(z).outputs.w;
        let tA = ct(z), X = se(EA(eA, K("float", 100)));
        X = Te(EA(Be("float", "PI"), X)), X = dA(h, EA(X, Gt(u, h)));
        const b = EA(X, y), _ = se(EA(eA, K("float", 10))), j = se(eA), P = jg(M, p, j), Y = EA(P, _), uA = be(
          KA({
            vectorType: "ivec2",
            x: AA,
            y: K("int", 6837)
          })
        );
        let nA = ct(uA), wA = EA(Nt(uA).outputs.w, m);
        wA = dA(R, wA), tA = dA(tA, N);
        const yA = Zg(
          tA,
          K("vec3", new a.Vector3(1, 1, 1))
        );
        tA = dA(F, EA(k, yA));
        const MA = K("vec4", new a.Quaternion(0, 0, 0, 1));
        nA = Te(dA(ct(wA), nA)), nA = EA(nA, d);
        let rA = dA(tA, nA), LA = Nt(rA).outputs.y;
        LA = Vg(G, LA), rA = KA({ vector: rA, y: LA });
        let FA = Bt({
          flags: Be("uint", "GSPLAT_FLAG_ACTIVE"),
          index: AA,
          center: rA,
          scales: b,
          quaternion: MA,
          rgb: Y,
          opacity: D
        });
        return FA = J.applyGsplat(FA), { gsplat: FA };
      },
      {
        globals: () => [SA]
      }
    ),
    update: ({ object: AA, time: z, deltaTime: eA }) => {
      R.value = z, J.update(U);
      const tA = w.value.clone().multiplyScalar(f.value * eA);
      N.value.add(tA), AA.visible = D.value > 0, l == null || l({ object: AA, time: z, deltaTime: eA }), U.updateVersion();
    }
  }), J = new ft();
  return {
    snow: U,
    min: F,
    max: L,
    minY: G,
    color1: M,
    color2: p,
    opacity: D,
    fallVelocity: f,
    wanderVariance: m,
    wanderScale: d,
    fallDirection: w,
    minScale: h,
    maxScale: u,
    anisoScale: y
  };
}
const Sr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DEFAULT_RAIN: zo,
  DEFAULT_SNOW: qo,
  snowBox: Zo,
  staticBox: Ko
}, Symbol.toStringTag, { value: "Module" }));
function _Q(t) {
  return NA({ gsplat: W }, { gsplat: W }, ({ gsplat: A }) => {
    if (!A)
      throw new Error("No gsplat input");
    let e = Ue(A);
    const I = t.applyGsplat(A), g = at(I).outputs.center, s = Ue(I), B = dB(g, s), Q = Ms(B, K("float", 0));
    e = tI(Q, AI(e), e);
    const i = dA(
      EA(e, K("float", 0.5)),
      K("float", 0.5)
    );
    return A = Bt({ gsplat: A, rgb: i }), { gsplat: A };
  });
}
function Vo(t) {
  t.enableWorldToView = !0, t.worldModifier = _Q(t.context.worldToView), t.updateGenerator();
}
function PQ(t, A, e, I) {
  return NA({ gsplat: W }, { gsplat: W }, ({ gsplat: g }) => {
    if (!g)
      throw new Error("No gsplat input");
    let { center: s } = at(g).outputs;
    s = t.apply(s);
    const { z: B } = Nt(s).outputs;
    let Q = _B(AI(B), A, e);
    return Q = tI(I, Gt(K("float", 1), Q), Q), g = Bt({ gsplat: g, r: Q, g: Q, b: Q }), { gsplat: g };
  });
}
function jo(t, A, e, I) {
  t.enableWorldToView = !0;
  const g = K("float", A), s = K("float", e), B = K("bool", I ?? !1);
  return t.worldModifier = PQ(
    t.context.worldToView,
    g,
    s,
    B
  ), t.updateGenerator(), {
    minDepth: g,
    maxDepth: s,
    reverse: B
  };
}
const Gr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  makeDepthColorModifier: PQ,
  makeNormalColorModifier: _Q,
  setDepthColor: jo,
  setWorldNormalColor: Vo
}, Symbol.toStringTag, { value: "Module" })), Ht = class Ht {
  static createButton(A, e = {}) {
    const I = navigator.xr;
    if (!I)
      return null;
    const g = I, s = document.createElement("button");
    A.xr.enabled = !0, A.xr.setReferenceSpaceType("local");
    function B() {
      let n = null;
      async function o(c) {
        console.log("onSessionStarted"), c.addEventListener("end", r), await A.xr.setSession(c), s.textContent = "EXIT VR", n = c;
      }
      function r() {
        console.log("onSessionEnded"), n == null || n.removeEventListener("end", r), s.textContent = "ENTER VR", n = null;
      }
      s.style.display = "", s.style.cursor = "pointer", s.style.left = "calc(50% - 100px)", s.style.width = "200px", s.style.height = "100px", s.textContent = "ENTER VR";
      const l = {
        ...e,
        optionalFeatures: [
          // "local-floor",
          // "bounded-floor",
          // "layers",
          ...e.optionalFeatures || []
        ]
      };
      s.onmouseenter = () => {
        s.style.opacity = "1.0";
      }, s.onmouseleave = () => {
        s.style.opacity = "0.5";
      }, s.onclick = () => {
        n === null ? (console.log("requesting session"), g.requestSession("immersive-vr", l).then(
          o
        )) : (console.log("ending session"), n.end());
      };
    }
    function Q() {
      s.style.display = "none", s.style.cursor = "auto", s.style.left = "calc(50% - 75px)", s.style.width = "150px", s.onmouseenter = null, s.onmouseleave = null, s.onclick = null;
    }
    function i() {
      Q(), s.textContent = "VR NOT SUPPORTED";
    }
    function C(n) {
      Q(), console.warn(
        "Exception when trying to call xr.isSessionSupported",
        n
      ), s.textContent = "VR NOT ALLOWED";
    }
    function E(n) {
      n.style.position = "absolute", n.style.bottom = "20px", n.style.padding = "12px 6px", n.style.border = "1px solid #fff", n.style.borderRadius = "4px", n.style.background = "rgba(0,0,0,0.1)", n.style.color = "#fff", n.style.font = "normal 13px sans-serif", n.style.textAlign = "center", n.style.opacity = "0.5", n.style.outline = "none", n.style.zIndex = "999";
    }
    return s.id = "VRButton", s.style.display = "none", E(s), g.isSessionSupported("immersive-vr").then((n) => {
      n ? B() : i(), n && Ht.xrSessionIsGranted && s.click();
    }).catch(C), s;
  }
  static registerSessionGrantedListener() {
    const A = navigator.xr;
    if (!A)
      return null;
    const e = A;
    /WebXRViewer\//i.test(navigator.userAgent) || e.addEventListener("sessiongranted", () => {
      Ht.xrSessionIsGranted = !0;
    });
  }
};
Ht.xrSessionIsGranted = !1;
let Ze = Ht;
Ze.registerSessionGrantedListener();
const Xo = 0.5, _o = 0.5, Po = 0;
var gI = /* @__PURE__ */ ((t) => (t.w = "wrist", t.t0 = "thumb-metacarpal", t.t1 = "thumb-phalanx-proximal", t.t2 = "thumb-phalanx-distal", t.t3 = "thumb-tip", t.i0 = "index-finger-metacarpal", t.i1 = "index-finger-phalanx-proximal", t.i2 = "index-finger-phalanx-intermediate", t.i3 = "index-finger-phalanx-distal", t.i4 = "index-finger-tip", t.m0 = "middle-finger-metacarpal", t.m1 = "middle-finger-phalanx-proximal", t.m2 = "middle-finger-phalanx-intermediate", t.m3 = "middle-finger-phalanx-distal", t.m4 = "middle-finger-tip", t.r0 = "ring-finger-metacarpal", t.r1 = "ring-finger-phalanx-proximal", t.r2 = "ring-finger-phalanx-intermediate", t.r3 = "ring-finger-phalanx-distal", t.r4 = "ring-finger-tip", t.p0 = "pinky-finger-metacarpal", t.p1 = "pinky-finger-phalanx-proximal", t.p2 = "pinky-finger-phalanx-intermediate", t.p3 = "pinky-finger-phalanx-distal", t.p4 = "pinky-finger-tip", t))(gI || {});
const OQ = Object.keys(gI), kr = OQ.length, xr = {
  w: 0,
  t0: 1,
  t1: 2,
  t2: 3,
  t3: 4,
  i0: 5,
  i1: 6,
  i2: 7,
  i3: 8,
  i4: 9,
  m0: 10,
  m1: 11,
  m2: 12,
  m3: 13,
  m4: 14,
  r0: 15,
  r1: 16,
  r2: 17,
  r3: 18,
  r4: 19,
  p0: 20,
  p1: 21,
  p2: 22,
  p3: 23,
  p4: 24
}, ee = {
  w: 0.02,
  t0: 0.02,
  t1: 0.014,
  t2: 0.0115,
  t3: 85e-4,
  i0: 0.022,
  i1: 0.012,
  i2: 85e-4,
  i3: 75e-4,
  i4: 65e-4,
  m0: 0.021,
  m1: 0.012,
  m2: 8e-3,
  m3: 75e-4,
  m4: 65e-4,
  r0: 0.019,
  r1: 0.011,
  r2: 75e-4,
  r3: 7e-3,
  r4: 6e-3,
  p0: 0.012,
  p1: 0.01,
  p2: 7e-3,
  p3: 65e-4,
  p4: 55e-4
}, Oo = [
  ["w", "t0", "t1", "t2", "t3"],
  ["w", "i0", "i1", "i2", "i3", "i4"],
  ["w", "m0", "m1", "m2", "m3", "m4"],
  ["w", "r0", "r1", "r2", "r3", "r4"],
  ["w", "p0", "p1", "p2", "p3", "p4"]
], Wo = [
  [8, 10, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6],
  [8, 19, 14, 8, 6]
], Rr = ["t3", "i4", "m4", "r4", "p4"], Ur = ["i4", "m4", "r4", "p4"];
var WQ = /* @__PURE__ */ ((t) => (t.left = "left", t.right = "right", t))(WQ || {});
const Ve = Object.keys(WQ);
class Lr {
  constructor() {
    this.hands = {}, this.last = {}, this.values = {}, this.tests = {}, this.lastTests = {}, this.updated = !1;
  }
  update({ xr: A, xrFrame: e }) {
    const I = A.getSession();
    if (!I)
      return;
    const g = A.getReferenceSpace();
    if (g && e.getJointPose) {
      this.last = this.hands, this.lastTests = this.tests, this.hands = {}, this.values = {}, this.tests = {};
      for (const s of I.inputSources) {
        if (!s.hand)
          continue;
        const B = s.handedness;
        this.hands[B] = {};
        for (const Q of OQ) {
          const i = s.hand.get(gI[Q]);
          if (i) {
            const C = e.getJointPose(i, g);
            if (C) {
              const { position: E, orientation: n } = C.transform;
              this.hands[B][Q] = {
                position: new JA(E.x, E.y, E.z),
                quaternion: new BI(
                  n.x,
                  n.y,
                  n.z,
                  n.w
                ),
                radius: C.radius || 1e-3
              };
            }
          }
        }
      }
      for (const s of Ve)
        for (const { key: B, value: Q } of [
          { key: `${s}AllTips`, value: this.allTipsTouching(s) },
          {
            key: `${s}IndexThumb`,
            value: this.touching(s, "i4", s, "t3")
          },
          {
            key: `${s}MiddleThumb`,
            value: this.touching(s, "m4", s, "t3")
          },
          {
            key: `${s}RingThumb`,
            value: this.touching(s, "r4", s, "t3")
          },
          {
            key: `${s}PinkyThumb`,
            value: this.touching(s, "p4", s, "t3")
          },
          { key: `${s}TriTips`, value: this.triTipsTouching(s) }
        ])
          this.values[B] = Q, this.tests[B] = Q === 1 ? !0 : Q === 0 ? !1 : this.lastTests[B] ?? !1;
    }
  }
  makeGhostMesh() {
    const A = new JA(), e = new JA(0.01, 0.01, 0.01), I = new BI(0, 0, 0, 1), g = new QI(1, 1, 1), s = Math.PI * 3;
    new QI(1, 1, 1);
    let B = 1;
    const Q = new _A({
      onFrame: () => {
        let i = 0;
        for (const C of Ve) {
          const E = this.hands[C];
          for (const [n, o] of Oo.entries())
            for (let r = 1; r < o.length; ++r) {
              const l = Wo[n][r - 1] * 2, c = r + 1 === o.length, h = E == null ? void 0 : E[o[r - 1]], u = E == null ? void 0 : E[o[r]];
              for (let y = 0; y < l; ++y) {
                const w = (y + 0.5) / l;
                if (B = 0, h && u) {
                  A.copy(h.position).lerp(u.position, w), I.copy(h.quaternion).slerp(u.quaternion, w);
                  const f = ee[o[r - 1]], d = ee[o[r]];
                  let m = (1 - w) * f + w * d;
                  c && w > 0.8 && (m *= Math.sqrt(1 - ((w - 0.8) / 0.2) ** 2)), e.set(0.65 * m, 0.5 * m, 3e-3), g.set(
                    0.55 + 0.45 * Math.sin(A.x * s),
                    0.55 + 0.45 * Math.sin(A.y * s),
                    0.55 + 0.45 * Math.sin(A.z * s)
                  ), C === "right" && g.set(1 - g.r, 1 - g.g, 1 - g.b), B = 0.75;
                }
                Q.packedSplats.setSplat(
                  i,
                  A,
                  e,
                  I,
                  B,
                  g
                ), i += 1;
              }
            }
        }
        Q.packedSplats.numSplats = i, Q.packedSplats.needsUpdate = !0, Q.numSplats = i, Q.updateVersion();
      }
    });
    return Q;
  }
  distance(A, e, I, g, s = !1) {
    const B = s ? this.last[A] : this.hands[A], Q = s ? this.last[I] : this.hands[I], i = B == null ? void 0 : B[e], C = Q == null ? void 0 : Q[g];
    return !i || !C ? Number.POSITIVE_INFINITY : i.position.distanceTo(C.position);
  }
  separation(A, e, I, g, s = !1) {
    const B = this.distance(A, e, I, g, s);
    return B === Number.POSITIVE_INFINITY ? Number.POSITIVE_INFINITY : B - ee[e] - ee[g];
  }
  touching(A, e, I, g, s = !1) {
    const B = this.separation(A, e, I, g, s);
    return B === Number.POSITIVE_INFINITY ? Number.POSITIVE_INFINITY : 1 - Math.max(0, Math.min(1, B / 0.01 - Po));
  }
  allTipsTouching(A, e = !1) {
    return Math.min(
      this.touching(A, "t3", A, "i4", e),
      this.touching(A, "i4", A, "m4", e),
      this.touching(A, "m4", A, "r4", e),
      this.touching(A, "r4", A, "p4", e)
      // this.touching(hand, "p4", hand, "t3", last),
    );
  }
  triTipsTouching(A, e = !1) {
    return Math.min(
      this.touching(A, "t3", A, "i4", e),
      this.touching(A, "i4", A, "m4", e),
      this.touching(A, "m4", A, "t3", e)
    );
  }
}
class Yr {
  constructor({
    xrHands: A,
    control: e,
    moveInertia: I,
    rotateInertia: g
  }) {
    this.lastGrip = {}, this.lastPivot = new JA(), this.rotateVelocity = 0, this.velocity = new JA(), this.xrHands = A, this.control = e, this.moveInertia = I ?? Xo, this.rotateInertia = g ?? _o;
  }
  update(A) {
    var s, B, Q, i, C;
    const e = {};
    for (const E of Ve) {
      const n = this.xrHands.hands[E];
      n && this.xrHands.tests[`${E}MiddleThumb`] && (e[E] = new JA().add(((s = n.t3) == null ? void 0 : s.position) ?? new JA()).add(((B = n.i4) == null ? void 0 : B.position) ?? new JA()).add(((Q = n.m4) == null ? void 0 : Q.position) ?? new JA()).add(((i = n.r4) == null ? void 0 : i.position) ?? new JA()).add(((C = n.p4) == null ? void 0 : C.position) ?? new JA()).multiplyScalar(1 / 5));
    }
    if (e.left && e.right && this.lastGrip.left && this.lastGrip.right) {
      const E = e.left.clone().add(e.right).multiplyScalar(0.5), n = this.lastGrip.left.clone().add(this.lastGrip.right).multiplyScalar(0.5);
      this.lastPivot = E;
      const o = E.clone().applyMatrix4(this.control.matrix);
      o.sub(n.clone().applyMatrix4(this.control.matrix)), o.multiplyScalar(1 / A), this.velocity.lerp(o, 1 - Math.exp(-20 * A));
      const r = Math.atan2(e.left.z - E.z, e.left.x - E.x), l = Math.atan2(
        this.lastGrip.left.z - n.z,
        this.lastGrip.left.x - n.x
      );
      let c = r - l;
      c > Math.PI ? c -= Math.PI * 2 : c < -Math.PI && (c += Math.PI * 2);
      const h = c / A, u = Math.exp(-20 * A);
      this.rotateVelocity = this.rotateVelocity * u + h * (1 - u);
    } else if (this.rotateVelocity *= Math.exp(-A / this.rotateInertia), e.left && this.lastGrip.left) {
      const E = e.left.clone().applyMatrix4(this.control.matrix);
      E.sub(this.lastGrip.left.clone().applyMatrix4(this.control.matrix)), E.multiplyScalar(1 / A), this.velocity.lerp(E, 1 - Math.exp(-20 * A));
    } else if (e.right && this.lastGrip.right) {
      const E = e.right.clone().applyMatrix4(this.control.matrix);
      E.sub(
        this.lastGrip.right.clone().applyMatrix4(this.control.matrix)
      ), E.multiplyScalar(1 / A), this.velocity.lerp(E, 1 - Math.exp(-20 * A));
    } else
      this.velocity.multiplyScalar(Math.exp(-A / this.moveInertia));
    const I = this.lastPivot.clone().negate(), g = new pe().makeTranslation(I).premultiply(new pe().makeRotationY(this.rotateVelocity * A)).premultiply(new pe().makeTranslation(this.lastPivot));
    this.control.matrix.multiply(g), this.control.matrix.decompose(
      this.control.position,
      this.control.quaternion,
      this.control.scale
    ), this.control.updateMatrixWorld(!0), this.control.position.sub(this.velocity.clone().multiplyScalar(A)), this.lastGrip = e;
  }
}
const $o = 1, Ar = 2, tr = 2e-3, er = 6e-3, Ir = 15e-4, gr = 0.15, sr = 0.15, Br = 0.1, Qr = 2, ir = 1, nr = 200, Cr = 400, Er = 50, ar = {
  KeyW: new a.Vector3(0, 0, -1),
  KeyS: new a.Vector3(0, 0, 1),
  KeyA: new a.Vector3(-1, 0, 0),
  KeyD: new a.Vector3(1, 0, 0),
  KeyR: new a.Vector3(0, 1, 0),
  KeyF: new a.Vector3(0, -1, 0)
}, or = {
  ArrowUp: new a.Vector3(0, 0, -1),
  ArrowDown: new a.Vector3(0, 0, 1),
  ArrowLeft: new a.Vector3(-1, 0, 0),
  ArrowRight: new a.Vector3(1, 0, 0),
  PageUp: new a.Vector3(0, 1, 0),
  PageDown: new a.Vector3(0, -1, 0)
}, rr = {
  KeyQ: new a.Vector3(0, 0, 1),
  KeyE: new a.Vector3(0, 0, -1)
}, cr = {
  Home: new a.Vector3(0, -1, 0),
  End: new a.Vector3(0, 1, 0),
  Insert: new a.Vector3(-1, 0, 0),
  Delete: new a.Vector3(1, 0, 0)
};
class Jr {
  constructor({ canvas: A }) {
    this.lastTime = 0, this.fpsMovement = new hr({}), this.pointerControls = new lr({ canvas: A });
  }
  update(A) {
    const e = performance.now(), I = (e - (this.lastTime || e)) / 1e3;
    this.lastTime = e, this.fpsMovement.update(I, A), this.pointerControls.update(I, A);
  }
}
class hr {
  constructor({
    moveSpeed: A,
    rollSpeed: e,
    stickThreshold: I,
    rotateSpeed: g,
    keycodeMoveMapping: s,
    keycodeRotateMapping: B,
    gamepadMapping: Q,
    capsMultiplier: i,
    shiftMultiplier: C,
    ctrlMultiplier: E,
    xr: n
  } = {}) {
    this.enable = !0, this.moveSpeed = A ?? $o, this.rollSpeed = e ?? Ar, this.stickThreshold = I ?? Br, this.rotateSpeed = g ?? Qr, this.keycodeMoveMapping = s ?? {
      ...ar,
      ...or
    }, this.keycodeRotateMapping = B ?? {
      ...rr,
      ...cr
    }, this.gamepadMapping = Q ?? {
      4: "rollLeft",
      5: "rollRight",
      6: "ctrl",
      7: "shift"
    }, this.capsMultiplier = i ?? 10, this.shiftMultiplier = C ?? 5, this.ctrlMultiplier = E ?? 1 / 5, this.xr = n, this.keydown = {}, this.keycode = {}, document.addEventListener("keydown", (o) => {
      this.keydown[o.key] = !0, this.keycode[o.code] = !0;
    }), document.addEventListener("keyup", (o) => {
      this.keydown[o.key] = !1, this.keycode[o.code] = !1;
    }), window.addEventListener("blur", () => {
      this.keydown = {}, this.keycode = {};
    });
  }
  // Call this method in your render loop with `control` set to the object to control
  // (`THREE.Camera` or a `THREE.Object3D` that contains it), with `deltaTime`
  // in seconds since the last update.
  update(A, e) {
    var E, n;
    if (!this.enable)
      return;
    const I = [new a.Vector2(), new a.Vector2()], g = navigator.getGamepads()[0];
    g && (I[0].set(g.axes[0], g.axes[1]), I[1].set(g.axes[2], g.axes[3]));
    const s = (g == null ? void 0 : g.buttons.map((o) => o.pressed)) || [], B = Array.from(((n = (E = this.xr) == null ? void 0 : E.getSession()) == null ? void 0 : n.inputSources) ?? []);
    for (const o of B) {
      const r = o.gamepad;
      if (r)
        switch (o.handedness) {
          case "none": {
            I[0].x += r.axes[0], I[0].y += r.axes[1], I[1].x += r.axes[2], I[1].y += r.axes[3];
            break;
          }
          case "left": {
            I[0].x += r.axes[2], I[0].y += r.axes[3];
            break;
          }
          case "right": {
            I[1].x += r.axes[2], I[1].y += r.axes[3];
            break;
          }
        }
    }
    for (const o of I)
      o.x = Math.abs(o.x) >= this.stickThreshold ? o.x : 0, o.y = Math.abs(o.y) >= this.stickThreshold ? o.y : 0;
    const Q = new a.Vector3(
      I[1].x,
      I[1].y,
      0
    ).multiplyScalar(this.rotateSpeed);
    for (const [o, r] of Object.entries(this.keycodeRotateMapping))
      this.keycode[o] && Q.add(r);
    for (const o in this.gamepadMapping)
      if (s[Number.parseInt(o)])
        switch (this.gamepadMapping[o]) {
          case "rollLeft":
            Q.z += 1;
            break;
          case "rollRight":
            Q.z -= 1;
            break;
        }
    if (Q.multiply(
      new a.Vector3(this.rotateSpeed, this.rotateSpeed, this.rollSpeed)
    ), Q.manhattanLength() > 0) {
      Q.multiplyScalar(A);
      const o = new a.Euler().setFromQuaternion(
        e.quaternion,
        "YXZ"
      );
      o.y -= Q.x, o.x = Math.max(
        -Math.PI / 2,
        Math.min(Math.PI / 2, o.x - Q.y)
      ), o.z = Math.max(-Math.PI, Math.min(Math.PI, o.z + Q.z)), e.quaternion.setFromEuler(o);
    }
    const i = new a.Vector3(I[0].x, 0, I[0].y);
    for (const [o, r] of Object.entries(this.keycodeMoveMapping))
      this.keycode[o] && i.add(r);
    let C = 1;
    this.keydown.CapsLock && (C *= this.capsMultiplier), (this.keycode.ShiftLeft || this.keycode.ShiftRight) && (C *= this.shiftMultiplier), (this.keycode.ControlLeft || this.keycode.ControlRight) && (C *= this.ctrlMultiplier);
    for (const o in this.gamepadMapping)
      if (s[Number.parseInt(o)])
        switch (this.gamepadMapping[o]) {
          case "shift":
            C *= this.shiftMultiplier;
            break;
          case "ctrl":
            C *= this.ctrlMultiplier;
            break;
        }
    i.applyQuaternion(e.quaternion), e.position.add(
      i.multiplyScalar(this.moveSpeed * C * A)
    );
  }
}
class lr {
  constructor({
    // The HTML canvas element to attach pointer events to
    canvas: A,
    // Speed of rotation (default DEFAULT_ROTATE_SPEED)
    rotateSpeed: e,
    // Speed of sliding when dragging with right/middle mouse button or two fingers
    // (default DEFAULT_SLIDE_SPEED)
    slideSpeed: I,
    // Speed of movement when using mouse scroll wheel (default DEFAULT_SCROLL_SPEED)
    scrollSpeed: g,
    // Swap the direction of rotation and sliding (default: false)
    swapRotateSlide: s,
    // Reverse the direction of rotation (default: false)
    reverseRotate: B,
    // Reverse the direction of sliding (default: false)
    reverseSlide: Q,
    // Reverse the direction of swipe gestures (default: false)
    reverseSwipe: i,
    // Reverse the direction of scroll wheel movement (default: false)
    reverseScroll: C,
    // Inertia factor for movement (default: DEFAULT_MOVE_INERTIA)
    moveInertia: E,
    // Inertia factor for rotation (default: DEFAULT_ROTATE_INERTIA)
    rotateInertia: n,
    // Pointer rolling scale factor (default: DEFAULT_POINTER_ROLL_SCALE)
    pointerRollScale: o,
    // Callback for double press events (default: () => {})
    doublePress: r
  }) {
    this.enable = !0, this.canvas = A, this.rotateSpeed = e ?? tr, this.slideSpeed = I ?? er, this.scrollSpeed = g ?? Ir, this.swapRotateSlide = s ?? !1, this.reverseRotate = B ?? !1, this.reverseSlide = Q ?? !1, this.reverseSwipe = i ?? !1, this.reverseScroll = C ?? !1, this.moveInertia = E ?? sr, this.rotateInertia = n ?? gr, this.pointerRollScale = o ?? ir, this.doublePress = r ?? (() => {
    }), this.doublePressLimitMs = Cr, this.doublePressDistance = Er, this.lastUp = null, this.rotating = null, this.sliding = null, this.dualPress = !1, this.scroll = new a.Vector3(), this.rotateVelocity = new a.Vector3(), this.moveVelocity = new a.Vector3(), A.addEventListener("pointerdown", (c) => {
      const h = this.getPointerPosition(c), u = h.clone(), y = h.clone(), w = !this.swapRotateSlide && !this.rotating && (c.pointerType !== "mouse" || c.button === 0) || this.swapRotateSlide && this.sliding && !this.rotating && (c.pointerType !== "mouse" || c.button === 1), { pointerId: f, timeStamp: d } = c;
      if (w)
        this.rotating = { initial: u, last: y, position: h, pointerId: f, timeStamp: d }, A.setPointerCapture(c.pointerId), this.dualPress = !1;
      else if (!this.sliding) {
        const m = c.pointerType === "mouse" ? c.button : void 0;
        this.sliding = {
          initial: u,
          last: y,
          position: h,
          pointerId: f,
          button: m,
          timeStamp: d
        }, A.setPointerCapture(c.pointerId), this.dualPress = this.rotating != null && d - this.rotating.timeStamp < nr;
      }
    });
    const l = (c) => {
      var y, w;
      ((y = this.rotating) == null ? void 0 : y.pointerId) === c.pointerId ? (this.rotating = null, A.releasePointerCapture(c.pointerId), this.dualPress && this.sliding && (A.releasePointerCapture(this.sliding.pointerId), this.sliding = null)) : ((w = this.sliding) == null ? void 0 : w.pointerId) === c.pointerId && (this.sliding = null, A.releasePointerCapture(c.pointerId), this.dualPress && this.rotating && (A.releasePointerCapture(this.rotating.pointerId), this.rotating = null));
      const h = this.getPointerPosition(c), u = this.lastUp;
      if (this.lastUp = { position: h, time: c.timeStamp }, u && u.position.distanceTo(h) < this.doublePressDistance) {
        const d = c.timeStamp - u.time;
        d < this.doublePressLimitMs && (this.lastUp = null, this.doublePress({ position: h, intervalMs: d }));
      }
    };
    document.addEventListener("pointerup", l), document.addEventListener("pointercancel", l), document.addEventListener("pointermove", (c) => {
      var h, u;
      ((h = this.rotating) == null ? void 0 : h.pointerId) === c.pointerId ? this.rotating.position = this.getPointerPosition(c) : ((u = this.sliding) == null ? void 0 : u.pointerId) === c.pointerId && (this.sliding.position = this.getPointerPosition(c));
    }), A.addEventListener("contextmenu", (c) => {
      c.preventDefault();
    }), A.addEventListener("wheel", (c) => {
      this.scroll.add(
        new a.Vector3(c.deltaX, c.deltaY, c.deltaZ)
      ), c.preventDefault();
    });
  }
  getPointerPosition(A) {
    const e = this.canvas.getBoundingClientRect();
    return new a.Vector2(
      A.clientX - e.left,
      A.clientY - e.top
    );
  }
  update(A, e) {
    if (!this.enable)
      return;
    if (this.dualPress && this.rotating && this.sliding) {
      const g = [
        this.rotating.position.clone().sub(this.rotating.last),
        this.sliding.position.clone().sub(this.sliding.last)
      ], s = g[0].dot(g[1]);
      if (s >= 0.2) {
        const B = g[0].clone().add(g[1]), Q = new a.Vector3(B.x, -B.y, 0);
        Q.multiplyScalar(this.slideSpeed * (this.reverseSwipe ? 1 : -1)), Q.applyQuaternion(e.quaternion), e.position.add(Q), this.moveVelocity = Q.clone().multiplyScalar(1 / A);
      } else if (s <= -0.2) {
        const B = this.sliding.last.clone().sub(this.rotating.last), Q = B.length();
        B.multiplyScalar(1 / Q).normalize();
        const i = new a.Vector2(-B.y, B.x), C = [g[0].dot(B), g[1].dot(B)], E = [g[0].dot(i), g[1].dot(i)], n = this.rotating.last.clone().add(this.sliding.last).multiplyScalar(0.5);
        let o = new a.Vector3();
        if (e instanceof a.Camera) {
          const y = new a.Vector2(
            n.x / this.canvas.clientWidth * 2 - 1,
            -(n.y / this.canvas.clientHeight) * 2 + 1
          ), w = new a.Raycaster();
          w.setFromCamera(y, e), o = w.ray.direction;
        }
        const r = C[1] - C[0], l = o.multiplyScalar(r * this.slideSpeed);
        e.position.add(l), this.moveVelocity = l.clone().multiplyScalar(1 / A);
        const c = [
          Math.atan(E[0] / (-0.5 * Q)),
          Math.atan(E[1] / (0.5 * Q))
        ], h = 0.5 * (c[0] + c[1]) * this.pointerRollScale, u = new a.Euler().setFromQuaternion(
          e.quaternion,
          "YXZ"
        );
        u.z = Math.max(
          -Math.PI,
          Math.min(Math.PI, u.z + 0.5 * h)
        ), e.quaternion.setFromEuler(u);
      }
      this.rotating.last.copy(this.rotating.position), this.sliding.last.copy(this.sliding.position);
    } else {
      const g = new a.Vector3();
      if (this.rotating && !this.dualPress) {
        const B = this.rotating.position.clone().sub(this.rotating.last);
        this.rotating.last.copy(this.rotating.position), g.set(B.x, B.y, 0), g.multiplyScalar(this.rotateSpeed * (this.reverseRotate ? -1 : 1)), this.rotateVelocity = g.clone().multiplyScalar(1 / A);
      } else
        this.rotateVelocity.multiplyScalar(
          Math.exp(-A / this.rotateInertia)
        ), g.addScaledVector(this.rotateVelocity, A);
      const s = new a.Euler().setFromQuaternion(
        e.quaternion,
        "YXZ"
      );
      if (s.y -= g.x, s.x = Math.max(
        -Math.PI / 2,
        Math.min(Math.PI / 2, s.x - g.y)
      ), s.z *= Math.exp(-0 * A), e.quaternion.setFromEuler(s), this.sliding && !this.dualPress) {
        const B = this.sliding.position.clone().sub(this.sliding.last);
        this.sliding.last.copy(this.sliding.position);
        const Q = this.sliding.button !== 2 ? new a.Vector3(B.x, 0, B.y) : new a.Vector3(B.x, -B.y, 0);
        Q.multiplyScalar(this.slideSpeed * (this.reverseSlide ? -1 : 1)), Q.applyQuaternion(e.quaternion), e.position.add(Q), this.moveVelocity = Q.clone().multiplyScalar(1 / A);
      } else
        this.moveVelocity.multiplyScalar(
          Math.exp(-A / this.moveInertia)
        ), e.position.addScaledVector(this.moveVelocity, A);
    }
    const I = this.scroll.multiplyScalar(this.scrollSpeed);
    I.set(I.x, I.z, I.y), this.reverseScroll && I.multiplyScalar(-1), I.applyQuaternion(e.quaternion), e.position.add(I), this.scroll.set(0, 0, 0);
  }
}
export {
  Ur as FINGER_TIPS,
  hr as FpsMovement,
  Ve as HANDS,
  WQ as Hand,
  Yr as HandMovement,
  OQ as JOINT_IDS,
  xr as JOINT_INDEX,
  ee as JOINT_RADIUS,
  Oo as JOINT_SEGMENTS,
  Wo as JOINT_SEGMENT_STEPS,
  Rr as JOINT_TIPS,
  gI as JointEnum,
  kr as NUM_JOINTS,
  qA as PackedSplats,
  Ee as PlyReader,
  lr as PointerControls,
  ne as Readback,
  qn as Sint8ToFloat,
  Jr as SparkControls,
  re as SparkRenderer,
  oe as SparkViewpoint,
  Ge as SplatAccumulator,
  Ce as SplatEdit,
  $a as SplatEditRgbaBlendMode,
  to as SplatEditSdf,
  Oa as SplatEditSdfType,
  eo as SplatEdits,
  vt as SplatFileType,
  qt as SplatGenerator,
  lo as SplatLoader,
  _A as SplatMesh,
  go as SplatModifier,
  dr as SplatSkinning,
  ft as SplatTransformer,
  Yo as SpzReader,
  tt as SpzWriter,
  Kn as Uint8ToFloat,
  Ze as VRButton,
  Lr as XrHands,
  Mr as constructAxes,
  pr as constructGrid,
  Fr as constructSpherePoints,
  yr as dyno,
  nC as flipPixels,
  Ie as floatToSint8,
  GA as floatToUint8,
  fA as fromHalf,
  Sr as generators,
  TQ as getSplatFileType,
  Nr as imageSplats,
  QC as isAndroid,
  BC as isMobile,
  iC as isOculus,
  Dr as isPcSogs,
  Gr as modifiers,
  CC as pixelsToPngUrl,
  Le as setPackedSplat,
  mr as textSplats,
  rt as toHalf,
  fr as transcodeSpz,
  Ye as unpackSplat,
  KQ as unpackSplats,
  wr as utils
};
//# sourceMappingURL=spark.module.min.js.map
